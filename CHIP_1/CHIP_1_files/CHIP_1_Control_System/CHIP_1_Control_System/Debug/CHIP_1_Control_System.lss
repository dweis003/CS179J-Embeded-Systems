
CHIP_1_Control_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000284  00800100  00001e94  00001f28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000064a  00800384  00800384  000021ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000021ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000300  00000000  00000000  00002220  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003e51  00000000  00000000  00002520  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000108c  00000000  00000000  00006371  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000027b3  00000000  00000000  000073fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000704  00000000  00000000  00009bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000108b  00000000  00000000  0000a2b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001861  00000000  00000000  0000b33f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  0000cba0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	60 c0       	rjmp	.+192    	; 0xc2 <__ctors_end>
       2:	00 00       	nop
       4:	7d c0       	rjmp	.+250    	; 0x100 <__bad_interrupt>
       6:	00 00       	nop
       8:	7b c0       	rjmp	.+246    	; 0x100 <__bad_interrupt>
       a:	00 00       	nop
       c:	79 c0       	rjmp	.+242    	; 0x100 <__bad_interrupt>
       e:	00 00       	nop
      10:	77 c0       	rjmp	.+238    	; 0x100 <__bad_interrupt>
      12:	00 00       	nop
      14:	75 c0       	rjmp	.+234    	; 0x100 <__bad_interrupt>
      16:	00 00       	nop
      18:	73 c0       	rjmp	.+230    	; 0x100 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	71 c0       	rjmp	.+226    	; 0x100 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6f c0       	rjmp	.+222    	; 0x100 <__bad_interrupt>
      22:	00 00       	nop
      24:	6d c0       	rjmp	.+218    	; 0x100 <__bad_interrupt>
      26:	00 00       	nop
      28:	6b c0       	rjmp	.+214    	; 0x100 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	69 c0       	rjmp	.+210    	; 0x100 <__bad_interrupt>
      2e:	00 00       	nop
      30:	67 c0       	rjmp	.+206    	; 0x100 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__vector_13>
      38:	63 c0       	rjmp	.+198    	; 0x100 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	61 c0       	rjmp	.+194    	; 0x100 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5f c0       	rjmp	.+190    	; 0x100 <__bad_interrupt>
      42:	00 00       	nop
      44:	5d c0       	rjmp	.+186    	; 0x100 <__bad_interrupt>
      46:	00 00       	nop
      48:	5b c0       	rjmp	.+182    	; 0x100 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	59 c0       	rjmp	.+178    	; 0x100 <__bad_interrupt>
      4e:	00 00       	nop
      50:	57 c0       	rjmp	.+174    	; 0x100 <__bad_interrupt>
      52:	00 00       	nop
      54:	55 c0       	rjmp	.+170    	; 0x100 <__bad_interrupt>
      56:	00 00       	nop
      58:	53 c0       	rjmp	.+166    	; 0x100 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	51 c0       	rjmp	.+162    	; 0x100 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4f c0       	rjmp	.+158    	; 0x100 <__bad_interrupt>
      62:	00 00       	nop
      64:	4d c0       	rjmp	.+154    	; 0x100 <__bad_interrupt>
      66:	00 00       	nop
      68:	4b c0       	rjmp	.+150    	; 0x100 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	49 c0       	rjmp	.+146    	; 0x100 <__bad_interrupt>
      6e:	00 00       	nop
      70:	47 c0       	rjmp	.+142    	; 0x100 <__bad_interrupt>
      72:	00 00       	nop
      74:	45 c0       	rjmp	.+138    	; 0x100 <__bad_interrupt>
      76:	00 00       	nop
      78:	43 c0       	rjmp	.+134    	; 0x100 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	41 c0       	rjmp	.+130    	; 0x100 <__bad_interrupt>
      7e:	00 00       	nop
      80:	3f c0       	rjmp	.+126    	; 0x100 <__bad_interrupt>
      82:	00 00       	nop
      84:	3d c0       	rjmp	.+122    	; 0x100 <__bad_interrupt>
      86:	00 00       	nop
      88:	3b c0       	rjmp	.+118    	; 0x100 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	eb 02       	muls	r30, r27
      8e:	f5 02       	muls	r31, r21
      90:	ff 02       	muls	r31, r31
      92:	09 03       	fmul	r16, r17
      94:	13 03       	mulsu	r17, r19
      96:	1d 03       	fmul	r17, r21
      98:	27 03       	mulsu	r18, r23
      9a:	31 03       	mulsu	r19, r17
      9c:	3b 03       	fmul	r19, r19
      9e:	45 03       	mulsu	r20, r21
      a0:	4f 03       	fmul	r20, r23
      a2:	59 03       	fmul	r21, r17
      a4:	6e 03       	fmul	r22, r22
      a6:	a5 03       	fmuls	r18, r21
      a8:	c9 03       	fmulsu	r20, r17
      aa:	ef 03       	fmulsu	r22, r23
      ac:	54 04       	cpc	r5, r4
      ae:	a5 04       	cpc	r10, r5
      b0:	0b 05       	cpc	r16, r11
      b2:	5c 05       	cpc	r21, r12
      b4:	b6 05       	cpc	r27, r6
      b6:	07 06       	cpc	r0, r23
      b8:	60 06       	cpc	r6, r16
      ba:	b7 06       	cpc	r11, r23
      bc:	27 07       	cpc	r18, r23
      be:	b3 07       	cpc	r27, r19
      c0:	0e 08       	sbc	r0, r14

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf ef       	ldi	r28, 0xFF	; 255
      c8:	d0 e4       	ldi	r29, 0x40	; 64
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	13 e0       	ldi	r17, 0x03	; 3
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	e4 e9       	ldi	r30, 0x94	; 148
      d6:	fe e1       	ldi	r31, 0x1E	; 30
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0b bf       	out	0x3b, r16	; 59
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <__do_copy_data+0x14>
      de:	07 90       	elpm	r0, Z+
      e0:	0d 92       	st	X+, r0
      e2:	a4 38       	cpi	r26, 0x84	; 132
      e4:	b1 07       	cpc	r27, r17
      e6:	d9 f7       	brne	.-10     	; 0xde <__do_copy_data+0x10>

000000e8 <__do_clear_bss>:
      e8:	29 e0       	ldi	r18, 0x09	; 9
      ea:	a4 e8       	ldi	r26, 0x84	; 132
      ec:	b3 e0       	ldi	r27, 0x03	; 3
      ee:	01 c0       	rjmp	.+2      	; 0xf2 <.do_clear_bss_start>

000000f0 <.do_clear_bss_loop>:
      f0:	1d 92       	st	X+, r1

000000f2 <.do_clear_bss_start>:
      f2:	ae 3c       	cpi	r26, 0xCE	; 206
      f4:	b2 07       	cpc	r27, r18
      f6:	e1 f7       	brne	.-8      	; 0xf0 <.do_clear_bss_loop>
      f8:	0e 94 14 0a 	call	0x1428	; 0x1428 <main>
      fc:	0c 94 48 0f 	jmp	0x1e90	; 0x1e90 <_exit>

00000100 <__bad_interrupt>:
     100:	7f cf       	rjmp	.-258    	; 0x0 <__vectors>

00000102 <pvPortMalloc>:

static size_t xNextFreeByte = ( size_t ) 0;
/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
     102:	cf 93       	push	r28
     104:	df 93       	push	r29
     106:	ec 01       	movw	r28, r24
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
		}
	#endif

	vTaskSuspendAll();
     108:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <vTaskSuspendAll>
	{
		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configTOTAL_HEAP_SIZE ) &&
     10c:	20 91 84 03 	lds	r18, 0x0384	; 0x800384 <__data_end>
     110:	30 91 85 03 	lds	r19, 0x0385	; 0x800385 <__data_end+0x1>
     114:	c9 01       	movw	r24, r18
     116:	8c 0f       	add	r24, r28
     118:	9d 1f       	adc	r25, r29
     11a:	8c 3d       	cpi	r24, 0xDC	; 220
     11c:	45 e0       	ldi	r20, 0x05	; 5
     11e:	94 07       	cpc	r25, r20
     120:	58 f4       	brcc	.+22     	; 0x138 <pvPortMalloc+0x36>
     122:	28 17       	cp	r18, r24
     124:	39 07       	cpc	r19, r25
     126:	58 f4       	brcc	.+22     	; 0x13e <pvPortMalloc+0x3c>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = &( xHeap.ucHeap[ xNextFreeByte ] );
     128:	e9 01       	movw	r28, r18
     12a:	ca 57       	subi	r28, 0x7A	; 122
     12c:	dc 4f       	sbci	r29, 0xFC	; 252
			xNextFreeByte += xWantedSize;			
     12e:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <__data_end+0x1>
     132:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <__data_end>
     136:	05 c0       	rjmp	.+10     	; 0x142 <pvPortMalloc+0x40>
static size_t xNextFreeByte = ( size_t ) 0;
/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL; 
     138:	c0 e0       	ldi	r28, 0x00	; 0
     13a:	d0 e0       	ldi	r29, 0x00	; 0
     13c:	02 c0       	rjmp	.+4      	; 0x142 <pvPortMalloc+0x40>
     13e:	c0 e0       	ldi	r28, 0x00	; 0
     140:	d0 e0       	ldi	r29, 0x00	; 0
			block. */
			pvReturn = &( xHeap.ucHeap[ xNextFreeByte ] );
			xNextFreeByte += xWantedSize;			
		}	
	}
	xTaskResumeAll();
     142:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <xTaskResumeAll>
		}
	}
	#endif	

	return pvReturn;
}
     146:	ce 01       	movw	r24, r28
     148:	df 91       	pop	r29
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
     14e:	08 95       	ret

00000150 <vListInitialise>:
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( xList *pxList )
{
     150:	fc 01       	movw	r30, r24
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     152:	03 96       	adiw	r24, 0x03	; 3
     154:	92 83       	std	Z+2, r25	; 0x02
     156:	81 83       	std	Z+1, r24	; 0x01

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     158:	2f ef       	ldi	r18, 0xFF	; 255
     15a:	3f ef       	ldi	r19, 0xFF	; 255
     15c:	34 83       	std	Z+4, r19	; 0x04
     15e:	23 83       	std	Z+3, r18	; 0x03

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     160:	96 83       	std	Z+6, r25	; 0x06
     162:	85 83       	std	Z+5, r24	; 0x05
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     164:	90 87       	std	Z+8, r25	; 0x08
     166:	87 83       	std	Z+7, r24	; 0x07

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     168:	10 82       	st	Z, r1
     16a:	08 95       	ret

0000016c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     16c:	fc 01       	movw	r30, r24
     16e:	11 86       	std	Z+9, r1	; 0x09
     170:	10 86       	std	Z+8, r1	; 0x08
     172:	08 95       	ret

00000174 <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd( xList *pxList, xListItem *pxNewListItem )
{
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
     178:	fc 01       	movw	r30, r24
     17a:	db 01       	movw	r26, r22

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     17c:	21 81       	ldd	r18, Z+1	; 0x01
     17e:	32 81       	ldd	r19, Z+2	; 0x02

	pxNewListItem->pxNext = pxIndex->pxNext;
     180:	e9 01       	movw	r28, r18
     182:	8a 81       	ldd	r24, Y+2	; 0x02
     184:	9b 81       	ldd	r25, Y+3	; 0x03
     186:	13 96       	adiw	r26, 0x03	; 3
     188:	9c 93       	st	X, r25
     18a:	8e 93       	st	-X, r24
     18c:	12 97       	sbiw	r26, 0x02	; 2
	pxNewListItem->pxPrevious = pxList->pxIndex;
     18e:	81 81       	ldd	r24, Z+1	; 0x01
     190:	92 81       	ldd	r25, Z+2	; 0x02
     192:	15 96       	adiw	r26, 0x05	; 5
     194:	9c 93       	st	X, r25
     196:	8e 93       	st	-X, r24
     198:	14 97       	sbiw	r26, 0x04	; 4
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     19a:	8a 81       	ldd	r24, Y+2	; 0x02
     19c:	9b 81       	ldd	r25, Y+3	; 0x03
     19e:	ec 01       	movw	r28, r24
     1a0:	7d 83       	std	Y+5, r23	; 0x05
     1a2:	6c 83       	std	Y+4, r22	; 0x04
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     1a4:	e9 01       	movw	r28, r18
     1a6:	7b 83       	std	Y+3, r23	; 0x03
     1a8:	6a 83       	std	Y+2, r22	; 0x02
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     1aa:	72 83       	std	Z+2, r23	; 0x02
     1ac:	61 83       	std	Z+1, r22	; 0x01

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     1ae:	19 96       	adiw	r26, 0x09	; 9
     1b0:	fc 93       	st	X, r31
     1b2:	ee 93       	st	-X, r30
     1b4:	18 97       	sbiw	r26, 0x08	; 8

	( pxList->uxNumberOfItems )++;
     1b6:	80 81       	ld	r24, Z
     1b8:	8f 5f       	subi	r24, 0xFF	; 255
     1ba:	80 83       	st	Z, r24
}
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	eb 01       	movw	r28, r22
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     1c8:	48 81       	ld	r20, Y
     1ca:	59 81       	ldd	r21, Y+1	; 0x01
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     1cc:	4f 3f       	cpi	r20, 0xFF	; 255
     1ce:	2f ef       	ldi	r18, 0xFF	; 255
     1d0:	52 07       	cpc	r21, r18
     1d2:	31 f4       	brne	.+12     	; 0x1e0 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     1d4:	dc 01       	movw	r26, r24
     1d6:	17 96       	adiw	r26, 0x07	; 7
     1d8:	ed 91       	ld	r30, X+
     1da:	fc 91       	ld	r31, X
     1dc:	18 97       	sbiw	r26, 0x08	; 8
     1de:	17 c0       	rjmp	.+46     	; 0x20e <vListInsert+0x4c>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/
		
		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     1e0:	fc 01       	movw	r30, r24
     1e2:	33 96       	adiw	r30, 0x03	; 3
     1e4:	dc 01       	movw	r26, r24
     1e6:	15 96       	adiw	r26, 0x05	; 5
     1e8:	2d 91       	ld	r18, X+
     1ea:	3c 91       	ld	r19, X
     1ec:	16 97       	sbiw	r26, 0x06	; 6
     1ee:	d9 01       	movw	r26, r18
     1f0:	2d 91       	ld	r18, X+
     1f2:	3c 91       	ld	r19, X
     1f4:	42 17       	cp	r20, r18
     1f6:	53 07       	cpc	r21, r19
     1f8:	50 f0       	brcs	.+20     	; 0x20e <vListInsert+0x4c>
     1fa:	02 80       	ldd	r0, Z+2	; 0x02
     1fc:	f3 81       	ldd	r31, Z+3	; 0x03
     1fe:	e0 2d       	mov	r30, r0
     200:	a2 81       	ldd	r26, Z+2	; 0x02
     202:	b3 81       	ldd	r27, Z+3	; 0x03
     204:	2d 91       	ld	r18, X+
     206:	3c 91       	ld	r19, X
     208:	42 17       	cp	r20, r18
     20a:	53 07       	cpc	r21, r19
     20c:	b0 f7       	brcc	.-20     	; 0x1fa <vListInsert+0x38>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     20e:	a2 81       	ldd	r26, Z+2	; 0x02
     210:	b3 81       	ldd	r27, Z+3	; 0x03
     212:	bb 83       	std	Y+3, r27	; 0x03
     214:	aa 83       	std	Y+2, r26	; 0x02
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     216:	15 96       	adiw	r26, 0x05	; 5
     218:	dc 93       	st	X, r29
     21a:	ce 93       	st	-X, r28
     21c:	14 97       	sbiw	r26, 0x04	; 4
	pxNewListItem->pxPrevious = pxIterator;
     21e:	fd 83       	std	Y+5, r31	; 0x05
     220:	ec 83       	std	Y+4, r30	; 0x04
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     222:	d3 83       	std	Z+3, r29	; 0x03
     224:	c2 83       	std	Z+2, r28	; 0x02

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     226:	99 87       	std	Y+9, r25	; 0x09
     228:	88 87       	std	Y+8, r24	; 0x08

	( pxList->uxNumberOfItems )++;
     22a:	fc 01       	movw	r30, r24
     22c:	20 81       	ld	r18, Z
     22e:	2f 5f       	subi	r18, 0xFF	; 255
     230:	20 83       	st	Z, r18
}
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <vListRemove>:
/*-----------------------------------------------------------*/

void vListRemove( xListItem *pxItemToRemove )
{
     238:	fc 01       	movw	r30, r24
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     23a:	a2 81       	ldd	r26, Z+2	; 0x02
     23c:	b3 81       	ldd	r27, Z+3	; 0x03
     23e:	84 81       	ldd	r24, Z+4	; 0x04
     240:	95 81       	ldd	r25, Z+5	; 0x05
     242:	15 96       	adiw	r26, 0x05	; 5
     244:	9c 93       	st	X, r25
     246:	8e 93       	st	-X, r24
     248:	14 97       	sbiw	r26, 0x04	; 4
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     24a:	a4 81       	ldd	r26, Z+4	; 0x04
     24c:	b5 81       	ldd	r27, Z+5	; 0x05
     24e:	82 81       	ldd	r24, Z+2	; 0x02
     250:	93 81       	ldd	r25, Z+3	; 0x03
     252:	13 96       	adiw	r26, 0x03	; 3
     254:	9c 93       	st	X, r25
     256:	8e 93       	st	-X, r24
     258:	12 97       	sbiw	r26, 0x02	; 2
	
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     25a:	a0 85       	ldd	r26, Z+8	; 0x08
     25c:	b1 85       	ldd	r27, Z+9	; 0x09

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     25e:	11 96       	adiw	r26, 0x01	; 1
     260:	8d 91       	ld	r24, X+
     262:	9c 91       	ld	r25, X
     264:	12 97       	sbiw	r26, 0x02	; 2
     266:	e8 17       	cp	r30, r24
     268:	f9 07       	cpc	r31, r25
     26a:	31 f4       	brne	.+12     	; 0x278 <vListRemove+0x40>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     26c:	84 81       	ldd	r24, Z+4	; 0x04
     26e:	95 81       	ldd	r25, Z+5	; 0x05
     270:	12 96       	adiw	r26, 0x02	; 2
     272:	9c 93       	st	X, r25
     274:	8e 93       	st	-X, r24
     276:	11 97       	sbiw	r26, 0x01	; 1
	}

	pxItemToRemove->pvContainer = NULL;
     278:	11 86       	std	Z+9, r1	; 0x09
     27a:	10 86       	std	Z+8, r1	; 0x08
	( pxList->uxNumberOfItems )--;
     27c:	8c 91       	ld	r24, X
     27e:	81 50       	subi	r24, 0x01	; 1
     280:	8c 93       	st	X, r24
     282:	08 95       	ret

00000284 <initUSART>:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Bluetooth RECEIVE FSM
enum BLUERECState {Blue_Rec_Wait, Blue_Receive_State } blue_rec_state;

void BLUE_REC_Init(){
	blue_rec_state = Blue_Rec_Wait;
     284:	81 30       	cpi	r24, 0x01	; 1
     286:	81 f0       	breq	.+32     	; 0x2a8 <initUSART+0x24>
     288:	e1 ec       	ldi	r30, 0xC1	; 193
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	80 81       	ld	r24, Z
     28e:	88 61       	ori	r24, 0x18	; 24
     290:	80 83       	st	Z, r24
     292:	e2 ec       	ldi	r30, 0xC2	; 194
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	86 60       	ori	r24, 0x06	; 6
     29a:	80 83       	st	Z, r24
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     2a2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     2a6:	08 95       	ret
     2a8:	e9 ec       	ldi	r30, 0xC9	; 201
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 81       	ld	r24, Z
     2ae:	88 61       	ori	r24, 0x18	; 24
     2b0:	80 83       	st	Z, r24
     2b2:	ea ec       	ldi	r30, 0xCA	; 202
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	80 81       	ld	r24, Z
     2b8:	86 60       	ori	r24, 0x06	; 6
     2ba:	80 83       	st	Z, r24
     2bc:	83 e3       	ldi	r24, 0x33	; 51
     2be:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     2c2:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     2c6:	08 95       	ret

000002c8 <USART_Flush>:
     2c8:	81 30       	cpi	r24, 0x01	; 1
     2ca:	29 f4       	brne	.+10     	; 0x2d6 <USART_Flush+0xe>
     2cc:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     2d0:	88 23       	and	r24, r24
     2d2:	74 f0       	brlt	.+28     	; 0x2f0 <USART_Flush+0x28>
     2d4:	08 95       	ret
     2d6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     2da:	88 23       	and	r24, r24
     2dc:	8c f4       	brge	.+34     	; 0x300 <USART_Flush+0x38>
     2de:	a6 ec       	ldi	r26, 0xC6	; 198
     2e0:	b0 e0       	ldi	r27, 0x00	; 0
     2e2:	e0 ec       	ldi	r30, 0xC0	; 192
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	8c 91       	ld	r24, X
     2e8:	80 81       	ld	r24, Z
     2ea:	88 23       	and	r24, r24
     2ec:	e4 f3       	brlt	.-8      	; 0x2e6 <USART_Flush+0x1e>
     2ee:	08 95       	ret
     2f0:	ae ec       	ldi	r26, 0xCE	; 206
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	e8 ec       	ldi	r30, 0xC8	; 200
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	8c 91       	ld	r24, X
     2fa:	80 81       	ld	r24, Z
     2fc:	88 23       	and	r24, r24
     2fe:	e4 f3       	brlt	.-8      	; 0x2f8 <USART_Flush+0x30>
     300:	08 95       	ret

00000302 <USART_Send>:
     302:	61 30       	cpi	r22, 0x01	; 1
     304:	41 f0       	breq	.+16     	; 0x316 <USART_Send+0x14>
     306:	e0 ec       	ldi	r30, 0xC0	; 192
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	90 81       	ld	r25, Z
     30c:	95 ff       	sbrs	r25, 5
     30e:	fd cf       	rjmp	.-6      	; 0x30a <USART_Send+0x8>
     310:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     314:	08 95       	ret
     316:	e8 ec       	ldi	r30, 0xC8	; 200
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	90 81       	ld	r25, Z
     31c:	95 ff       	sbrs	r25, 5
     31e:	fd cf       	rjmp	.-6      	; 0x31a <USART_Send+0x18>
     320:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     324:	08 95       	ret

00000326 <USART_Receive>:
     326:	81 30       	cpi	r24, 0x01	; 1
     328:	41 f0       	breq	.+16     	; 0x33a <USART_Receive+0x14>
     32a:	e0 ec       	ldi	r30, 0xC0	; 192
     32c:	f0 e0       	ldi	r31, 0x00	; 0
     32e:	80 81       	ld	r24, Z
     330:	88 23       	and	r24, r24
     332:	ec f7       	brge	.-6      	; 0x32e <USART_Receive+0x8>
     334:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     338:	08 95       	ret
     33a:	e8 ec       	ldi	r30, 0xC8	; 200
     33c:	f0 e0       	ldi	r31, 0x00	; 0
     33e:	80 81       	ld	r24, Z
     340:	88 23       	and	r24, r24
     342:	ec f7       	brge	.-6      	; 0x33e <USART_Receive+0x18>
     344:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     348:	08 95       	ret

0000034a <delay_ms>:
     34a:	18 16       	cp	r1, r24
     34c:	19 06       	cpc	r1, r25
     34e:	5c f0       	brlt	.+22     	; 0x366 <delay_ms+0x1c>
     350:	08 95       	ret
     352:	00 00       	nop
     354:	21 50       	subi	r18, 0x01	; 1
     356:	31 09       	sbc	r19, r1
     358:	e1 f7       	brne	.-8      	; 0x352 <delay_ms+0x8>
     35a:	4f 5f       	subi	r20, 0xFF	; 255
     35c:	5f 4f       	sbci	r21, 0xFF	; 255
     35e:	84 17       	cp	r24, r20
     360:	95 07       	cpc	r25, r21
     362:	19 f4       	brne	.+6      	; 0x36a <delay_ms+0x20>
     364:	08 95       	ret
     366:	40 e0       	ldi	r20, 0x00	; 0
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	27 e0       	ldi	r18, 0x07	; 7
     36c:	33 e0       	ldi	r19, 0x03	; 3
     36e:	f1 cf       	rjmp	.-30     	; 0x352 <delay_ms+0x8>

00000370 <LCD_WriteCommand>:
     370:	5e 98       	cbi	0x0b, 6	; 11
     372:	88 b9       	out	0x08, r24	; 8
     374:	5f 9a       	sbi	0x0b, 7	; 11
     376:	00 00       	nop
     378:	5f 98       	cbi	0x0b, 7	; 11
     37a:	82 e0       	ldi	r24, 0x02	; 2
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	e5 cf       	rjmp	.-54     	; 0x34a <delay_ms>
     380:	08 95       	ret

00000382 <LCD_ClearScreen>:
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	f5 cf       	rjmp	.-22     	; 0x370 <LCD_WriteCommand>
     386:	08 95       	ret

00000388 <LCD_Cursor>:
     388:	81 31       	cpi	r24, 0x11	; 17
     38a:	18 f4       	brcc	.+6      	; 0x392 <LCD_Cursor+0xa>
     38c:	81 58       	subi	r24, 0x81	; 129
     38e:	f0 cf       	rjmp	.-32     	; 0x370 <LCD_WriteCommand>
     390:	08 95       	ret
     392:	81 55       	subi	r24, 0x51	; 81
     394:	ed cf       	rjmp	.-38     	; 0x370 <LCD_WriteCommand>
     396:	08 95       	ret

00000398 <LCD_init>:
     398:	84 e6       	ldi	r24, 0x64	; 100
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	d6 df       	rcall	.-84     	; 0x34a <delay_ms>
     39e:	88 e3       	ldi	r24, 0x38	; 56
     3a0:	e7 df       	rcall	.-50     	; 0x370 <LCD_WriteCommand>
     3a2:	86 e0       	ldi	r24, 0x06	; 6
     3a4:	e5 df       	rcall	.-54     	; 0x370 <LCD_WriteCommand>
     3a6:	8f e0       	ldi	r24, 0x0F	; 15
     3a8:	e3 df       	rcall	.-58     	; 0x370 <LCD_WriteCommand>
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	e1 df       	rcall	.-62     	; 0x370 <LCD_WriteCommand>
     3ae:	8a e0       	ldi	r24, 0x0A	; 10
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	cb cf       	rjmp	.-106    	; 0x34a <delay_ms>
     3b4:	08 95       	ret

000003b6 <LCD_WriteData>:
     3b6:	5e 9a       	sbi	0x0b, 6	; 11
     3b8:	88 b9       	out	0x08, r24	; 8
     3ba:	5f 9a       	sbi	0x0b, 7	; 11
     3bc:	00 00       	nop
     3be:	5f 98       	cbi	0x0b, 7	; 11
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	c2 cf       	rjmp	.-124    	; 0x34a <delay_ms>
     3c6:	08 95       	ret

000003c8 <LCD_DisplayString>:
     3c8:	0f 93       	push	r16
     3ca:	1f 93       	push	r17
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	18 2f       	mov	r17, r24
     3d2:	eb 01       	movw	r28, r22
     3d4:	d6 df       	rcall	.-84     	; 0x382 <LCD_ClearScreen>
     3d6:	88 81       	ld	r24, Y
     3d8:	88 23       	and	r24, r24
     3da:	51 f0       	breq	.+20     	; 0x3f0 <LCD_DisplayString+0x28>
     3dc:	01 e0       	ldi	r16, 0x01	; 1
     3de:	01 0f       	add	r16, r17
     3e0:	81 2f       	mov	r24, r17
     3e2:	d2 df       	rcall	.-92     	; 0x388 <LCD_Cursor>
     3e4:	89 91       	ld	r24, Y+
     3e6:	e7 df       	rcall	.-50     	; 0x3b6 <LCD_WriteData>
     3e8:	10 2f       	mov	r17, r16
     3ea:	88 81       	ld	r24, Y
     3ec:	81 11       	cpse	r24, r1
     3ee:	f6 cf       	rjmp	.-20     	; 0x3dc <LCD_DisplayString+0x14>
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	0f 91       	pop	r16
     3f8:	08 95       	ret

000003fa <clear_buttons_and_counter>:
     3fa:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     3fe:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     402:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <Button_A>
     406:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <Button_B>
     40a:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <Button_L>
     40e:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <Button_R>
     412:	08 95       	ret

00000414 <BUTTON_Tick>:
     414:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <button_state>
     418:	88 23       	and	r24, r24
     41a:	21 f0       	breq	.+8      	; 0x424 <BUTTON_Tick+0x10>
     41c:	81 30       	cpi	r24, 0x01	; 1
     41e:	09 f4       	brne	.+2      	; 0x422 <BUTTON_Tick+0xe>
     420:	86 c0       	rjmp	.+268    	; 0x52e <BUTTON_Tick+0x11a>
     422:	9f c0       	rjmp	.+318    	; 0x562 <BUTTON_Tick+0x14e>
     424:	00 99       	sbic	0x00, 0	; 0
     426:	1f c0       	rjmp	.+62     	; 0x466 <BUTTON_Tick+0x52>
     428:	80 b1       	in	r24, 0x00	; 0
     42a:	80 95       	com	r24
     42c:	81 fd       	sbrc	r24, 1
     42e:	1b c0       	rjmp	.+54     	; 0x466 <BUTTON_Tick+0x52>
     430:	80 b1       	in	r24, 0x00	; 0
     432:	80 95       	com	r24
     434:	82 fd       	sbrc	r24, 2
     436:	17 c0       	rjmp	.+46     	; 0x466 <BUTTON_Tick+0x52>
     438:	80 b1       	in	r24, 0x00	; 0
     43a:	80 95       	com	r24
     43c:	83 fd       	sbrc	r24, 3
     43e:	13 c0       	rjmp	.+38     	; 0x466 <BUTTON_Tick+0x52>
     440:	80 b1       	in	r24, 0x00	; 0
     442:	80 95       	com	r24
     444:	84 fd       	sbrc	r24, 4
     446:	0f c0       	rjmp	.+30     	; 0x466 <BUTTON_Tick+0x52>
     448:	29 9a       	sbi	0x05, 1	; 5
     44a:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     44e:	81 30       	cpi	r24, 0x01	; 1
     450:	19 f4       	brne	.+6      	; 0x458 <BUTTON_Tick+0x44>
     452:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <ARM_DISARM>
     456:	03 c0       	rjmp	.+6      	; 0x45e <BUTTON_Tick+0x4a>
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     464:	08 95       	ret
     466:	00 9b       	sbis	0x00, 0	; 0
     468:	17 c0       	rjmp	.+46     	; 0x498 <BUTTON_Tick+0x84>
     46a:	80 b1       	in	r24, 0x00	; 0
     46c:	80 95       	com	r24
     46e:	81 ff       	sbrs	r24, 1
     470:	13 c0       	rjmp	.+38     	; 0x498 <BUTTON_Tick+0x84>
     472:	80 b1       	in	r24, 0x00	; 0
     474:	80 95       	com	r24
     476:	82 fd       	sbrc	r24, 2
     478:	0f c0       	rjmp	.+30     	; 0x498 <BUTTON_Tick+0x84>
     47a:	80 b1       	in	r24, 0x00	; 0
     47c:	80 95       	com	r24
     47e:	83 fd       	sbrc	r24, 3
     480:	0b c0       	rjmp	.+22     	; 0x498 <BUTTON_Tick+0x84>
     482:	80 b1       	in	r24, 0x00	; 0
     484:	80 95       	com	r24
     486:	84 fd       	sbrc	r24, 4
     488:	07 c0       	rjmp	.+14     	; 0x498 <BUTTON_Tick+0x84>
     48a:	29 9a       	sbi	0x05, 1	; 5
     48c:	81 e0       	ldi	r24, 0x01	; 1
     48e:	80 93 6d 09 	sts	0x096D, r24	; 0x80096d <Button_A>
     492:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     496:	08 95       	ret
     498:	00 9b       	sbis	0x00, 0	; 0
     49a:	17 c0       	rjmp	.+46     	; 0x4ca <BUTTON_Tick+0xb6>
     49c:	80 b1       	in	r24, 0x00	; 0
     49e:	80 95       	com	r24
     4a0:	81 fd       	sbrc	r24, 1
     4a2:	13 c0       	rjmp	.+38     	; 0x4ca <BUTTON_Tick+0xb6>
     4a4:	80 b1       	in	r24, 0x00	; 0
     4a6:	80 95       	com	r24
     4a8:	82 ff       	sbrs	r24, 2
     4aa:	0f c0       	rjmp	.+30     	; 0x4ca <BUTTON_Tick+0xb6>
     4ac:	80 b1       	in	r24, 0x00	; 0
     4ae:	80 95       	com	r24
     4b0:	83 fd       	sbrc	r24, 3
     4b2:	0b c0       	rjmp	.+22     	; 0x4ca <BUTTON_Tick+0xb6>
     4b4:	80 b1       	in	r24, 0x00	; 0
     4b6:	80 95       	com	r24
     4b8:	84 fd       	sbrc	r24, 4
     4ba:	07 c0       	rjmp	.+14     	; 0x4ca <BUTTON_Tick+0xb6>
     4bc:	29 9a       	sbi	0x05, 1	; 5
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 6c 09 	sts	0x096C, r24	; 0x80096c <Button_B>
     4c4:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     4c8:	08 95       	ret
     4ca:	00 9b       	sbis	0x00, 0	; 0
     4cc:	17 c0       	rjmp	.+46     	; 0x4fc <BUTTON_Tick+0xe8>
     4ce:	80 b1       	in	r24, 0x00	; 0
     4d0:	80 95       	com	r24
     4d2:	81 fd       	sbrc	r24, 1
     4d4:	13 c0       	rjmp	.+38     	; 0x4fc <BUTTON_Tick+0xe8>
     4d6:	80 b1       	in	r24, 0x00	; 0
     4d8:	80 95       	com	r24
     4da:	82 fd       	sbrc	r24, 2
     4dc:	0f c0       	rjmp	.+30     	; 0x4fc <BUTTON_Tick+0xe8>
     4de:	80 b1       	in	r24, 0x00	; 0
     4e0:	80 95       	com	r24
     4e2:	83 ff       	sbrs	r24, 3
     4e4:	0b c0       	rjmp	.+22     	; 0x4fc <BUTTON_Tick+0xe8>
     4e6:	80 b1       	in	r24, 0x00	; 0
     4e8:	80 95       	com	r24
     4ea:	84 fd       	sbrc	r24, 4
     4ec:	07 c0       	rjmp	.+14     	; 0x4fc <BUTTON_Tick+0xe8>
     4ee:	29 9a       	sbi	0x05, 1	; 5
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <Button_L>
     4f6:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     4fa:	08 95       	ret
     4fc:	00 9b       	sbis	0x00, 0	; 0
     4fe:	33 c0       	rjmp	.+102    	; 0x566 <BUTTON_Tick+0x152>
     500:	80 b1       	in	r24, 0x00	; 0
     502:	80 95       	com	r24
     504:	81 fd       	sbrc	r24, 1
     506:	2f c0       	rjmp	.+94     	; 0x566 <BUTTON_Tick+0x152>
     508:	80 b1       	in	r24, 0x00	; 0
     50a:	80 95       	com	r24
     50c:	82 fd       	sbrc	r24, 2
     50e:	2b c0       	rjmp	.+86     	; 0x566 <BUTTON_Tick+0x152>
     510:	80 b1       	in	r24, 0x00	; 0
     512:	80 95       	com	r24
     514:	83 fd       	sbrc	r24, 3
     516:	27 c0       	rjmp	.+78     	; 0x566 <BUTTON_Tick+0x152>
     518:	80 b1       	in	r24, 0x00	; 0
     51a:	80 95       	com	r24
     51c:	84 ff       	sbrs	r24, 4
     51e:	23 c0       	rjmp	.+70     	; 0x566 <BUTTON_Tick+0x152>
     520:	29 9a       	sbi	0x05, 1	; 5
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <Button_R>
     528:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     52c:	08 95       	ret
     52e:	29 98       	cbi	0x05, 1	; 5
     530:	00 9b       	sbis	0x00, 0	; 0
     532:	10 c0       	rjmp	.+32     	; 0x554 <BUTTON_Tick+0x140>
     534:	80 b1       	in	r24, 0x00	; 0
     536:	80 95       	com	r24
     538:	81 fd       	sbrc	r24, 1
     53a:	0c c0       	rjmp	.+24     	; 0x554 <BUTTON_Tick+0x140>
     53c:	80 b1       	in	r24, 0x00	; 0
     53e:	80 95       	com	r24
     540:	82 fd       	sbrc	r24, 2
     542:	08 c0       	rjmp	.+16     	; 0x554 <BUTTON_Tick+0x140>
     544:	80 b1       	in	r24, 0x00	; 0
     546:	80 95       	com	r24
     548:	83 fd       	sbrc	r24, 3
     54a:	04 c0       	rjmp	.+8      	; 0x554 <BUTTON_Tick+0x140>
     54c:	80 b1       	in	r24, 0x00	; 0
     54e:	80 95       	com	r24
     550:	84 ff       	sbrs	r24, 4
     552:	04 c0       	rjmp	.+8      	; 0x55c <BUTTON_Tick+0x148>
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	80 93 cd 09 	sts	0x09CD, r24	; 0x8009cd <button_state>
     55a:	08 95       	ret
     55c:	10 92 cd 09 	sts	0x09CD, r1	; 0x8009cd <button_state>
     560:	08 95       	ret
     562:	10 92 cd 09 	sts	0x09CD, r1	; 0x8009cd <button_state>
     566:	08 95       	ret

00000568 <ButtonTask>:
     568:	10 92 cd 09 	sts	0x09CD, r1	; 0x8009cd <button_state>
     56c:	53 df       	rcall	.-346    	; 0x414 <BUTTON_Tick>
     56e:	8a e0       	ldi	r24, 0x0A	; 10
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <vTaskDelay>
     576:	fa cf       	rjmp	.-12     	; 0x56c <ButtonTask+0x4>

00000578 <StartButtonPulse>:
     578:	af 92       	push	r10
     57a:	bf 92       	push	r11
     57c:	cf 92       	push	r12
     57e:	df 92       	push	r13
     580:	ef 92       	push	r14
     582:	ff 92       	push	r15
     584:	0f 93       	push	r16
     586:	a1 2c       	mov	r10, r1
     588:	b1 2c       	mov	r11, r1
     58a:	c1 2c       	mov	r12, r1
     58c:	d1 2c       	mov	r13, r1
     58e:	e1 2c       	mov	r14, r1
     590:	f1 2c       	mov	r15, r1
     592:	08 2f       	mov	r16, r24
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	45 e5       	ldi	r20, 0x55	; 85
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	63 e0       	ldi	r22, 0x03	; 3
     59e:	71 e0       	ldi	r23, 0x01	; 1
     5a0:	84 eb       	ldi	r24, 0xB4	; 180
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <xTaskGenericCreate>
     5a8:	0f 91       	pop	r16
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	df 90       	pop	r13
     5b0:	cf 90       	pop	r12
     5b2:	bf 90       	pop	r11
     5b4:	af 90       	pop	r10
     5b6:	08 95       	ret

000005b8 <Menu_Tick>:
     5b8:	cf 93       	push	r28
     5ba:	20 91 cc 09 	lds	r18, 0x09CC	; 0x8009cc <menu_state>
     5be:	82 2f       	mov	r24, r18
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	fc 01       	movw	r30, r24
     5c4:	33 97       	sbiw	r30, 0x03	; 3
     5c6:	ec 30       	cpi	r30, 0x0C	; 12
     5c8:	f1 05       	cpc	r31, r1
     5ca:	08 f0       	brcs	.+2      	; 0x5ce <Menu_Tick+0x16>
     5cc:	7c c0       	rjmp	.+248    	; 0x6c6 <Menu_Tick+0x10e>
     5ce:	ea 5b       	subi	r30, 0xBA	; 186
     5d0:	ff 4f       	sbci	r31, 0xFF	; 255
     5d2:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__tablejump2__>
     5d6:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     5da:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     5de:	01 96       	adiw	r24, 0x01	; 1
     5e0:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     5e4:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     5e8:	fa c0       	rjmp	.+500    	; 0x7de <Menu_Tick+0x226>
     5ea:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     5ee:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     5f2:	01 96       	adiw	r24, 0x01	; 1
     5f4:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     5f8:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     5fc:	55 c1       	rjmp	.+682    	; 0x8a8 <Menu_Tick+0x2f0>
     5fe:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     602:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     60c:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     610:	9c c1       	rjmp	.+824    	; 0x94a <Menu_Tick+0x392>
     612:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     616:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     61a:	01 96       	adiw	r24, 0x01	; 1
     61c:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     620:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     624:	f8 c1       	rjmp	.+1008   	; 0xa16 <Menu_Tick+0x45e>
     626:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     62a:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     62e:	01 96       	adiw	r24, 0x01	; 1
     630:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     634:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     638:	3f c2       	rjmp	.+1150   	; 0xab8 <Menu_Tick+0x500>
     63a:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     63e:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     642:	01 96       	adiw	r24, 0x01	; 1
     644:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     648:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     64c:	8f c2       	rjmp	.+1310   	; 0xb6c <Menu_Tick+0x5b4>
     64e:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     652:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     656:	01 96       	adiw	r24, 0x01	; 1
     658:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     65c:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     660:	d6 c2       	rjmp	.+1452   	; 0xc0e <Menu_Tick+0x656>
     662:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     666:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     66a:	01 96       	adiw	r24, 0x01	; 1
     66c:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     670:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     674:	25 c3       	rjmp	.+1610   	; 0xcc0 <Menu_Tick+0x708>
     676:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     67a:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     67e:	01 96       	adiw	r24, 0x01	; 1
     680:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     684:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     688:	72 c3       	rjmp	.+1764   	; 0xd6e <Menu_Tick+0x7b6>
     68a:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     68e:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     692:	01 96       	adiw	r24, 0x01	; 1
     694:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     698:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     69c:	d8 c3       	rjmp	.+1968   	; 0xe4e <Menu_Tick+0x896>
     69e:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     6a2:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     6a6:	01 96       	adiw	r24, 0x01	; 1
     6a8:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     6ac:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     6b0:	5a c4       	rjmp	.+2228   	; 0xf66 <Menu_Tick+0x9ae>
     6b2:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     6b6:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <counter+0x1>
     6c0:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <counter>
     6c4:	ab c4       	rjmp	.+2390   	; 0x101c <Menu_Tick+0xa64>
     6c6:	82 2f       	mov	r24, r18
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	8f 30       	cpi	r24, 0x0F	; 15
     6cc:	91 05       	cpc	r25, r1
     6ce:	08 f0       	brcs	.+2      	; 0x6d2 <Menu_Tick+0x11a>
     6d0:	f5 c4       	rjmp	.+2538   	; 0x10bc <Menu_Tick+0xb04>
     6d2:	fc 01       	movw	r30, r24
     6d4:	ee 5a       	subi	r30, 0xAE	; 174
     6d6:	ff 4f       	sbci	r31, 0xFF	; 255
     6d8:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__tablejump2__>
     6dc:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     6e0:	81 11       	cpse	r24, r1
     6e2:	0c c0       	rjmp	.+24     	; 0x6fc <Menu_Tick+0x144>
     6e4:	6e e0       	ldi	r22, 0x0E	; 14
     6e6:	71 e0       	ldi	r23, 0x01	; 1
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	6e de       	rcall	.-804    	; 0x3c8 <LCD_DisplayString>
     6ec:	81 e2       	ldi	r24, 0x21	; 33
     6ee:	4c de       	rcall	.-872    	; 0x388 <LCD_Cursor>
     6f0:	84 de       	rcall	.-760    	; 0x3fa <clear_buttons_and_counter>
     6f2:	15 b8       	out	0x05, r1	; 5
     6f4:	82 e0       	ldi	r24, 0x02	; 2
     6f6:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     6fa:	e2 c4       	rjmp	.+2500   	; 0x10c0 <Menu_Tick+0xb08>
     6fc:	80 b1       	in	r24, 0x00	; 0
     6fe:	80 95       	com	r24
     700:	85 fd       	sbrc	r24, 5
     702:	02 c0       	rjmp	.+4      	; 0x708 <Menu_Tick+0x150>
     704:	80 b1       	in	r24, 0x00	; 0
     706:	15 c0       	rjmp	.+42     	; 0x732 <Menu_Tick+0x17a>
     708:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
     70c:	81 30       	cpi	r24, 0x01	; 1
     70e:	89 f4       	brne	.+34     	; 0x732 <Menu_Tick+0x17a>
     710:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <ARM_DISARM>
     714:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     718:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     71c:	6e e0       	ldi	r22, 0x0E	; 14
     71e:	71 e0       	ldi	r23, 0x01	; 1
     720:	53 de       	rcall	.-858    	; 0x3c8 <LCD_DisplayString>
     722:	81 e2       	ldi	r24, 0x21	; 33
     724:	31 de       	rcall	.-926    	; 0x388 <LCD_Cursor>
     726:	69 de       	rcall	.-814    	; 0x3fa <clear_buttons_and_counter>
     728:	15 b8       	out	0x05, r1	; 5
     72a:	82 e0       	ldi	r24, 0x02	; 2
     72c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     730:	c7 c4       	rjmp	.+2446   	; 0x10c0 <Menu_Tick+0xb08>
     732:	6c e2       	ldi	r22, 0x2C	; 44
     734:	71 e0       	ldi	r23, 0x01	; 1
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	47 de       	rcall	.-882    	; 0x3c8 <LCD_DisplayString>
     73a:	81 e2       	ldi	r24, 0x21	; 33
     73c:	25 de       	rcall	.-950    	; 0x388 <LCD_Cursor>
     73e:	5d de       	rcall	.-838    	; 0x3fa <clear_buttons_and_counter>
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	85 b9       	out	0x05, r24	; 5
     744:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     748:	bb c4       	rjmp	.+2422   	; 0x10c0 <Menu_Tick+0xb08>
     74a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     74e:	81 11       	cpse	r24, r1
     750:	08 c0       	rjmp	.+16     	; 0x762 <Menu_Tick+0x1aa>
     752:	82 e0       	ldi	r24, 0x02	; 2
     754:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     758:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <ARM_DISARM>
     75c:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     760:	af c4       	rjmp	.+2398   	; 0x10c0 <Menu_Tick+0xb08>
     762:	80 b1       	in	r24, 0x00	; 0
     764:	80 95       	com	r24
     766:	85 fd       	sbrc	r24, 5
     768:	04 c0       	rjmp	.+8      	; 0x772 <Menu_Tick+0x1ba>
     76a:	80 b1       	in	r24, 0x00	; 0
     76c:	80 95       	com	r24
     76e:	86 ff       	sbrs	r24, 6
     770:	09 c0       	rjmp	.+18     	; 0x784 <Menu_Tick+0x1cc>
     772:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
     776:	81 30       	cpi	r24, 0x01	; 1
     778:	29 f4       	brne	.+10     	; 0x784 <Menu_Tick+0x1cc>
     77a:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <ARM_DISARM>
     77e:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     782:	9e c4       	rjmp	.+2364   	; 0x10c0 <Menu_Tick+0xb08>
     784:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     788:	81 11       	cpse	r24, r1
     78a:	9a c4       	rjmp	.+2356   	; 0x10c0 <Menu_Tick+0xb08>
     78c:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     790:	97 c4       	rjmp	.+2350   	; 0x10c0 <Menu_Tick+0xb08>
     792:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     796:	81 30       	cpi	r24, 0x01	; 1
     798:	49 f4       	brne	.+18     	; 0x7ac <Menu_Tick+0x1f4>
     79a:	82 e0       	ldi	r24, 0x02	; 2
     79c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     7a6:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     7aa:	8a c4       	rjmp	.+2324   	; 0x10c0 <Menu_Tick+0xb08>
     7ac:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     7b0:	81 30       	cpi	r24, 0x01	; 1
     7b2:	31 f4       	brne	.+12     	; 0x7c0 <Menu_Tick+0x208>
     7b4:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     7b8:	82 e0       	ldi	r24, 0x02	; 2
     7ba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     7be:	80 c4       	rjmp	.+2304   	; 0x10c0 <Menu_Tick+0xb08>
     7c0:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     7c4:	81 30       	cpi	r24, 0x01	; 1
     7c6:	09 f0       	breq	.+2      	; 0x7ca <Menu_Tick+0x212>
     7c8:	7b c4       	rjmp	.+2294   	; 0x10c0 <Menu_Tick+0xb08>
     7ca:	66 e4       	ldi	r22, 0x46	; 70
     7cc:	71 e0       	ldi	r23, 0x01	; 1
     7ce:	fc dd       	rcall	.-1032   	; 0x3c8 <LCD_DisplayString>
     7d0:	81 e2       	ldi	r24, 0x21	; 33
     7d2:	da dd       	rcall	.-1100   	; 0x388 <LCD_Cursor>
     7d4:	12 de       	rcall	.-988    	; 0x3fa <clear_buttons_and_counter>
     7d6:	83 e0       	ldi	r24, 0x03	; 3
     7d8:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     7dc:	71 c4       	rjmp	.+2274   	; 0x10c0 <Menu_Tick+0xb08>
     7de:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     7e2:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     7e6:	84 3f       	cpi	r24, 0xF4	; 244
     7e8:	91 40       	sbci	r25, 0x01	; 1
     7ea:	b0 f0       	brcs	.+44     	; 0x818 <Menu_Tick+0x260>
     7ec:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     7f0:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     7f4:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <Button_A>
     7f8:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <Button_B>
     7fc:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <Button_L>
     800:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <Button_R>
     804:	6e e0       	ldi	r22, 0x0E	; 14
     806:	71 e0       	ldi	r23, 0x01	; 1
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	de dd       	rcall	.-1092   	; 0x3c8 <LCD_DisplayString>
     80c:	81 e2       	ldi	r24, 0x21	; 33
     80e:	bc dd       	rcall	.-1160   	; 0x388 <LCD_Cursor>
     810:	82 e0       	ldi	r24, 0x02	; 2
     812:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     816:	54 c4       	rjmp	.+2216   	; 0x10c0 <Menu_Tick+0xb08>
     818:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     81c:	81 30       	cpi	r24, 0x01	; 1
     81e:	49 f4       	brne	.+18     	; 0x832 <Menu_Tick+0x27a>
     820:	82 e0       	ldi	r24, 0x02	; 2
     822:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     82c:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     830:	47 c4       	rjmp	.+2190   	; 0x10c0 <Menu_Tick+0xb08>
     832:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     836:	81 30       	cpi	r24, 0x01	; 1
     838:	31 f4       	brne	.+12     	; 0x846 <Menu_Tick+0x28e>
     83a:	82 e0       	ldi	r24, 0x02	; 2
     83c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     840:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     844:	3d c4       	rjmp	.+2170   	; 0x10c0 <Menu_Tick+0xb08>
     846:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     84a:	81 30       	cpi	r24, 0x01	; 1
     84c:	59 f4       	brne	.+22     	; 0x864 <Menu_Tick+0x2ac>
     84e:	d5 dd       	rcall	.-1110   	; 0x3fa <clear_buttons_and_counter>
     850:	6e e5       	ldi	r22, 0x5E	; 94
     852:	71 e0       	ldi	r23, 0x01	; 1
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	b8 dd       	rcall	.-1168   	; 0x3c8 <LCD_DisplayString>
     858:	81 e2       	ldi	r24, 0x21	; 33
     85a:	96 dd       	rcall	.-1236   	; 0x388 <LCD_Cursor>
     85c:	87 e0       	ldi	r24, 0x07	; 7
     85e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     862:	2e c4       	rjmp	.+2140   	; 0x10c0 <Menu_Tick+0xb08>
     864:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     868:	81 30       	cpi	r24, 0x01	; 1
     86a:	59 f4       	brne	.+22     	; 0x882 <Menu_Tick+0x2ca>
     86c:	c6 dd       	rcall	.-1140   	; 0x3fa <clear_buttons_and_counter>
     86e:	6e e0       	ldi	r22, 0x0E	; 14
     870:	71 e0       	ldi	r23, 0x01	; 1
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	a9 dd       	rcall	.-1198   	; 0x3c8 <LCD_DisplayString>
     876:	81 e2       	ldi	r24, 0x21	; 33
     878:	87 dd       	rcall	.-1266   	; 0x388 <LCD_Cursor>
     87a:	82 e0       	ldi	r24, 0x02	; 2
     87c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     880:	1f c4       	rjmp	.+2110   	; 0x10c0 <Menu_Tick+0xb08>
     882:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     886:	81 30       	cpi	r24, 0x01	; 1
     888:	59 f4       	brne	.+22     	; 0x8a0 <Menu_Tick+0x2e8>
     88a:	b7 dd       	rcall	.-1170   	; 0x3fa <clear_buttons_and_counter>
     88c:	66 e7       	ldi	r22, 0x76	; 118
     88e:	71 e0       	ldi	r23, 0x01	; 1
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	9a dd       	rcall	.-1228   	; 0x3c8 <LCD_DisplayString>
     894:	81 e2       	ldi	r24, 0x21	; 33
     896:	78 dd       	rcall	.-1296   	; 0x388 <LCD_Cursor>
     898:	84 e0       	ldi	r24, 0x04	; 4
     89a:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     89e:	10 c4       	rjmp	.+2080   	; 0x10c0 <Menu_Tick+0xb08>
     8a0:	83 e0       	ldi	r24, 0x03	; 3
     8a2:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     8a6:	0c c4       	rjmp	.+2072   	; 0x10c0 <Menu_Tick+0xb08>
     8a8:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     8ac:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     8b0:	84 3f       	cpi	r24, 0xF4	; 244
     8b2:	91 40       	sbci	r25, 0x01	; 1
     8b4:	68 f0       	brcs	.+26     	; 0x8d0 <Menu_Tick+0x318>
     8b6:	a1 dd       	rcall	.-1214   	; 0x3fa <clear_buttons_and_counter>
     8b8:	6e e0       	ldi	r22, 0x0E	; 14
     8ba:	71 e0       	ldi	r23, 0x01	; 1
     8bc:	81 e0       	ldi	r24, 0x01	; 1
     8be:	84 dd       	rcall	.-1272   	; 0x3c8 <LCD_DisplayString>
     8c0:	81 e2       	ldi	r24, 0x21	; 33
     8c2:	62 dd       	rcall	.-1340   	; 0x388 <LCD_Cursor>
     8c4:	82 e0       	ldi	r24, 0x02	; 2
     8c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     8ca:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     8ce:	f8 c3       	rjmp	.+2032   	; 0x10c0 <Menu_Tick+0xb08>
     8d0:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     8d4:	81 30       	cpi	r24, 0x01	; 1
     8d6:	59 f4       	brne	.+22     	; 0x8ee <Menu_Tick+0x336>
     8d8:	90 dd       	rcall	.-1248   	; 0x3fa <clear_buttons_and_counter>
     8da:	67 e9       	ldi	r22, 0x97	; 151
     8dc:	71 e0       	ldi	r23, 0x01	; 1
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	73 dd       	rcall	.-1306   	; 0x3c8 <LCD_DisplayString>
     8e2:	81 e2       	ldi	r24, 0x21	; 33
     8e4:	51 dd       	rcall	.-1374   	; 0x388 <LCD_Cursor>
     8e6:	85 e0       	ldi	r24, 0x05	; 5
     8e8:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     8ec:	e9 c3       	rjmp	.+2002   	; 0x10c0 <Menu_Tick+0xb08>
     8ee:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     8f2:	81 30       	cpi	r24, 0x01	; 1
     8f4:	a1 f4       	brne	.+40     	; 0x91e <Menu_Tick+0x366>
     8f6:	10 92 64 09 	sts	0x0964, r1	; 0x800964 <bark_delay>
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <eeprom_write_byte>
     904:	7a dd       	rcall	.-1292   	; 0x3fa <clear_buttons_and_counter>
     906:	6e e0       	ldi	r22, 0x0E	; 14
     908:	71 e0       	ldi	r23, 0x01	; 1
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	5d dd       	rcall	.-1350   	; 0x3c8 <LCD_DisplayString>
     90e:	81 e2       	ldi	r24, 0x21	; 33
     910:	3b dd       	rcall	.-1418   	; 0x388 <LCD_Cursor>
     912:	82 e0       	ldi	r24, 0x02	; 2
     914:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     918:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     91c:	d1 c3       	rjmp	.+1954   	; 0x10c0 <Menu_Tick+0xb08>
     91e:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     922:	81 30       	cpi	r24, 0x01	; 1
     924:	71 f4       	brne	.+28     	; 0x942 <Menu_Tick+0x38a>
     926:	69 dd       	rcall	.-1326   	; 0x3fa <clear_buttons_and_counter>
     928:	66 e4       	ldi	r22, 0x46	; 70
     92a:	71 e0       	ldi	r23, 0x01	; 1
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	4c dd       	rcall	.-1384   	; 0x3c8 <LCD_DisplayString>
     930:	81 e2       	ldi	r24, 0x21	; 33
     932:	2a dd       	rcall	.-1452   	; 0x388 <LCD_Cursor>
     934:	82 e0       	ldi	r24, 0x02	; 2
     936:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     93a:	83 e0       	ldi	r24, 0x03	; 3
     93c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     940:	bf c3       	rjmp	.+1918   	; 0x10c0 <Menu_Tick+0xb08>
     942:	84 e0       	ldi	r24, 0x04	; 4
     944:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     948:	bb c3       	rjmp	.+1910   	; 0x10c0 <Menu_Tick+0xb08>
     94a:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     94e:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     952:	84 3f       	cpi	r24, 0xF4	; 244
     954:	91 40       	sbci	r25, 0x01	; 1
     956:	68 f0       	brcs	.+26     	; 0x972 <Menu_Tick+0x3ba>
     958:	50 dd       	rcall	.-1376   	; 0x3fa <clear_buttons_and_counter>
     95a:	6e e0       	ldi	r22, 0x0E	; 14
     95c:	71 e0       	ldi	r23, 0x01	; 1
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	33 dd       	rcall	.-1434   	; 0x3c8 <LCD_DisplayString>
     962:	81 e2       	ldi	r24, 0x21	; 33
     964:	11 dd       	rcall	.-1502   	; 0x388 <LCD_Cursor>
     966:	82 e0       	ldi	r24, 0x02	; 2
     968:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     96c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     970:	a7 c3       	rjmp	.+1870   	; 0x10c0 <Menu_Tick+0xb08>
     972:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     976:	81 30       	cpi	r24, 0x01	; 1
     978:	71 f4       	brne	.+28     	; 0x996 <Menu_Tick+0x3de>
     97a:	3f dd       	rcall	.-1410   	; 0x3fa <clear_buttons_and_counter>
     97c:	68 eb       	ldi	r22, 0xB8	; 184
     97e:	71 e0       	ldi	r23, 0x01	; 1
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	22 dd       	rcall	.-1468   	; 0x3c8 <LCD_DisplayString>
     984:	81 e2       	ldi	r24, 0x21	; 33
     986:	00 dd       	rcall	.-1536   	; 0x388 <LCD_Cursor>
     988:	82 e0       	ldi	r24, 0x02	; 2
     98a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     98e:	86 e0       	ldi	r24, 0x06	; 6
     990:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     994:	95 c3       	rjmp	.+1834   	; 0x10c0 <Menu_Tick+0xb08>
     996:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     99a:	81 30       	cpi	r24, 0x01	; 1
     99c:	71 f4       	brne	.+28     	; 0x9ba <Menu_Tick+0x402>
     99e:	2d dd       	rcall	.-1446   	; 0x3fa <clear_buttons_and_counter>
     9a0:	66 e7       	ldi	r22, 0x76	; 118
     9a2:	71 e0       	ldi	r23, 0x01	; 1
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	10 dd       	rcall	.-1504   	; 0x3c8 <LCD_DisplayString>
     9a8:	81 e2       	ldi	r24, 0x21	; 33
     9aa:	ee dc       	rcall	.-1572   	; 0x388 <LCD_Cursor>
     9ac:	82 e0       	ldi	r24, 0x02	; 2
     9ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9b2:	84 e0       	ldi	r24, 0x04	; 4
     9b4:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     9b8:	83 c3       	rjmp	.+1798   	; 0x10c0 <Menu_Tick+0xb08>
     9ba:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     9be:	81 30       	cpi	r24, 0x01	; 1
     9c0:	a1 f4       	brne	.+40     	; 0x9ea <Menu_Tick+0x432>
     9c2:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <bark_delay>
     9c6:	61 e0       	ldi	r22, 0x01	; 1
     9c8:	81 e0       	ldi	r24, 0x01	; 1
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <eeprom_write_byte>
     9d0:	14 dd       	rcall	.-1496   	; 0x3fa <clear_buttons_and_counter>
     9d2:	6e e0       	ldi	r22, 0x0E	; 14
     9d4:	71 e0       	ldi	r23, 0x01	; 1
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	f7 dc       	rcall	.-1554   	; 0x3c8 <LCD_DisplayString>
     9da:	81 e2       	ldi	r24, 0x21	; 33
     9dc:	d5 dc       	rcall	.-1622   	; 0x388 <LCD_Cursor>
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9e4:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     9e8:	6b c3       	rjmp	.+1750   	; 0x10c0 <Menu_Tick+0xb08>
     9ea:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     9ee:	81 30       	cpi	r24, 0x01	; 1
     9f0:	71 f4       	brne	.+28     	; 0xa0e <Menu_Tick+0x456>
     9f2:	03 dd       	rcall	.-1530   	; 0x3fa <clear_buttons_and_counter>
     9f4:	66 e4       	ldi	r22, 0x46	; 70
     9f6:	71 e0       	ldi	r23, 0x01	; 1
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	e6 dc       	rcall	.-1588   	; 0x3c8 <LCD_DisplayString>
     9fc:	81 e2       	ldi	r24, 0x21	; 33
     9fe:	c4 dc       	rcall	.-1656   	; 0x388 <LCD_Cursor>
     a00:	82 e0       	ldi	r24, 0x02	; 2
     a02:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a06:	83 e0       	ldi	r24, 0x03	; 3
     a08:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     a0c:	59 c3       	rjmp	.+1714   	; 0x10c0 <Menu_Tick+0xb08>
     a0e:	85 e0       	ldi	r24, 0x05	; 5
     a10:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     a14:	55 c3       	rjmp	.+1706   	; 0x10c0 <Menu_Tick+0xb08>
     a16:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     a1a:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     a1e:	84 3f       	cpi	r24, 0xF4	; 244
     a20:	91 40       	sbci	r25, 0x01	; 1
     a22:	68 f0       	brcs	.+26     	; 0xa3e <Menu_Tick+0x486>
     a24:	ea dc       	rcall	.-1580   	; 0x3fa <clear_buttons_and_counter>
     a26:	6e e0       	ldi	r22, 0x0E	; 14
     a28:	71 e0       	ldi	r23, 0x01	; 1
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	cd dc       	rcall	.-1638   	; 0x3c8 <LCD_DisplayString>
     a2e:	81 e2       	ldi	r24, 0x21	; 33
     a30:	ab dc       	rcall	.-1706   	; 0x388 <LCD_Cursor>
     a32:	82 e0       	ldi	r24, 0x02	; 2
     a34:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a38:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     a3c:	41 c3       	rjmp	.+1666   	; 0x10c0 <Menu_Tick+0xb08>
     a3e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     a42:	81 30       	cpi	r24, 0x01	; 1
     a44:	59 f4       	brne	.+22     	; 0xa5c <Menu_Tick+0x4a4>
     a46:	d9 dc       	rcall	.-1614   	; 0x3fa <clear_buttons_and_counter>
     a48:	67 e9       	ldi	r22, 0x97	; 151
     a4a:	71 e0       	ldi	r23, 0x01	; 1
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	bc dc       	rcall	.-1672   	; 0x3c8 <LCD_DisplayString>
     a50:	81 e2       	ldi	r24, 0x21	; 33
     a52:	9a dc       	rcall	.-1740   	; 0x388 <LCD_Cursor>
     a54:	85 e0       	ldi	r24, 0x05	; 5
     a56:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     a5a:	32 c3       	rjmp	.+1636   	; 0x10c0 <Menu_Tick+0xb08>
     a5c:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     a60:	81 30       	cpi	r24, 0x01	; 1
     a62:	a1 f4       	brne	.+40     	; 0xa8c <Menu_Tick+0x4d4>
     a64:	c2 e0       	ldi	r28, 0x02	; 2
     a66:	c0 93 64 09 	sts	0x0964, r28	; 0x800964 <bark_delay>
     a6a:	62 e0       	ldi	r22, 0x02	; 2
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <eeprom_write_byte>
     a74:	c2 dc       	rcall	.-1660   	; 0x3fa <clear_buttons_and_counter>
     a76:	6e e0       	ldi	r22, 0x0E	; 14
     a78:	71 e0       	ldi	r23, 0x01	; 1
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	a5 dc       	rcall	.-1718   	; 0x3c8 <LCD_DisplayString>
     a7e:	81 e2       	ldi	r24, 0x21	; 33
     a80:	83 dc       	rcall	.-1786   	; 0x388 <LCD_Cursor>
     a82:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     a86:	c0 93 cc 09 	sts	0x09CC, r28	; 0x8009cc <menu_state>
     a8a:	1a c3       	rjmp	.+1588   	; 0x10c0 <Menu_Tick+0xb08>
     a8c:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     a90:	81 30       	cpi	r24, 0x01	; 1
     a92:	71 f4       	brne	.+28     	; 0xab0 <Menu_Tick+0x4f8>
     a94:	b2 dc       	rcall	.-1692   	; 0x3fa <clear_buttons_and_counter>
     a96:	66 e4       	ldi	r22, 0x46	; 70
     a98:	71 e0       	ldi	r23, 0x01	; 1
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	95 dc       	rcall	.-1750   	; 0x3c8 <LCD_DisplayString>
     a9e:	81 e2       	ldi	r24, 0x21	; 33
     aa0:	73 dc       	rcall	.-1818   	; 0x388 <LCD_Cursor>
     aa2:	82 e0       	ldi	r24, 0x02	; 2
     aa4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     aa8:	83 e0       	ldi	r24, 0x03	; 3
     aaa:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     aae:	08 c3       	rjmp	.+1552   	; 0x10c0 <Menu_Tick+0xb08>
     ab0:	86 e0       	ldi	r24, 0x06	; 6
     ab2:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     ab6:	04 c3       	rjmp	.+1544   	; 0x10c0 <Menu_Tick+0xb08>
     ab8:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     abc:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     ac0:	84 3f       	cpi	r24, 0xF4	; 244
     ac2:	91 40       	sbci	r25, 0x01	; 1
     ac4:	58 f0       	brcs	.+22     	; 0xadc <Menu_Tick+0x524>
     ac6:	99 dc       	rcall	.-1742   	; 0x3fa <clear_buttons_and_counter>
     ac8:	6e e0       	ldi	r22, 0x0E	; 14
     aca:	71 e0       	ldi	r23, 0x01	; 1
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	7c dc       	rcall	.-1800   	; 0x3c8 <LCD_DisplayString>
     ad0:	81 e2       	ldi	r24, 0x21	; 33
     ad2:	5a dc       	rcall	.-1868   	; 0x388 <LCD_Cursor>
     ad4:	82 e0       	ldi	r24, 0x02	; 2
     ad6:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     ada:	f2 c2       	rjmp	.+1508   	; 0x10c0 <Menu_Tick+0xb08>
     adc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ae0:	81 30       	cpi	r24, 0x01	; 1
     ae2:	49 f4       	brne	.+18     	; 0xaf6 <Menu_Tick+0x53e>
     ae4:	82 e0       	ldi	r24, 0x02	; 2
     ae6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     af0:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     af4:	e5 c2       	rjmp	.+1482   	; 0x10c0 <Menu_Tick+0xb08>
     af6:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     afa:	81 30       	cpi	r24, 0x01	; 1
     afc:	31 f4       	brne	.+12     	; 0xb0a <Menu_Tick+0x552>
     afe:	82 e0       	ldi	r24, 0x02	; 2
     b00:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     b04:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     b08:	db c2       	rjmp	.+1462   	; 0x10c0 <Menu_Tick+0xb08>
     b0a:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     b0e:	81 30       	cpi	r24, 0x01	; 1
     b10:	59 f4       	brne	.+22     	; 0xb28 <Menu_Tick+0x570>
     b12:	73 dc       	rcall	.-1818   	; 0x3fa <clear_buttons_and_counter>
     b14:	69 ed       	ldi	r22, 0xD9	; 217
     b16:	71 e0       	ldi	r23, 0x01	; 1
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	56 dc       	rcall	.-1876   	; 0x3c8 <LCD_DisplayString>
     b1c:	81 e2       	ldi	r24, 0x21	; 33
     b1e:	34 dc       	rcall	.-1944   	; 0x388 <LCD_Cursor>
     b20:	8c e0       	ldi	r24, 0x0C	; 12
     b22:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     b26:	cc c2       	rjmp	.+1432   	; 0x10c0 <Menu_Tick+0xb08>
     b28:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     b2c:	81 30       	cpi	r24, 0x01	; 1
     b2e:	59 f4       	brne	.+22     	; 0xb46 <Menu_Tick+0x58e>
     b30:	64 dc       	rcall	.-1848   	; 0x3fa <clear_buttons_and_counter>
     b32:	66 e4       	ldi	r22, 0x46	; 70
     b34:	71 e0       	ldi	r23, 0x01	; 1
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	47 dc       	rcall	.-1906   	; 0x3c8 <LCD_DisplayString>
     b3a:	81 e2       	ldi	r24, 0x21	; 33
     b3c:	25 dc       	rcall	.-1974   	; 0x388 <LCD_Cursor>
     b3e:	83 e0       	ldi	r24, 0x03	; 3
     b40:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     b44:	bd c2       	rjmp	.+1402   	; 0x10c0 <Menu_Tick+0xb08>
     b46:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     b4a:	81 30       	cpi	r24, 0x01	; 1
     b4c:	59 f4       	brne	.+22     	; 0xb64 <Menu_Tick+0x5ac>
     b4e:	55 dc       	rcall	.-1878   	; 0x3fa <clear_buttons_and_counter>
     b50:	62 ef       	ldi	r22, 0xF2	; 242
     b52:	71 e0       	ldi	r23, 0x01	; 1
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	38 dc       	rcall	.-1936   	; 0x3c8 <LCD_DisplayString>
     b58:	81 e2       	ldi	r24, 0x21	; 33
     b5a:	16 dc       	rcall	.-2004   	; 0x388 <LCD_Cursor>
     b5c:	88 e0       	ldi	r24, 0x08	; 8
     b5e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     b62:	ae c2       	rjmp	.+1372   	; 0x10c0 <Menu_Tick+0xb08>
     b64:	87 e0       	ldi	r24, 0x07	; 7
     b66:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     b6a:	aa c2       	rjmp	.+1364   	; 0x10c0 <Menu_Tick+0xb08>
     b6c:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     b70:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     b74:	84 3f       	cpi	r24, 0xF4	; 244
     b76:	91 40       	sbci	r25, 0x01	; 1
     b78:	68 f0       	brcs	.+26     	; 0xb94 <Menu_Tick+0x5dc>
     b7a:	3f dc       	rcall	.-1922   	; 0x3fa <clear_buttons_and_counter>
     b7c:	6e e0       	ldi	r22, 0x0E	; 14
     b7e:	71 e0       	ldi	r23, 0x01	; 1
     b80:	81 e0       	ldi	r24, 0x01	; 1
     b82:	22 dc       	rcall	.-1980   	; 0x3c8 <LCD_DisplayString>
     b84:	81 e2       	ldi	r24, 0x21	; 33
     b86:	00 dc       	rcall	.-2048   	; 0x388 <LCD_Cursor>
     b88:	82 e0       	ldi	r24, 0x02	; 2
     b8a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     b8e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     b92:	96 c2       	rjmp	.+1324   	; 0x10c0 <Menu_Tick+0xb08>
     b94:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     b98:	81 30       	cpi	r24, 0x01	; 1
     b9a:	a1 f4       	brne	.+40     	; 0xbc4 <Menu_Tick+0x60c>
     b9c:	10 92 65 09 	sts	0x0965, r1	; 0x800965 <bark_setting>
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <eeprom_write_byte>
     baa:	27 dc       	rcall	.-1970   	; 0x3fa <clear_buttons_and_counter>
     bac:	6e e0       	ldi	r22, 0x0E	; 14
     bae:	71 e0       	ldi	r23, 0x01	; 1
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	0a dc       	rcall	.-2028   	; 0x3c8 <LCD_DisplayString>
     bb4:	81 e2       	ldi	r24, 0x21	; 33
     bb6:	e8 db       	rcall	.-2096   	; 0x388 <LCD_Cursor>
     bb8:	82 e0       	ldi	r24, 0x02	; 2
     bba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     bbe:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     bc2:	7e c2       	rjmp	.+1276   	; 0x10c0 <Menu_Tick+0xb08>
     bc4:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     bc8:	81 30       	cpi	r24, 0x01	; 1
     bca:	71 f4       	brne	.+28     	; 0xbe8 <Menu_Tick+0x630>
     bcc:	16 dc       	rcall	.-2004   	; 0x3fa <clear_buttons_and_counter>
     bce:	6e e5       	ldi	r22, 0x5E	; 94
     bd0:	71 e0       	ldi	r23, 0x01	; 1
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	f9 db       	rcall	.-2062   	; 0x3c8 <LCD_DisplayString>
     bd6:	81 e2       	ldi	r24, 0x21	; 33
     bd8:	d7 db       	rcall	.-2130   	; 0x388 <LCD_Cursor>
     bda:	82 e0       	ldi	r24, 0x02	; 2
     bdc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     be0:	87 e0       	ldi	r24, 0x07	; 7
     be2:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     be6:	6c c2       	rjmp	.+1240   	; 0x10c0 <Menu_Tick+0xb08>
     be8:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     bec:	81 30       	cpi	r24, 0x01	; 1
     bee:	59 f4       	brne	.+22     	; 0xc06 <Menu_Tick+0x64e>
     bf0:	04 dc       	rcall	.-2040   	; 0x3fa <clear_buttons_and_counter>
     bf2:	6f e0       	ldi	r22, 0x0F	; 15
     bf4:	72 e0       	ldi	r23, 0x02	; 2
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	e7 db       	rcall	.-2098   	; 0x3c8 <LCD_DisplayString>
     bfa:	81 e2       	ldi	r24, 0x21	; 33
     bfc:	c5 db       	rcall	.-2166   	; 0x388 <LCD_Cursor>
     bfe:	89 e0       	ldi	r24, 0x09	; 9
     c00:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     c04:	5d c2       	rjmp	.+1210   	; 0x10c0 <Menu_Tick+0xb08>
     c06:	88 e0       	ldi	r24, 0x08	; 8
     c08:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     c0c:	59 c2       	rjmp	.+1202   	; 0x10c0 <Menu_Tick+0xb08>
     c0e:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     c12:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     c16:	84 3f       	cpi	r24, 0xF4	; 244
     c18:	91 40       	sbci	r25, 0x01	; 1
     c1a:	68 f0       	brcs	.+26     	; 0xc36 <Menu_Tick+0x67e>
     c1c:	ee db       	rcall	.-2084   	; 0x3fa <clear_buttons_and_counter>
     c1e:	6e e0       	ldi	r22, 0x0E	; 14
     c20:	71 e0       	ldi	r23, 0x01	; 1
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	d1 db       	rcall	.-2142   	; 0x3c8 <LCD_DisplayString>
     c26:	81 e2       	ldi	r24, 0x21	; 33
     c28:	af db       	rcall	.-2210   	; 0x388 <LCD_Cursor>
     c2a:	82 e0       	ldi	r24, 0x02	; 2
     c2c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     c30:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     c34:	45 c2       	rjmp	.+1162   	; 0x10c0 <Menu_Tick+0xb08>
     c36:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     c3a:	81 30       	cpi	r24, 0x01	; 1
     c3c:	a1 f4       	brne	.+40     	; 0xc66 <Menu_Tick+0x6ae>
     c3e:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <bark_setting>
     c42:	61 e0       	ldi	r22, 0x01	; 1
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <eeprom_write_byte>
     c4c:	d6 db       	rcall	.-2132   	; 0x3fa <clear_buttons_and_counter>
     c4e:	6e e0       	ldi	r22, 0x0E	; 14
     c50:	71 e0       	ldi	r23, 0x01	; 1
     c52:	81 e0       	ldi	r24, 0x01	; 1
     c54:	b9 db       	rcall	.-2190   	; 0x3c8 <LCD_DisplayString>
     c56:	81 e2       	ldi	r24, 0x21	; 33
     c58:	97 db       	rcall	.-2258   	; 0x388 <LCD_Cursor>
     c5a:	82 e0       	ldi	r24, 0x02	; 2
     c5c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     c60:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     c64:	2d c2       	rjmp	.+1114   	; 0x10c0 <Menu_Tick+0xb08>
     c66:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     c6a:	81 30       	cpi	r24, 0x01	; 1
     c6c:	71 f4       	brne	.+28     	; 0xc8a <Menu_Tick+0x6d2>
     c6e:	c5 db       	rcall	.-2166   	; 0x3fa <clear_buttons_and_counter>
     c70:	6e e5       	ldi	r22, 0x5E	; 94
     c72:	71 e0       	ldi	r23, 0x01	; 1
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	a8 db       	rcall	.-2224   	; 0x3c8 <LCD_DisplayString>
     c78:	81 e2       	ldi	r24, 0x21	; 33
     c7a:	86 db       	rcall	.-2292   	; 0x388 <LCD_Cursor>
     c7c:	82 e0       	ldi	r24, 0x02	; 2
     c7e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     c82:	87 e0       	ldi	r24, 0x07	; 7
     c84:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     c88:	1b c2       	rjmp	.+1078   	; 0x10c0 <Menu_Tick+0xb08>
     c8a:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     c8e:	81 30       	cpi	r24, 0x01	; 1
     c90:	99 f4       	brne	.+38     	; 0xcb8 <Menu_Tick+0x700>
     c92:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     c96:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     c9a:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <Button_A>
     c9e:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <Button_B>
     ca2:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <Button_L>
     ca6:	62 ef       	ldi	r22, 0xF2	; 242
     ca8:	71 e0       	ldi	r23, 0x01	; 1
     caa:	8e db       	rcall	.-2276   	; 0x3c8 <LCD_DisplayString>
     cac:	81 e2       	ldi	r24, 0x21	; 33
     cae:	6c db       	rcall	.-2344   	; 0x388 <LCD_Cursor>
     cb0:	88 e0       	ldi	r24, 0x08	; 8
     cb2:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     cb6:	04 c2       	rjmp	.+1032   	; 0x10c0 <Menu_Tick+0xb08>
     cb8:	89 e0       	ldi	r24, 0x09	; 9
     cba:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     cbe:	00 c2       	rjmp	.+1024   	; 0x10c0 <Menu_Tick+0xb08>
     cc0:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     cc4:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     cc8:	84 3f       	cpi	r24, 0xF4	; 244
     cca:	91 40       	sbci	r25, 0x01	; 1
     ccc:	68 f0       	brcs	.+26     	; 0xce8 <Menu_Tick+0x730>
     cce:	95 db       	rcall	.-2262   	; 0x3fa <clear_buttons_and_counter>
     cd0:	6e e0       	ldi	r22, 0x0E	; 14
     cd2:	71 e0       	ldi	r23, 0x01	; 1
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	78 db       	rcall	.-2320   	; 0x3c8 <LCD_DisplayString>
     cd8:	81 e2       	ldi	r24, 0x21	; 33
     cda:	56 db       	rcall	.-2388   	; 0x388 <LCD_Cursor>
     cdc:	82 e0       	ldi	r24, 0x02	; 2
     cde:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     ce2:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     ce6:	ec c1       	rjmp	.+984    	; 0x10c0 <Menu_Tick+0xb08>
     ce8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     cec:	81 30       	cpi	r24, 0x01	; 1
     cee:	49 f4       	brne	.+18     	; 0xd02 <Menu_Tick+0x74a>
     cf0:	82 e0       	ldi	r24, 0x02	; 2
     cf2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     cfc:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     d00:	df c1       	rjmp	.+958    	; 0x10c0 <Menu_Tick+0xb08>
     d02:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     d06:	81 30       	cpi	r24, 0x01	; 1
     d08:	31 f4       	brne	.+12     	; 0xd16 <Menu_Tick+0x75e>
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     d10:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     d14:	d5 c1       	rjmp	.+938    	; 0x10c0 <Menu_Tick+0xb08>
     d16:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     d1a:	81 30       	cpi	r24, 0x01	; 1
     d1c:	59 f4       	brne	.+22     	; 0xd34 <Menu_Tick+0x77c>
     d1e:	6d db       	rcall	.-2342   	; 0x3fa <clear_buttons_and_counter>
     d20:	69 ed       	ldi	r22, 0xD9	; 217
     d22:	71 e0       	ldi	r23, 0x01	; 1
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	50 db       	rcall	.-2400   	; 0x3c8 <LCD_DisplayString>
     d28:	81 e2       	ldi	r24, 0x21	; 33
     d2a:	2e db       	rcall	.-2468   	; 0x388 <LCD_Cursor>
     d2c:	8c e0       	ldi	r24, 0x0C	; 12
     d2e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     d32:	c6 c1       	rjmp	.+908    	; 0x10c0 <Menu_Tick+0xb08>
     d34:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     d38:	81 30       	cpi	r24, 0x01	; 1
     d3a:	a9 f4       	brne	.+42     	; 0xd66 <Menu_Tick+0x7ae>
     d3c:	5e db       	rcall	.-2372   	; 0x3fa <clear_buttons_and_counter>
     d3e:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
     d42:	81 30       	cpi	r24, 0x01	; 1
     d44:	31 f4       	brne	.+12     	; 0xd52 <Menu_Tick+0x79a>
     d46:	6c e2       	ldi	r22, 0x2C	; 44
     d48:	72 e0       	ldi	r23, 0x02	; 2
     d4a:	3e db       	rcall	.-2436   	; 0x3c8 <LCD_DisplayString>
     d4c:	81 e2       	ldi	r24, 0x21	; 33
     d4e:	1c db       	rcall	.-2504   	; 0x388 <LCD_Cursor>
     d50:	06 c0       	rjmp	.+12     	; 0xd5e <Menu_Tick+0x7a6>
     d52:	65 e4       	ldi	r22, 0x45	; 69
     d54:	72 e0       	ldi	r23, 0x02	; 2
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	37 db       	rcall	.-2450   	; 0x3c8 <LCD_DisplayString>
     d5a:	81 e2       	ldi	r24, 0x21	; 33
     d5c:	15 db       	rcall	.-2518   	; 0x388 <LCD_Cursor>
     d5e:	8b e0       	ldi	r24, 0x0B	; 11
     d60:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     d64:	ad c1       	rjmp	.+858    	; 0x10c0 <Menu_Tick+0xb08>
     d66:	8a e0       	ldi	r24, 0x0A	; 10
     d68:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     d6c:	a9 c1       	rjmp	.+850    	; 0x10c0 <Menu_Tick+0xb08>
     d6e:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     d72:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     d76:	84 3f       	cpi	r24, 0xF4	; 244
     d78:	91 40       	sbci	r25, 0x01	; 1
     d7a:	68 f0       	brcs	.+26     	; 0xd96 <Menu_Tick+0x7de>
     d7c:	3e db       	rcall	.-2436   	; 0x3fa <clear_buttons_and_counter>
     d7e:	6e e0       	ldi	r22, 0x0E	; 14
     d80:	71 e0       	ldi	r23, 0x01	; 1
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	21 db       	rcall	.-2494   	; 0x3c8 <LCD_DisplayString>
     d86:	81 e2       	ldi	r24, 0x21	; 33
     d88:	ff da       	rcall	.-2562   	; 0x388 <LCD_Cursor>
     d8a:	82 e0       	ldi	r24, 0x02	; 2
     d8c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     d90:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     d94:	95 c1       	rjmp	.+810    	; 0x10c0 <Menu_Tick+0xb08>
     d96:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d9a:	81 30       	cpi	r24, 0x01	; 1
     d9c:	49 f4       	brne	.+18     	; 0xdb0 <Menu_Tick+0x7f8>
     d9e:	82 e0       	ldi	r24, 0x02	; 2
     da0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     daa:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     dae:	88 c1       	rjmp	.+784    	; 0x10c0 <Menu_Tick+0xb08>
     db0:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     db4:	81 30       	cpi	r24, 0x01	; 1
     db6:	31 f4       	brne	.+12     	; 0xdc4 <Menu_Tick+0x80c>
     db8:	82 e0       	ldi	r24, 0x02	; 2
     dba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     dbe:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     dc2:	7e c1       	rjmp	.+764    	; 0x10c0 <Menu_Tick+0xb08>
     dc4:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     dc8:	81 30       	cpi	r24, 0x01	; 1
     dca:	09 f0       	breq	.+2      	; 0xdce <Menu_Tick+0x816>
     dcc:	3c c0       	rjmp	.+120    	; 0xe46 <Menu_Tick+0x88e>
     dce:	15 db       	rcall	.-2518   	; 0x3fa <clear_buttons_and_counter>
     dd0:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <bark_setting>
     dd4:	81 11       	cpse	r24, r1
     dd6:	1a c0       	rjmp	.+52     	; 0xe0c <Menu_Tick+0x854>
     dd8:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
     ddc:	81 11       	cpse	r24, r1
     dde:	07 c0       	rjmp	.+14     	; 0xdee <Menu_Tick+0x836>
     de0:	62 e6       	ldi	r22, 0x62	; 98
     de2:	72 e0       	ldi	r23, 0x02	; 2
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	f0 da       	rcall	.-2592   	; 0x3c8 <LCD_DisplayString>
     de8:	81 e2       	ldi	r24, 0x21	; 33
     dea:	ce da       	rcall	.-2660   	; 0x388 <LCD_Cursor>
     dec:	28 c0       	rjmp	.+80     	; 0xe3e <Menu_Tick+0x886>
     dee:	81 30       	cpi	r24, 0x01	; 1
     df0:	31 f4       	brne	.+12     	; 0xdfe <Menu_Tick+0x846>
     df2:	6f e7       	ldi	r22, 0x7F	; 127
     df4:	72 e0       	ldi	r23, 0x02	; 2
     df6:	e8 da       	rcall	.-2608   	; 0x3c8 <LCD_DisplayString>
     df8:	81 e2       	ldi	r24, 0x21	; 33
     dfa:	c6 da       	rcall	.-2676   	; 0x388 <LCD_Cursor>
     dfc:	20 c0       	rjmp	.+64     	; 0xe3e <Menu_Tick+0x886>
     dfe:	6c e9       	ldi	r22, 0x9C	; 156
     e00:	72 e0       	ldi	r23, 0x02	; 2
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	e1 da       	rcall	.-2622   	; 0x3c8 <LCD_DisplayString>
     e06:	81 e2       	ldi	r24, 0x21	; 33
     e08:	bf da       	rcall	.-2690   	; 0x388 <LCD_Cursor>
     e0a:	19 c0       	rjmp	.+50     	; 0xe3e <Menu_Tick+0x886>
     e0c:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
     e10:	81 11       	cpse	r24, r1
     e12:	07 c0       	rjmp	.+14     	; 0xe22 <Menu_Tick+0x86a>
     e14:	69 eb       	ldi	r22, 0xB9	; 185
     e16:	72 e0       	ldi	r23, 0x02	; 2
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	d6 da       	rcall	.-2644   	; 0x3c8 <LCD_DisplayString>
     e1c:	81 e2       	ldi	r24, 0x21	; 33
     e1e:	b4 da       	rcall	.-2712   	; 0x388 <LCD_Cursor>
     e20:	0e c0       	rjmp	.+28     	; 0xe3e <Menu_Tick+0x886>
     e22:	81 30       	cpi	r24, 0x01	; 1
     e24:	31 f4       	brne	.+12     	; 0xe32 <Menu_Tick+0x87a>
     e26:	66 ed       	ldi	r22, 0xD6	; 214
     e28:	72 e0       	ldi	r23, 0x02	; 2
     e2a:	ce da       	rcall	.-2660   	; 0x3c8 <LCD_DisplayString>
     e2c:	81 e2       	ldi	r24, 0x21	; 33
     e2e:	ac da       	rcall	.-2728   	; 0x388 <LCD_Cursor>
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <Menu_Tick+0x886>
     e32:	63 ef       	ldi	r22, 0xF3	; 243
     e34:	72 e0       	ldi	r23, 0x02	; 2
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	c7 da       	rcall	.-2674   	; 0x3c8 <LCD_DisplayString>
     e3a:	81 e2       	ldi	r24, 0x21	; 33
     e3c:	a5 da       	rcall	.-2742   	; 0x388 <LCD_Cursor>
     e3e:	8a e0       	ldi	r24, 0x0A	; 10
     e40:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     e44:	3d c1       	rjmp	.+634    	; 0x10c0 <Menu_Tick+0xb08>
     e46:	8b e0       	ldi	r24, 0x0B	; 11
     e48:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     e4c:	39 c1       	rjmp	.+626    	; 0x10c0 <Menu_Tick+0xb08>
     e4e:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     e52:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     e56:	84 3f       	cpi	r24, 0xF4	; 244
     e58:	91 40       	sbci	r25, 0x01	; 1
     e5a:	58 f0       	brcs	.+22     	; 0xe72 <Menu_Tick+0x8ba>
     e5c:	ce da       	rcall	.-2660   	; 0x3fa <clear_buttons_and_counter>
     e5e:	6e e0       	ldi	r22, 0x0E	; 14
     e60:	71 e0       	ldi	r23, 0x01	; 1
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	b1 da       	rcall	.-2718   	; 0x3c8 <LCD_DisplayString>
     e66:	81 e2       	ldi	r24, 0x21	; 33
     e68:	8f da       	rcall	.-2786   	; 0x388 <LCD_Cursor>
     e6a:	82 e0       	ldi	r24, 0x02	; 2
     e6c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     e70:	27 c1       	rjmp	.+590    	; 0x10c0 <Menu_Tick+0xb08>
     e72:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	49 f4       	brne	.+18     	; 0xe8c <Menu_Tick+0x8d4>
     e7a:	82 e0       	ldi	r24, 0x02	; 2
     e7c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     e80:	81 e0       	ldi	r24, 0x01	; 1
     e82:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <ARM_DISARM>
     e86:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     e8a:	1a c1       	rjmp	.+564    	; 0x10c0 <Menu_Tick+0xb08>
     e8c:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
     e90:	81 30       	cpi	r24, 0x01	; 1
     e92:	31 f4       	brne	.+12     	; 0xea0 <Menu_Tick+0x8e8>
     e94:	82 e0       	ldi	r24, 0x02	; 2
     e96:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     e9a:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
     e9e:	10 c1       	rjmp	.+544    	; 0x10c0 <Menu_Tick+0xb08>
     ea0:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     ea4:	81 30       	cpi	r24, 0x01	; 1
     ea6:	09 f0       	breq	.+2      	; 0xeaa <Menu_Tick+0x8f2>
     ea8:	3c c0       	rjmp	.+120    	; 0xf22 <Menu_Tick+0x96a>
     eaa:	a7 da       	rcall	.-2738   	; 0x3fa <clear_buttons_and_counter>
     eac:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <bark_setting>
     eb0:	81 11       	cpse	r24, r1
     eb2:	1a c0       	rjmp	.+52     	; 0xee8 <Menu_Tick+0x930>
     eb4:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
     eb8:	81 11       	cpse	r24, r1
     eba:	07 c0       	rjmp	.+14     	; 0xeca <Menu_Tick+0x912>
     ebc:	62 e6       	ldi	r22, 0x62	; 98
     ebe:	72 e0       	ldi	r23, 0x02	; 2
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	82 da       	rcall	.-2812   	; 0x3c8 <LCD_DisplayString>
     ec4:	81 e2       	ldi	r24, 0x21	; 33
     ec6:	60 da       	rcall	.-2880   	; 0x388 <LCD_Cursor>
     ec8:	28 c0       	rjmp	.+80     	; 0xf1a <Menu_Tick+0x962>
     eca:	81 30       	cpi	r24, 0x01	; 1
     ecc:	31 f4       	brne	.+12     	; 0xeda <Menu_Tick+0x922>
     ece:	6f e7       	ldi	r22, 0x7F	; 127
     ed0:	72 e0       	ldi	r23, 0x02	; 2
     ed2:	7a da       	rcall	.-2828   	; 0x3c8 <LCD_DisplayString>
     ed4:	81 e2       	ldi	r24, 0x21	; 33
     ed6:	58 da       	rcall	.-2896   	; 0x388 <LCD_Cursor>
     ed8:	20 c0       	rjmp	.+64     	; 0xf1a <Menu_Tick+0x962>
     eda:	6c e9       	ldi	r22, 0x9C	; 156
     edc:	72 e0       	ldi	r23, 0x02	; 2
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	73 da       	rcall	.-2842   	; 0x3c8 <LCD_DisplayString>
     ee2:	81 e2       	ldi	r24, 0x21	; 33
     ee4:	51 da       	rcall	.-2910   	; 0x388 <LCD_Cursor>
     ee6:	19 c0       	rjmp	.+50     	; 0xf1a <Menu_Tick+0x962>
     ee8:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
     eec:	81 11       	cpse	r24, r1
     eee:	07 c0       	rjmp	.+14     	; 0xefe <Menu_Tick+0x946>
     ef0:	69 eb       	ldi	r22, 0xB9	; 185
     ef2:	72 e0       	ldi	r23, 0x02	; 2
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	68 da       	rcall	.-2864   	; 0x3c8 <LCD_DisplayString>
     ef8:	81 e2       	ldi	r24, 0x21	; 33
     efa:	46 da       	rcall	.-2932   	; 0x388 <LCD_Cursor>
     efc:	0e c0       	rjmp	.+28     	; 0xf1a <Menu_Tick+0x962>
     efe:	81 30       	cpi	r24, 0x01	; 1
     f00:	31 f4       	brne	.+12     	; 0xf0e <Menu_Tick+0x956>
     f02:	66 ed       	ldi	r22, 0xD6	; 214
     f04:	72 e0       	ldi	r23, 0x02	; 2
     f06:	60 da       	rcall	.-2880   	; 0x3c8 <LCD_DisplayString>
     f08:	81 e2       	ldi	r24, 0x21	; 33
     f0a:	3e da       	rcall	.-2948   	; 0x388 <LCD_Cursor>
     f0c:	06 c0       	rjmp	.+12     	; 0xf1a <Menu_Tick+0x962>
     f0e:	63 ef       	ldi	r22, 0xF3	; 243
     f10:	72 e0       	ldi	r23, 0x02	; 2
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	59 da       	rcall	.-2894   	; 0x3c8 <LCD_DisplayString>
     f16:	81 e2       	ldi	r24, 0x21	; 33
     f18:	37 da       	rcall	.-2962   	; 0x388 <LCD_Cursor>
     f1a:	8a e0       	ldi	r24, 0x0A	; 10
     f1c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     f20:	cf c0       	rjmp	.+414    	; 0x10c0 <Menu_Tick+0xb08>
     f22:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	59 f4       	brne	.+22     	; 0xf40 <Menu_Tick+0x988>
     f2a:	67 da       	rcall	.-2866   	; 0x3fa <clear_buttons_and_counter>
     f2c:	6e e5       	ldi	r22, 0x5E	; 94
     f2e:	71 e0       	ldi	r23, 0x01	; 1
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	4a da       	rcall	.-2924   	; 0x3c8 <LCD_DisplayString>
     f34:	81 e2       	ldi	r24, 0x21	; 33
     f36:	28 da       	rcall	.-2992   	; 0x388 <LCD_Cursor>
     f38:	87 e0       	ldi	r24, 0x07	; 7
     f3a:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     f3e:	c0 c0       	rjmp	.+384    	; 0x10c0 <Menu_Tick+0xb08>
     f40:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	59 f4       	brne	.+22     	; 0xf5e <Menu_Tick+0x9a6>
     f48:	58 da       	rcall	.-2896   	; 0x3fa <clear_buttons_and_counter>
     f4a:	60 e1       	ldi	r22, 0x10	; 16
     f4c:	73 e0       	ldi	r23, 0x03	; 3
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	3b da       	rcall	.-2954   	; 0x3c8 <LCD_DisplayString>
     f52:	81 e2       	ldi	r24, 0x21	; 33
     f54:	19 da       	rcall	.-3022   	; 0x388 <LCD_Cursor>
     f56:	8d e0       	ldi	r24, 0x0D	; 13
     f58:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     f5c:	b1 c0       	rjmp	.+354    	; 0x10c0 <Menu_Tick+0xb08>
     f5e:	8c e0       	ldi	r24, 0x0C	; 12
     f60:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     f64:	ad c0       	rjmp	.+346    	; 0x10c0 <Menu_Tick+0xb08>
     f66:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
     f6a:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
     f6e:	84 3f       	cpi	r24, 0xF4	; 244
     f70:	91 40       	sbci	r25, 0x01	; 1
     f72:	68 f0       	brcs	.+26     	; 0xf8e <Menu_Tick+0x9d6>
     f74:	42 da       	rcall	.-2940   	; 0x3fa <clear_buttons_and_counter>
     f76:	6e e0       	ldi	r22, 0x0E	; 14
     f78:	71 e0       	ldi	r23, 0x01	; 1
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	25 da       	rcall	.-2998   	; 0x3c8 <LCD_DisplayString>
     f7e:	81 e2       	ldi	r24, 0x21	; 33
     f80:	03 da       	rcall	.-3066   	; 0x388 <LCD_Cursor>
     f82:	82 e0       	ldi	r24, 0x02	; 2
     f84:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     f88:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     f8c:	99 c0       	rjmp	.+306    	; 0x10c0 <Menu_Tick+0xb08>
     f8e:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
     f92:	81 30       	cpi	r24, 0x01	; 1
     f94:	b1 f4       	brne	.+44     	; 0xfc2 <Menu_Tick+0xa0a>
     f96:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <peripheral_on_off>
     f9a:	61 e0       	ldi	r22, 0x01	; 1
     f9c:	82 e0       	ldi	r24, 0x02	; 2
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	69 d7       	rcall	.+3794   	; 0x1e74 <eeprom_write_byte>
     fa2:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     fa6:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     faa:	6e e0       	ldi	r22, 0x0E	; 14
     fac:	71 e0       	ldi	r23, 0x01	; 1
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	0b da       	rcall	.-3050   	; 0x3c8 <LCD_DisplayString>
     fb2:	81 e2       	ldi	r24, 0x21	; 33
     fb4:	e9 d9       	rcall	.-3118   	; 0x388 <LCD_Cursor>
     fb6:	82 e0       	ldi	r24, 0x02	; 2
     fb8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     fbc:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     fc0:	7f c0       	rjmp	.+254    	; 0x10c0 <Menu_Tick+0xb08>
     fc2:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
     fc6:	81 30       	cpi	r24, 0x01	; 1
     fc8:	71 f4       	brne	.+28     	; 0xfe6 <Menu_Tick+0xa2e>
     fca:	17 da       	rcall	.-3026   	; 0x3fa <clear_buttons_and_counter>
     fcc:	69 ed       	ldi	r22, 0xD9	; 217
     fce:	71 e0       	ldi	r23, 0x01	; 1
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	fa d9       	rcall	.-3084   	; 0x3c8 <LCD_DisplayString>
     fd4:	81 e2       	ldi	r24, 0x21	; 33
     fd6:	d8 d9       	rcall	.-3152   	; 0x388 <LCD_Cursor>
     fd8:	82 e0       	ldi	r24, 0x02	; 2
     fda:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     fde:	8c e0       	ldi	r24, 0x0C	; 12
     fe0:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
     fe4:	6d c0       	rjmp	.+218    	; 0x10c0 <Menu_Tick+0xb08>
     fe6:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <Button_R>
     fea:	81 30       	cpi	r24, 0x01	; 1
     fec:	99 f4       	brne	.+38     	; 0x1014 <Menu_Tick+0xa5c>
     fee:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <counter+0x1>
     ff2:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <counter>
     ff6:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <Button_A>
     ffa:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <Button_B>
     ffe:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <Button_R>
    1002:	61 e3       	ldi	r22, 0x31	; 49
    1004:	73 e0       	ldi	r23, 0x03	; 3
    1006:	e0 d9       	rcall	.-3136   	; 0x3c8 <LCD_DisplayString>
    1008:	81 e2       	ldi	r24, 0x21	; 33
    100a:	be d9       	rcall	.-3204   	; 0x388 <LCD_Cursor>
    100c:	8e e0       	ldi	r24, 0x0E	; 14
    100e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    1012:	56 c0       	rjmp	.+172    	; 0x10c0 <Menu_Tick+0xb08>
    1014:	8d e0       	ldi	r24, 0x0D	; 13
    1016:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    101a:	52 c0       	rjmp	.+164    	; 0x10c0 <Menu_Tick+0xb08>
    101c:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <counter>
    1020:	90 91 67 09 	lds	r25, 0x0967	; 0x800967 <counter+0x1>
    1024:	84 3f       	cpi	r24, 0xF4	; 244
    1026:	91 40       	sbci	r25, 0x01	; 1
    1028:	68 f0       	brcs	.+26     	; 0x1044 <Menu_Tick+0xa8c>
    102a:	e7 d9       	rcall	.-3122   	; 0x3fa <clear_buttons_and_counter>
    102c:	6e e0       	ldi	r22, 0x0E	; 14
    102e:	71 e0       	ldi	r23, 0x01	; 1
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	ca d9       	rcall	.-3180   	; 0x3c8 <LCD_DisplayString>
    1034:	81 e2       	ldi	r24, 0x21	; 33
    1036:	a8 d9       	rcall	.-3248   	; 0x388 <LCD_Cursor>
    1038:	82 e0       	ldi	r24, 0x02	; 2
    103a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    103e:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    1042:	3e c0       	rjmp	.+124    	; 0x10c0 <Menu_Tick+0xb08>
    1044:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <Button_A>
    1048:	81 30       	cpi	r24, 0x01	; 1
    104a:	99 f4       	brne	.+38     	; 0x1072 <Menu_Tick+0xaba>
    104c:	10 92 63 09 	sts	0x0963, r1	; 0x800963 <peripheral_on_off>
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	82 e0       	ldi	r24, 0x02	; 2
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	0e d7       	rcall	.+3612   	; 0x1e74 <eeprom_write_byte>
    1058:	d0 d9       	rcall	.-3168   	; 0x3fa <clear_buttons_and_counter>
    105a:	6e e0       	ldi	r22, 0x0E	; 14
    105c:	71 e0       	ldi	r23, 0x01	; 1
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	b3 d9       	rcall	.-3226   	; 0x3c8 <LCD_DisplayString>
    1062:	81 e2       	ldi	r24, 0x21	; 33
    1064:	91 d9       	rcall	.-3294   	; 0x388 <LCD_Cursor>
    1066:	82 e0       	ldi	r24, 0x02	; 2
    1068:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    106c:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    1070:	27 c0       	rjmp	.+78     	; 0x10c0 <Menu_Tick+0xb08>
    1072:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <Button_B>
    1076:	81 30       	cpi	r24, 0x01	; 1
    1078:	71 f4       	brne	.+28     	; 0x1096 <Menu_Tick+0xade>
    107a:	bf d9       	rcall	.-3202   	; 0x3fa <clear_buttons_and_counter>
    107c:	69 ed       	ldi	r22, 0xD9	; 217
    107e:	71 e0       	ldi	r23, 0x01	; 1
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	a2 d9       	rcall	.-3260   	; 0x3c8 <LCD_DisplayString>
    1084:	81 e2       	ldi	r24, 0x21	; 33
    1086:	80 d9       	rcall	.-3328   	; 0x388 <LCD_Cursor>
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    108e:	8c e0       	ldi	r24, 0x0C	; 12
    1090:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    1094:	15 c0       	rjmp	.+42     	; 0x10c0 <Menu_Tick+0xb08>
    1096:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <Button_L>
    109a:	81 30       	cpi	r24, 0x01	; 1
    109c:	59 f4       	brne	.+22     	; 0x10b4 <Menu_Tick+0xafc>
    109e:	ad d9       	rcall	.-3238   	; 0x3fa <clear_buttons_and_counter>
    10a0:	60 e1       	ldi	r22, 0x10	; 16
    10a2:	73 e0       	ldi	r23, 0x03	; 3
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	90 d9       	rcall	.-3296   	; 0x3c8 <LCD_DisplayString>
    10a8:	81 e2       	ldi	r24, 0x21	; 33
    10aa:	6e d9       	rcall	.-3364   	; 0x388 <LCD_Cursor>
    10ac:	8d e0       	ldi	r24, 0x0D	; 13
    10ae:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    10b2:	06 c0       	rjmp	.+12     	; 0x10c0 <Menu_Tick+0xb08>
    10b4:	8e e0       	ldi	r24, 0x0E	; 14
    10b6:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <menu_state>
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <Menu_Tick+0xb08>
    10bc:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
    10c0:	cf 91       	pop	r28
    10c2:	08 95       	ret

000010c4 <MENUSecTask>:
    10c4:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <menu_state>
    10c8:	77 da       	rcall	.-2834   	; 0x5b8 <Menu_Tick>
    10ca:	8a e0       	ldi	r24, 0x0A	; 10
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	ea d5       	rcall	.+3028   	; 0x1ca4 <vTaskDelay>
    10d0:	fb cf       	rjmp	.-10     	; 0x10c8 <MENUSecTask+0x4>

000010d2 <StartMENUPulse>:
    10d2:	af 92       	push	r10
    10d4:	bf 92       	push	r11
    10d6:	cf 92       	push	r12
    10d8:	df 92       	push	r13
    10da:	ef 92       	push	r14
    10dc:	ff 92       	push	r15
    10de:	0f 93       	push	r16
    10e0:	a1 2c       	mov	r10, r1
    10e2:	b1 2c       	mov	r11, r1
    10e4:	c1 2c       	mov	r12, r1
    10e6:	d1 2c       	mov	r13, r1
    10e8:	e1 2c       	mov	r14, r1
    10ea:	f1 2c       	mov	r15, r1
    10ec:	08 2f       	mov	r16, r24
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	45 e5       	ldi	r20, 0x55	; 85
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	62 e5       	ldi	r22, 0x52	; 82
    10f8:	73 e0       	ldi	r23, 0x03	; 3
    10fa:	82 e6       	ldi	r24, 0x62	; 98
    10fc:	98 e0       	ldi	r25, 0x08	; 8
    10fe:	5a d3       	rcall	.+1716   	; 0x17b4 <xTaskGenericCreate>
    1100:	0f 91       	pop	r16
    1102:	ff 90       	pop	r15
    1104:	ef 90       	pop	r14
    1106:	df 90       	pop	r13
    1108:	cf 90       	pop	r12
    110a:	bf 90       	pop	r11
    110c:	af 90       	pop	r10
    110e:	08 95       	ret

00001110 <Trans_Tick>:
    1110:	80 91 cb 09 	lds	r24, 0x09CB	; 0x8009cb <trans_state>
    1114:	88 23       	and	r24, r24
    1116:	21 f0       	breq	.+8      	; 0x1120 <Trans_Tick+0x10>
    1118:	81 30       	cpi	r24, 0x01	; 1
    111a:	09 f4       	brne	.+2      	; 0x111e <Trans_Tick+0xe>
    111c:	b4 c0       	rjmp	.+360    	; 0x1286 <Trans_Tick+0x176>
    111e:	b7 c0       	rjmp	.+366    	; 0x128e <Trans_Tick+0x17e>
    1120:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <ARM_DISARM>
    1124:	81 11       	cpse	r24, r1
    1126:	57 c0       	rjmp	.+174    	; 0x11d6 <Trans_Tick+0xc6>
    1128:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <bark_setting>
    112c:	81 11       	cpse	r24, r1
    112e:	29 c0       	rjmp	.+82     	; 0x1182 <Trans_Tick+0x72>
    1130:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
    1134:	81 11       	cpse	r24, r1
    1136:	0b c0       	rjmp	.+22     	; 0x114e <Trans_Tick+0x3e>
    1138:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    113c:	81 11       	cpse	r24, r1
    113e:	03 c0       	rjmp	.+6      	; 0x1146 <Trans_Tick+0x36>
    1140:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <data_to_send>
    1144:	ab c0       	rjmp	.+342    	; 0x129c <Trans_Tick+0x18c>
    1146:	80 e1       	ldi	r24, 0x10	; 16
    1148:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    114c:	a7 c0       	rjmp	.+334    	; 0x129c <Trans_Tick+0x18c>
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	61 f4       	brne	.+24     	; 0x116a <Trans_Tick+0x5a>
    1152:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    1156:	81 11       	cpse	r24, r1
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <Trans_Tick+0x52>
    115a:	82 e0       	ldi	r24, 0x02	; 2
    115c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1160:	9d c0       	rjmp	.+314    	; 0x129c <Trans_Tick+0x18c>
    1162:	82 e1       	ldi	r24, 0x12	; 18
    1164:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1168:	99 c0       	rjmp	.+306    	; 0x129c <Trans_Tick+0x18c>
    116a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    116e:	81 11       	cpse	r24, r1
    1170:	04 c0       	rjmp	.+8      	; 0x117a <Trans_Tick+0x6a>
    1172:	84 e0       	ldi	r24, 0x04	; 4
    1174:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1178:	91 c0       	rjmp	.+290    	; 0x129c <Trans_Tick+0x18c>
    117a:	84 e1       	ldi	r24, 0x14	; 20
    117c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1180:	8d c0       	rjmp	.+282    	; 0x129c <Trans_Tick+0x18c>
    1182:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
    1186:	81 11       	cpse	r24, r1
    1188:	0c c0       	rjmp	.+24     	; 0x11a2 <Trans_Tick+0x92>
    118a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    118e:	81 11       	cpse	r24, r1
    1190:	04 c0       	rjmp	.+8      	; 0x119a <Trans_Tick+0x8a>
    1192:	88 e0       	ldi	r24, 0x08	; 8
    1194:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1198:	81 c0       	rjmp	.+258    	; 0x129c <Trans_Tick+0x18c>
    119a:	88 e1       	ldi	r24, 0x18	; 24
    119c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11a0:	7d c0       	rjmp	.+250    	; 0x129c <Trans_Tick+0x18c>
    11a2:	81 30       	cpi	r24, 0x01	; 1
    11a4:	61 f4       	brne	.+24     	; 0x11be <Trans_Tick+0xae>
    11a6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    11aa:	81 11       	cpse	r24, r1
    11ac:	04 c0       	rjmp	.+8      	; 0x11b6 <Trans_Tick+0xa6>
    11ae:	8a e0       	ldi	r24, 0x0A	; 10
    11b0:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11b4:	73 c0       	rjmp	.+230    	; 0x129c <Trans_Tick+0x18c>
    11b6:	8a e1       	ldi	r24, 0x1A	; 26
    11b8:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11bc:	6f c0       	rjmp	.+222    	; 0x129c <Trans_Tick+0x18c>
    11be:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    11c2:	81 11       	cpse	r24, r1
    11c4:	04 c0       	rjmp	.+8      	; 0x11ce <Trans_Tick+0xbe>
    11c6:	8c e0       	ldi	r24, 0x0C	; 12
    11c8:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11cc:	67 c0       	rjmp	.+206    	; 0x129c <Trans_Tick+0x18c>
    11ce:	8c e1       	ldi	r24, 0x1C	; 28
    11d0:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11d4:	63 c0       	rjmp	.+198    	; 0x129c <Trans_Tick+0x18c>
    11d6:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <bark_setting>
    11da:	81 11       	cpse	r24, r1
    11dc:	2a c0       	rjmp	.+84     	; 0x1232 <Trans_Tick+0x122>
    11de:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
    11e2:	81 11       	cpse	r24, r1
    11e4:	0c c0       	rjmp	.+24     	; 0x11fe <Trans_Tick+0xee>
    11e6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    11ea:	81 11       	cpse	r24, r1
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <Trans_Tick+0xe6>
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11f4:	53 c0       	rjmp	.+166    	; 0x129c <Trans_Tick+0x18c>
    11f6:	81 e8       	ldi	r24, 0x81	; 129
    11f8:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    11fc:	4f c0       	rjmp	.+158    	; 0x129c <Trans_Tick+0x18c>
    11fe:	81 30       	cpi	r24, 0x01	; 1
    1200:	61 f4       	brne	.+24     	; 0x121a <Trans_Tick+0x10a>
    1202:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    1206:	81 11       	cpse	r24, r1
    1208:	04 c0       	rjmp	.+8      	; 0x1212 <Trans_Tick+0x102>
    120a:	83 e0       	ldi	r24, 0x03	; 3
    120c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1210:	45 c0       	rjmp	.+138    	; 0x129c <Trans_Tick+0x18c>
    1212:	83 e8       	ldi	r24, 0x83	; 131
    1214:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1218:	41 c0       	rjmp	.+130    	; 0x129c <Trans_Tick+0x18c>
    121a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    121e:	81 11       	cpse	r24, r1
    1220:	04 c0       	rjmp	.+8      	; 0x122a <Trans_Tick+0x11a>
    1222:	85 e0       	ldi	r24, 0x05	; 5
    1224:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1228:	39 c0       	rjmp	.+114    	; 0x129c <Trans_Tick+0x18c>
    122a:	85 e8       	ldi	r24, 0x85	; 133
    122c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1230:	35 c0       	rjmp	.+106    	; 0x129c <Trans_Tick+0x18c>
    1232:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <bark_delay>
    1236:	81 11       	cpse	r24, r1
    1238:	0c c0       	rjmp	.+24     	; 0x1252 <Trans_Tick+0x142>
    123a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    123e:	81 11       	cpse	r24, r1
    1240:	04 c0       	rjmp	.+8      	; 0x124a <Trans_Tick+0x13a>
    1242:	89 e0       	ldi	r24, 0x09	; 9
    1244:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1248:	29 c0       	rjmp	.+82     	; 0x129c <Trans_Tick+0x18c>
    124a:	89 e8       	ldi	r24, 0x89	; 137
    124c:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1250:	25 c0       	rjmp	.+74     	; 0x129c <Trans_Tick+0x18c>
    1252:	81 30       	cpi	r24, 0x01	; 1
    1254:	61 f4       	brne	.+24     	; 0x126e <Trans_Tick+0x15e>
    1256:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    125a:	81 11       	cpse	r24, r1
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <Trans_Tick+0x156>
    125e:	8b e0       	ldi	r24, 0x0B	; 11
    1260:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1264:	1b c0       	rjmp	.+54     	; 0x129c <Trans_Tick+0x18c>
    1266:	8b e8       	ldi	r24, 0x8B	; 139
    1268:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    126c:	17 c0       	rjmp	.+46     	; 0x129c <Trans_Tick+0x18c>
    126e:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <peripheral_on_off>
    1272:	81 11       	cpse	r24, r1
    1274:	04 c0       	rjmp	.+8      	; 0x127e <Trans_Tick+0x16e>
    1276:	8d e0       	ldi	r24, 0x0D	; 13
    1278:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    127c:	0f c0       	rjmp	.+30     	; 0x129c <Trans_Tick+0x18c>
    127e:	8d e8       	ldi	r24, 0x8D	; 141
    1280:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <data_to_send>
    1284:	0b c0       	rjmp	.+22     	; 0x129c <Trans_Tick+0x18c>
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <data_to_send>
    128c:	3a d8       	rcall	.-3980   	; 0x302 <USART_Send>
    128e:	80 91 cb 09 	lds	r24, 0x09CB	; 0x8009cb <trans_state>
    1292:	88 23       	and	r24, r24
    1294:	19 f0       	breq	.+6      	; 0x129c <Trans_Tick+0x18c>
    1296:	81 30       	cpi	r24, 0x01	; 1
    1298:	49 f0       	breq	.+18     	; 0x12ac <Trans_Tick+0x19c>
    129a:	0f c0       	rjmp	.+30     	; 0x12ba <Trans_Tick+0x1aa>
    129c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    12a0:	85 ff       	sbrs	r24, 5
    12a2:	0d c0       	rjmp	.+26     	; 0x12be <Trans_Tick+0x1ae>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	80 93 cb 09 	sts	0x09CB, r24	; 0x8009cb <trans_state>
    12aa:	08 95       	ret
    12ac:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    12b0:	86 ff       	sbrs	r24, 6
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <Trans_Tick+0x1ae>
    12b4:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <trans_state>
    12b8:	08 95       	ret
    12ba:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <trans_state>
    12be:	08 95       	ret

000012c0 <TransSecTask>:
    12c0:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <trans_state>
    12c4:	25 df       	rcall	.-438    	; 0x1110 <Trans_Tick>
    12c6:	8a e0       	ldi	r24, 0x0A	; 10
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	ec d4       	rcall	.+2520   	; 0x1ca4 <vTaskDelay>
    12cc:	fb cf       	rjmp	.-10     	; 0x12c4 <TransSecTask+0x4>

000012ce <TransSecPulse>:
    12ce:	af 92       	push	r10
    12d0:	bf 92       	push	r11
    12d2:	cf 92       	push	r12
    12d4:	df 92       	push	r13
    12d6:	ef 92       	push	r14
    12d8:	ff 92       	push	r15
    12da:	0f 93       	push	r16
    12dc:	a1 2c       	mov	r10, r1
    12de:	b1 2c       	mov	r11, r1
    12e0:	c1 2c       	mov	r12, r1
    12e2:	d1 2c       	mov	r13, r1
    12e4:	e1 2c       	mov	r14, r1
    12e6:	f1 2c       	mov	r15, r1
    12e8:	08 2f       	mov	r16, r24
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	45 e5       	ldi	r20, 0x55	; 85
    12f0:	50 e0       	ldi	r21, 0x00	; 0
    12f2:	6e e5       	ldi	r22, 0x5E	; 94
    12f4:	73 e0       	ldi	r23, 0x03	; 3
    12f6:	80 e6       	ldi	r24, 0x60	; 96
    12f8:	99 e0       	ldi	r25, 0x09	; 9
    12fa:	5c d2       	rcall	.+1208   	; 0x17b4 <xTaskGenericCreate>
    12fc:	0f 91       	pop	r16
    12fe:	ff 90       	pop	r15
    1300:	ef 90       	pop	r14
    1302:	df 90       	pop	r13
    1304:	cf 90       	pop	r12
    1306:	bf 90       	pop	r11
    1308:	af 90       	pop	r10
    130a:	08 95       	ret

0000130c <Rec_Tick>:
    130c:	80 91 c9 09 	lds	r24, 0x09C9	; 0x8009c9 <rec_state>
    1310:	81 30       	cpi	r24, 0x01	; 1
    1312:	39 f4       	brne	.+14     	; 0x1322 <Rec_Tick+0x16>
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	07 d8       	rcall	.-4082   	; 0x326 <USART_Receive>
    1318:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <received_value>
    131c:	80 e0       	ldi	r24, 0x00	; 0
    131e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <USART_Flush>
    1322:	80 91 c9 09 	lds	r24, 0x09C9	; 0x8009c9 <rec_state>
    1326:	88 23       	and	r24, r24
    1328:	19 f0       	breq	.+6      	; 0x1330 <Rec_Tick+0x24>
    132a:	10 92 c9 09 	sts	0x09C9, r1	; 0x8009c9 <rec_state>
    132e:	08 95       	ret
    1330:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1334:	88 23       	and	r24, r24
    1336:	1c f4       	brge	.+6      	; 0x133e <Rec_Tick+0x32>
    1338:	81 e0       	ldi	r24, 0x01	; 1
    133a:	80 93 c9 09 	sts	0x09C9, r24	; 0x8009c9 <rec_state>
    133e:	08 95       	ret

00001340 <RecSecTask>:
    1340:	10 92 c9 09 	sts	0x09C9, r1	; 0x8009c9 <rec_state>
    1344:	e3 df       	rcall	.-58     	; 0x130c <Rec_Tick>
    1346:	8a e0       	ldi	r24, 0x0A	; 10
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	ac d4       	rcall	.+2392   	; 0x1ca4 <vTaskDelay>
    134c:	fb cf       	rjmp	.-10     	; 0x1344 <RecSecTask+0x4>

0000134e <RecSecPulse>:
    134e:	af 92       	push	r10
    1350:	bf 92       	push	r11
    1352:	cf 92       	push	r12
    1354:	df 92       	push	r13
    1356:	ef 92       	push	r14
    1358:	ff 92       	push	r15
    135a:	0f 93       	push	r16
    135c:	a1 2c       	mov	r10, r1
    135e:	b1 2c       	mov	r11, r1
    1360:	c1 2c       	mov	r12, r1
    1362:	d1 2c       	mov	r13, r1
    1364:	e1 2c       	mov	r14, r1
    1366:	f1 2c       	mov	r15, r1
    1368:	08 2f       	mov	r16, r24
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	45 e5       	ldi	r20, 0x55	; 85
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	6f e6       	ldi	r22, 0x6F	; 111
    1374:	73 e0       	ldi	r23, 0x03	; 3
    1376:	80 ea       	ldi	r24, 0xA0	; 160
    1378:	99 e0       	ldi	r25, 0x09	; 9
    137a:	1c d2       	rcall	.+1080   	; 0x17b4 <xTaskGenericCreate>
    137c:	0f 91       	pop	r16
    137e:	ff 90       	pop	r15
    1380:	ef 90       	pop	r14
    1382:	df 90       	pop	r13
    1384:	cf 90       	pop	r12
    1386:	bf 90       	pop	r11
    1388:	af 90       	pop	r10
    138a:	08 95       	ret

0000138c <Blue_Rec_Tick>:
}

void Blue_Rec_Tick(){
	//Actions
	switch(blue_rec_state){
    138c:	80 91 ca 09 	lds	r24, 0x09CA	; 0x8009ca <blue_rec_state>
    1390:	81 30       	cpi	r24, 0x01	; 1
    1392:	a9 f4       	brne	.+42     	; 0x13be <Blue_Rec_Tick+0x32>


		case Blue_Receive_State:
		//get data from bluetooth
		//bluetooth_arm_disarm = USART_Receive(1);
		bluetooth_temp = USART_Receive(1);
    1394:	0e 94 93 01 	call	0x326	; 0x326 <USART_Receive>
    1398:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <bluetooth_temp>
		if(bluetooth_temp == 0x0F){	//received arm command
    139c:	8f 30       	cpi	r24, 0x0F	; 15
    139e:	21 f4       	brne	.+8      	; 0x13a8 <Blue_Rec_Tick+0x1c>
			bluetooth_arm_disarm = 1;
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    13a6:	08 c0       	rjmp	.+16     	; 0x13b8 <Blue_Rec_Tick+0x2c>
		}
		else if(bluetooth_temp == 0xF0){ //received disarm command
    13a8:	80 3f       	cpi	r24, 0xF0	; 240
    13aa:	19 f4       	brne	.+6      	; 0x13b2 <Blue_Rec_Tick+0x26>
			bluetooth_arm_disarm = 0;
    13ac:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    13b0:	03 c0       	rjmp	.+6      	; 0x13b8 <Blue_Rec_Tick+0x2c>
		}
		else{
			bluetooth_arm_disarm = 2;  //random or invalid data set to 2
    13b2:	82 e0       	ldi	r24, 0x02	; 2
    13b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}
		
		USART_Flush(1); //flush so flag reset
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	0e 94 64 01 	call	0x2c8	; 0x2c8 <USART_Flush>
		
		default:
		break;
	}
	//Transitions
	switch(blue_rec_state){
    13be:	80 91 ca 09 	lds	r24, 0x09CA	; 0x8009ca <blue_rec_state>
    13c2:	88 23       	and	r24, r24
    13c4:	19 f0       	breq	.+6      	; 0x13cc <Blue_Rec_Tick+0x40>
		}
		break;


		case Blue_Receive_State:
		blue_rec_state = Blue_Rec_Wait; //go back
    13c6:	10 92 ca 09 	sts	0x09CA, r1	; 0x8009ca <blue_rec_state>
    13ca:	08 95       	ret
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
    13cc:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
		break;
	}
	//Transitions
	switch(blue_rec_state){
		case Blue_Rec_Wait:
		if(USART_HasReceived(1)){
    13d0:	88 23       	and	r24, r24
    13d2:	1c f4       	brge	.+6      	; 0x13da <Blue_Rec_Tick+0x4e>
			blue_rec_state = Blue_Receive_State; //if ready go to next state
    13d4:	81 e0       	ldi	r24, 0x01	; 1
    13d6:	80 93 ca 09 	sts	0x09CA, r24	; 0x8009ca <blue_rec_state>
    13da:	08 95       	ret

000013dc <BlueRecSecTask>:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Bluetooth RECEIVE FSM
enum BLUERECState {Blue_Rec_Wait, Blue_Receive_State } blue_rec_state;

void BLUE_REC_Init(){
	blue_rec_state = Blue_Rec_Wait;
    13dc:	10 92 ca 09 	sts	0x09CA, r1	; 0x8009ca <blue_rec_state>
void BlueRecSecTask()
{
	BLUE_REC_Init();
	for(;;)
	{
		Blue_Rec_Tick();
    13e0:	d5 df       	rcall	.-86     	; 0x138c <Blue_Rec_Tick>
		vTaskDelay(10);
    13e2:	8a e0       	ldi	r24, 0x0A	; 10
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	5e d4       	rcall	.+2236   	; 0x1ca4 <vTaskDelay>
    13e8:	fb cf       	rjmp	.-10     	; 0x13e0 <BlueRecSecTask+0x4>

000013ea <BlueRecSecPulse>:
	}
}

void BlueRecSecPulse(unsigned portBASE_TYPE Priority)
{
    13ea:	af 92       	push	r10
    13ec:	bf 92       	push	r11
    13ee:	cf 92       	push	r12
    13f0:	df 92       	push	r13
    13f2:	ef 92       	push	r14
    13f4:	ff 92       	push	r15
    13f6:	0f 93       	push	r16
	xTaskCreate(BlueRecSecTask, (signed portCHAR *)"BlueRecSecTask", configMINIMAL_STACK_SIZE, NULL, Priority, NULL );
    13f8:	a1 2c       	mov	r10, r1
    13fa:	b1 2c       	mov	r11, r1
    13fc:	c1 2c       	mov	r12, r1
    13fe:	d1 2c       	mov	r13, r1
    1400:	e1 2c       	mov	r14, r1
    1402:	f1 2c       	mov	r15, r1
    1404:	08 2f       	mov	r16, r24
    1406:	20 e0       	ldi	r18, 0x00	; 0
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	45 e5       	ldi	r20, 0x55	; 85
    140c:	50 e0       	ldi	r21, 0x00	; 0
    140e:	6b e6       	ldi	r22, 0x6B	; 107
    1410:	73 e0       	ldi	r23, 0x03	; 3
    1412:	8e ee       	ldi	r24, 0xEE	; 238
    1414:	99 e0       	ldi	r25, 0x09	; 9
    1416:	ce d1       	rcall	.+924    	; 0x17b4 <xTaskGenericCreate>
}
    1418:	0f 91       	pop	r16
    141a:	ff 90       	pop	r15
    141c:	ef 90       	pop	r14
    141e:	df 90       	pop	r13
    1420:	cf 90       	pop	r12
    1422:	bf 90       	pop	r11
    1424:	af 90       	pop	r10
    1426:	08 95       	ret

00001428 <main>:


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // PA0-4 inputs for control/power buttons
    1428:	11 b8       	out	0x01, r1	; 1
    142a:	8f ef       	ldi	r24, 0xFF	; 255
    142c:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00; // set as output for lcd
    142e:	87 b9       	out	0x07, r24	; 7
    1430:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
    1432:	8a b9       	out	0x0a, r24	; 10
    1434:	1b b8       	out	0x0b, r1	; 11
	DDRB = 0xFF; PORTB = 0x00; //set as output
    1436:	84 b9       	out	0x04, r24	; 4
    1438:	15 b8       	out	0x05, r1	; 5
	//eeprom_write_byte(0,0);  //address 0 bark settings
	//eeprom_write_byte(1,0);  //address 1 timing setting
	//eeprom_write_byte(2,0);  //address 1 periperal setting
	

	bark_setting = eeprom_read_byte(0);
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	12 d5       	rcall	.+2596   	; 0x1e64 <eeprom_read_byte>
    1440:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <bark_setting>
	bark_delay = eeprom_read_byte(1);
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	0d d5       	rcall	.+2586   	; 0x1e64 <eeprom_read_byte>
    144a:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <bark_delay>
	peripheral_on_off = eeprom_read_byte(2);
    144e:	82 e0       	ldi	r24, 0x02	; 2
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	08 d5       	rcall	.+2576   	; 0x1e64 <eeprom_read_byte>
    1454:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <peripheral_on_off>


	//LCD init
	LCD_init();
    1458:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_init>
	
	LCD_DisplayString(1, "TEST");
    145c:	6a e7       	ldi	r22, 0x7A	; 122
    145e:	73 e0       	ldi	r23, 0x03	; 3
    1460:	81 e0       	ldi	r24, 0x01	; 1
    1462:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_DisplayString>
	LCD_Cursor(33);
    1466:	81 e2       	ldi	r24, 0x21	; 33
    1468:	0e 94 c4 01 	call	0x388	; 0x388 <LCD_Cursor>
	//output initial message that dog is off
	//LCD_DisplayString(1, LCD_data[1]);
	
	//init USART
	initUSART(0); //used to communicate to CHIP 0 AKA "dog"
    146c:	80 e0       	ldi	r24, 0x00	; 0
    146e:	0e 94 42 01 	call	0x284	; 0x284 <initUSART>
	initUSART(1); //used to communicate via bluetooth
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	0e 94 42 01 	call	0x284	; 0x284 <initUSART>
	
	
	//Start Tasks
	StartButtonPulse(1);
    1478:	81 e0       	ldi	r24, 0x01	; 1
	StartMENUPulse(1);
    147a:	7e d8       	rcall	.-3844   	; 0x578 <StartButtonPulse>
    147c:	81 e0       	ldi	r24, 0x01	; 1
	TransSecPulse(1);
    147e:	29 de       	rcall	.-942    	; 0x10d2 <StartMENUPulse>
    1480:	81 e0       	ldi	r24, 0x01	; 1
	RecSecPulse(1);
    1482:	25 df       	rcall	.-438    	; 0x12ce <TransSecPulse>
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	63 df       	rcall	.-314    	; 0x134e <RecSecPulse>

	BlueRecSecPulse(1);
    1488:	81 e0       	ldi	r24, 0x01	; 1
    148a:	af df       	rcall	.-162    	; 0x13ea <BlueRecSecPulse>
    148c:	94 d2       	rcall	.+1320   	; 0x19b6 <vTaskStartScheduler>
	
	//RunSchedular
	vTaskStartScheduler();
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	90 e0       	ldi	r25, 0x00	; 0
	
	return 0;
    1492:	08 95       	ret

00001494 <pxPortInitialiseStack>:
    1494:	31 e1       	ldi	r19, 0x11	; 17
    1496:	fc 01       	movw	r30, r24
	return pdTRUE;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
    1498:	30 83       	st	Z, r19
    149a:	31 97       	sbiw	r30, 0x01	; 1
    149c:	22 e2       	ldi	r18, 0x22	; 34
    149e:	20 83       	st	Z, r18
    14a0:	31 97       	sbiw	r30, 0x01	; 1
    14a2:	a3 e3       	ldi	r26, 0x33	; 51
    14a4:	a0 83       	st	Z, r26
    14a6:	31 97       	sbiw	r30, 0x01	; 1
    14a8:	60 83       	st	Z, r22
    14aa:	31 97       	sbiw	r30, 0x01	; 1
    14ac:	70 83       	st	Z, r23
    14ae:	31 97       	sbiw	r30, 0x01	; 1
    14b0:	10 82       	st	Z, r1
    14b2:	31 97       	sbiw	r30, 0x01	; 1
    14b4:	60 e8       	ldi	r22, 0x80	; 128
    14b6:	60 83       	st	Z, r22
    14b8:	31 97       	sbiw	r30, 0x01	; 1
    14ba:	10 82       	st	Z, r1
    14bc:	31 97       	sbiw	r30, 0x01	; 1
    14be:	62 e0       	ldi	r22, 0x02	; 2
    14c0:	60 83       	st	Z, r22
    14c2:	31 97       	sbiw	r30, 0x01	; 1
    14c4:	63 e0       	ldi	r22, 0x03	; 3
    14c6:	60 83       	st	Z, r22
    14c8:	31 97       	sbiw	r30, 0x01	; 1
    14ca:	64 e0       	ldi	r22, 0x04	; 4
    14cc:	60 83       	st	Z, r22
    14ce:	31 97       	sbiw	r30, 0x01	; 1
    14d0:	65 e0       	ldi	r22, 0x05	; 5
    14d2:	60 83       	st	Z, r22
    14d4:	31 97       	sbiw	r30, 0x01	; 1
    14d6:	66 e0       	ldi	r22, 0x06	; 6
    14d8:	60 83       	st	Z, r22
    14da:	31 97       	sbiw	r30, 0x01	; 1
    14dc:	67 e0       	ldi	r22, 0x07	; 7
    14de:	60 83       	st	Z, r22
    14e0:	31 97       	sbiw	r30, 0x01	; 1
    14e2:	68 e0       	ldi	r22, 0x08	; 8
    14e4:	60 83       	st	Z, r22
    14e6:	31 97       	sbiw	r30, 0x01	; 1
    14e8:	69 e0       	ldi	r22, 0x09	; 9
    14ea:	60 83       	st	Z, r22
    14ec:	31 97       	sbiw	r30, 0x01	; 1
    14ee:	60 e1       	ldi	r22, 0x10	; 16
    14f0:	60 83       	st	Z, r22
    14f2:	31 97       	sbiw	r30, 0x01	; 1
    14f4:	30 83       	st	Z, r19
    14f6:	31 97       	sbiw	r30, 0x01	; 1
    14f8:	32 e1       	ldi	r19, 0x12	; 18
    14fa:	30 83       	st	Z, r19
    14fc:	31 97       	sbiw	r30, 0x01	; 1
    14fe:	33 e1       	ldi	r19, 0x13	; 19
    1500:	30 83       	st	Z, r19
    1502:	31 97       	sbiw	r30, 0x01	; 1
    1504:	34 e1       	ldi	r19, 0x14	; 20
    1506:	30 83       	st	Z, r19
    1508:	31 97       	sbiw	r30, 0x01	; 1
    150a:	35 e1       	ldi	r19, 0x15	; 21
    150c:	30 83       	st	Z, r19
    150e:	31 97       	sbiw	r30, 0x01	; 1
    1510:	36 e1       	ldi	r19, 0x16	; 22
    1512:	30 83       	st	Z, r19
    1514:	31 97       	sbiw	r30, 0x01	; 1
    1516:	37 e1       	ldi	r19, 0x17	; 23
    1518:	30 83       	st	Z, r19
    151a:	31 97       	sbiw	r30, 0x01	; 1
    151c:	38 e1       	ldi	r19, 0x18	; 24
    151e:	30 83       	st	Z, r19
    1520:	31 97       	sbiw	r30, 0x01	; 1
    1522:	39 e1       	ldi	r19, 0x19	; 25
    1524:	30 83       	st	Z, r19
    1526:	31 97       	sbiw	r30, 0x01	; 1
    1528:	30 e2       	ldi	r19, 0x20	; 32
    152a:	30 83       	st	Z, r19
    152c:	31 97       	sbiw	r30, 0x01	; 1
    152e:	31 e2       	ldi	r19, 0x21	; 33
    1530:	30 83       	st	Z, r19
    1532:	31 97       	sbiw	r30, 0x01	; 1
    1534:	20 83       	st	Z, r18
    1536:	31 97       	sbiw	r30, 0x01	; 1
    1538:	23 e2       	ldi	r18, 0x23	; 35
    153a:	20 83       	st	Z, r18
    153c:	31 97       	sbiw	r30, 0x01	; 1
    153e:	40 83       	st	Z, r20
    1540:	31 97       	sbiw	r30, 0x01	; 1
    1542:	50 83       	st	Z, r21
    1544:	31 97       	sbiw	r30, 0x01	; 1
    1546:	26 e2       	ldi	r18, 0x26	; 38
    1548:	20 83       	st	Z, r18
    154a:	31 97       	sbiw	r30, 0x01	; 1
    154c:	27 e2       	ldi	r18, 0x27	; 39
    154e:	20 83       	st	Z, r18
    1550:	31 97       	sbiw	r30, 0x01	; 1
    1552:	28 e2       	ldi	r18, 0x28	; 40
    1554:	20 83       	st	Z, r18
    1556:	31 97       	sbiw	r30, 0x01	; 1
    1558:	29 e2       	ldi	r18, 0x29	; 41
    155a:	20 83       	st	Z, r18
    155c:	31 97       	sbiw	r30, 0x01	; 1
    155e:	20 e3       	ldi	r18, 0x30	; 48
    1560:	20 83       	st	Z, r18
    1562:	31 97       	sbiw	r30, 0x01	; 1
    1564:	21 e3       	ldi	r18, 0x31	; 49
    1566:	20 83       	st	Z, r18
    1568:	86 97       	sbiw	r24, 0x26	; 38
    156a:	08 95       	ret

0000156c <xPortStartScheduler>:
    156c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1570:	8c e7       	ldi	r24, 0x7C	; 124
    1572:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1576:	8b e0       	ldi	r24, 0x0B	; 11
    1578:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    157c:	ef e6       	ldi	r30, 0x6F	; 111
    157e:	f0 e0       	ldi	r31, 0x00	; 0
    1580:	80 81       	ld	r24, Z
    1582:	82 60       	ori	r24, 0x02	; 2
    1584:	80 83       	st	Z, r24
    1586:	a0 91 c7 09 	lds	r26, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    158a:	b0 91 c8 09 	lds	r27, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    158e:	cd 91       	ld	r28, X+
    1590:	cd bf       	out	0x3d, r28	; 61
    1592:	dd 91       	ld	r29, X+
    1594:	de bf       	out	0x3e, r29	; 62
    1596:	ff 91       	pop	r31
    1598:	ef 91       	pop	r30
    159a:	df 91       	pop	r29
    159c:	cf 91       	pop	r28
    159e:	bf 91       	pop	r27
    15a0:	af 91       	pop	r26
    15a2:	9f 91       	pop	r25
    15a4:	8f 91       	pop	r24
    15a6:	7f 91       	pop	r23
    15a8:	6f 91       	pop	r22
    15aa:	5f 91       	pop	r21
    15ac:	4f 91       	pop	r20
    15ae:	3f 91       	pop	r19
    15b0:	2f 91       	pop	r18
    15b2:	1f 91       	pop	r17
    15b4:	0f 91       	pop	r16
    15b6:	ff 90       	pop	r15
    15b8:	ef 90       	pop	r14
    15ba:	df 90       	pop	r13
    15bc:	cf 90       	pop	r12
    15be:	bf 90       	pop	r11
    15c0:	af 90       	pop	r10
    15c2:	9f 90       	pop	r9
    15c4:	8f 90       	pop	r8
    15c6:	7f 90       	pop	r7
    15c8:	6f 90       	pop	r6
    15ca:	5f 90       	pop	r5
    15cc:	4f 90       	pop	r4
    15ce:	3f 90       	pop	r3
    15d0:	2f 90       	pop	r2
    15d2:	1f 90       	pop	r1
    15d4:	0f 90       	pop	r0
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	0f 90       	pop	r0
    15da:	08 95       	ret
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	08 95       	ret

000015e0 <vPortYield>:
 * can use a naked attribute.
 */
void vPortYield( void ) __attribute__ ( ( naked ) );
void vPortYield( void )
{
	portSAVE_CONTEXT();
    15e0:	0f 92       	push	r0
    15e2:	0f b6       	in	r0, 0x3f	; 63
    15e4:	f8 94       	cli
    15e6:	0f 92       	push	r0
    15e8:	1f 92       	push	r1
    15ea:	11 24       	eor	r1, r1
    15ec:	2f 92       	push	r2
    15ee:	3f 92       	push	r3
    15f0:	4f 92       	push	r4
    15f2:	5f 92       	push	r5
    15f4:	6f 92       	push	r6
    15f6:	7f 92       	push	r7
    15f8:	8f 92       	push	r8
    15fa:	9f 92       	push	r9
    15fc:	af 92       	push	r10
    15fe:	bf 92       	push	r11
    1600:	cf 92       	push	r12
    1602:	df 92       	push	r13
    1604:	ef 92       	push	r14
    1606:	ff 92       	push	r15
    1608:	0f 93       	push	r16
    160a:	1f 93       	push	r17
    160c:	2f 93       	push	r18
    160e:	3f 93       	push	r19
    1610:	4f 93       	push	r20
    1612:	5f 93       	push	r21
    1614:	6f 93       	push	r22
    1616:	7f 93       	push	r23
    1618:	8f 93       	push	r24
    161a:	9f 93       	push	r25
    161c:	af 93       	push	r26
    161e:	bf 93       	push	r27
    1620:	cf 93       	push	r28
    1622:	df 93       	push	r29
    1624:	ef 93       	push	r30
    1626:	ff 93       	push	r31
    1628:	a0 91 c7 09 	lds	r26, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    162c:	b0 91 c8 09 	lds	r27, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1630:	0d b6       	in	r0, 0x3d	; 61
    1632:	0d 92       	st	X+, r0
    1634:	0e b6       	in	r0, 0x3e	; 62
    1636:	0d 92       	st	X+, r0
	vTaskSwitchContext();
    1638:	8a d3       	rcall	.+1812   	; 0x1d4e <vTaskSwitchContext>
	portRESTORE_CONTEXT();
    163a:	a0 91 c7 09 	lds	r26, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    163e:	b0 91 c8 09 	lds	r27, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1642:	cd 91       	ld	r28, X+
    1644:	cd bf       	out	0x3d, r28	; 61
    1646:	dd 91       	ld	r29, X+
    1648:	de bf       	out	0x3e, r29	; 62
    164a:	ff 91       	pop	r31
    164c:	ef 91       	pop	r30
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	bf 91       	pop	r27
    1654:	af 91       	pop	r26
    1656:	9f 91       	pop	r25
    1658:	8f 91       	pop	r24
    165a:	7f 91       	pop	r23
    165c:	6f 91       	pop	r22
    165e:	5f 91       	pop	r21
    1660:	4f 91       	pop	r20
    1662:	3f 91       	pop	r19
    1664:	2f 91       	pop	r18
    1666:	1f 91       	pop	r17
    1668:	0f 91       	pop	r16
    166a:	ff 90       	pop	r15
    166c:	ef 90       	pop	r14
    166e:	df 90       	pop	r13
    1670:	cf 90       	pop	r12
    1672:	bf 90       	pop	r11
    1674:	af 90       	pop	r10
    1676:	9f 90       	pop	r9
    1678:	8f 90       	pop	r8
    167a:	7f 90       	pop	r7
    167c:	6f 90       	pop	r6
    167e:	5f 90       	pop	r5
    1680:	4f 90       	pop	r4
    1682:	3f 90       	pop	r3
    1684:	2f 90       	pop	r2
    1686:	1f 90       	pop	r1
    1688:	0f 90       	pop	r0
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	0f 90       	pop	r0

	asm volatile ( "ret" );
    168e:	08 95       	ret

00001690 <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
void vPortYieldFromTick( void )
{
	portSAVE_CONTEXT();
    1690:	0f 92       	push	r0
    1692:	0f b6       	in	r0, 0x3f	; 63
    1694:	f8 94       	cli
    1696:	0f 92       	push	r0
    1698:	1f 92       	push	r1
    169a:	11 24       	eor	r1, r1
    169c:	2f 92       	push	r2
    169e:	3f 92       	push	r3
    16a0:	4f 92       	push	r4
    16a2:	5f 92       	push	r5
    16a4:	6f 92       	push	r6
    16a6:	7f 92       	push	r7
    16a8:	8f 92       	push	r8
    16aa:	9f 92       	push	r9
    16ac:	af 92       	push	r10
    16ae:	bf 92       	push	r11
    16b0:	cf 92       	push	r12
    16b2:	df 92       	push	r13
    16b4:	ef 92       	push	r14
    16b6:	ff 92       	push	r15
    16b8:	0f 93       	push	r16
    16ba:	1f 93       	push	r17
    16bc:	2f 93       	push	r18
    16be:	3f 93       	push	r19
    16c0:	4f 93       	push	r20
    16c2:	5f 93       	push	r21
    16c4:	6f 93       	push	r22
    16c6:	7f 93       	push	r23
    16c8:	8f 93       	push	r24
    16ca:	9f 93       	push	r25
    16cc:	af 93       	push	r26
    16ce:	bf 93       	push	r27
    16d0:	cf 93       	push	r28
    16d2:	df 93       	push	r29
    16d4:	ef 93       	push	r30
    16d6:	ff 93       	push	r31
    16d8:	a0 91 c7 09 	lds	r26, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    16dc:	b0 91 c8 09 	lds	r27, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    16e0:	0d b6       	in	r0, 0x3d	; 61
    16e2:	0d 92       	st	X+, r0
    16e4:	0e b6       	in	r0, 0x3e	; 62
    16e6:	0d 92       	st	X+, r0
	vTaskIncrementTick();
    16e8:	95 d1       	rcall	.+810    	; 0x1a14 <vTaskIncrementTick>
	vTaskSwitchContext();
    16ea:	31 d3       	rcall	.+1634   	; 0x1d4e <vTaskSwitchContext>
    16ec:	a0 91 c7 09 	lds	r26, 0x09C7	; 0x8009c7 <pxCurrentTCB>
	portRESTORE_CONTEXT();
    16f0:	b0 91 c8 09 	lds	r27, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    16f4:	cd 91       	ld	r28, X+
    16f6:	cd bf       	out	0x3d, r28	; 61
    16f8:	dd 91       	ld	r29, X+
    16fa:	de bf       	out	0x3e, r29	; 62
    16fc:	ff 91       	pop	r31
    16fe:	ef 91       	pop	r30
    1700:	df 91       	pop	r29
    1702:	cf 91       	pop	r28
    1704:	bf 91       	pop	r27
    1706:	af 91       	pop	r26
    1708:	9f 91       	pop	r25
    170a:	8f 91       	pop	r24
    170c:	7f 91       	pop	r23
    170e:	6f 91       	pop	r22
    1710:	5f 91       	pop	r21
    1712:	4f 91       	pop	r20
    1714:	3f 91       	pop	r19
    1716:	2f 91       	pop	r18
    1718:	1f 91       	pop	r17
    171a:	0f 91       	pop	r16
    171c:	ff 90       	pop	r15
    171e:	ef 90       	pop	r14
    1720:	df 90       	pop	r13
    1722:	cf 90       	pop	r12
    1724:	bf 90       	pop	r11
    1726:	af 90       	pop	r10
    1728:	9f 90       	pop	r9
    172a:	8f 90       	pop	r8
    172c:	7f 90       	pop	r7
    172e:	6f 90       	pop	r6
    1730:	5f 90       	pop	r5
    1732:	4f 90       	pop	r4
    1734:	3f 90       	pop	r3
    1736:	2f 90       	pop	r2
    1738:	1f 90       	pop	r1
    173a:	0f 90       	pop	r0
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	0f 90       	pop	r0
    1740:	08 95       	ret

00001742 <__vector_13>:

	asm volatile ( "ret" );
    1742:	a6 df       	rcall	.-180    	; 0x1690 <vPortYieldFromTick>
	 */
	void TIMER1_COMPA_vect( void ) __attribute__ ( ( signal, naked ) );
	void TIMER1_COMPA_vect( void )
	{
		vPortYieldFromTick();
		asm volatile ( "reti" );
    1744:	18 95       	reti

00001746 <prvAddCurrentTaskToDelayedList>:
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
		{
			portYIELD_WITHIN_API();
		}
	}
    1746:	cf 93       	push	r28
    1748:	df 93       	push	r29
    174a:	ec 01       	movw	r28, r24
    174c:	e0 91 c7 09 	lds	r30, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1750:	f0 91 c8 09 	lds	r31, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1754:	93 83       	std	Z+3, r25	; 0x03
    1756:	82 83       	std	Z+2, r24	; 0x02
    1758:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <xTickCount>
    175c:	90 91 78 09 	lds	r25, 0x0978	; 0x800978 <xTickCount+0x1>
    1760:	c8 17       	cp	r28, r24
    1762:	d9 07       	cpc	r29, r25
    1764:	68 f4       	brcc	.+26     	; 0x1780 <prvAddCurrentTaskToDelayedList+0x3a>
    1766:	60 91 c7 09 	lds	r22, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    176a:	70 91 c8 09 	lds	r23, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    176e:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <pxOverflowDelayedTaskList>
    1772:	90 91 8e 09 	lds	r25, 0x098E	; 0x80098e <pxOverflowDelayedTaskList+0x1>
    1776:	6e 5f       	subi	r22, 0xFE	; 254
    1778:	7f 4f       	sbci	r23, 0xFF	; 255
    177a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <vListInsert>
    177e:	17 c0       	rjmp	.+46     	; 0x17ae <prvAddCurrentTaskToDelayedList+0x68>
    1780:	60 91 c7 09 	lds	r22, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1784:	70 91 c8 09 	lds	r23, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1788:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <pxDelayedTaskList>
    178c:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1790:	6e 5f       	subi	r22, 0xFE	; 254
    1792:	7f 4f       	sbci	r23, 0xFF	; 255
    1794:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <vListInsert>
    1798:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <xNextTaskUnblockTime>
    179c:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <xNextTaskUnblockTime+0x1>
    17a0:	c8 17       	cp	r28, r24
    17a2:	d9 07       	cpc	r29, r25
    17a4:	20 f4       	brcc	.+8      	; 0x17ae <prvAddCurrentTaskToDelayedList+0x68>
    17a6:	d0 93 02 01 	sts	0x0102, r29	; 0x800102 <xNextTaskUnblockTime+0x1>
    17aa:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <xNextTaskUnblockTime>
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	08 95       	ret

000017b4 <xTaskGenericCreate>:
    17b4:	4f 92       	push	r4
    17b6:	5f 92       	push	r5
    17b8:	6f 92       	push	r6
    17ba:	7f 92       	push	r7
    17bc:	8f 92       	push	r8
    17be:	9f 92       	push	r9
    17c0:	af 92       	push	r10
    17c2:	bf 92       	push	r11
    17c4:	cf 92       	push	r12
    17c6:	df 92       	push	r13
    17c8:	ef 92       	push	r14
    17ca:	ff 92       	push	r15
    17cc:	0f 93       	push	r16
    17ce:	1f 93       	push	r17
    17d0:	cf 93       	push	r28
    17d2:	df 93       	push	r29
    17d4:	5c 01       	movw	r10, r24
    17d6:	4b 01       	movw	r8, r22
    17d8:	3a 01       	movw	r6, r20
    17da:	29 01       	movw	r4, r18
    17dc:	81 e2       	ldi	r24, 0x21	; 33
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	0e 94 81 00 	call	0x102	; 0x102 <pvPortMalloc>
    17e4:	ec 01       	movw	r28, r24
    17e6:	89 2b       	or	r24, r25
    17e8:	09 f4       	brne	.+2      	; 0x17ec <xTaskGenericCreate+0x38>
    17ea:	d3 c0       	rjmp	.+422    	; 0x1992 <xTaskGenericCreate+0x1de>
    17ec:	c1 14       	cp	r12, r1
    17ee:	d1 04       	cpc	r13, r1
    17f0:	09 f0       	breq	.+2      	; 0x17f4 <xTaskGenericCreate+0x40>
    17f2:	cb c0       	rjmp	.+406    	; 0x198a <xTaskGenericCreate+0x1d6>
    17f4:	c3 01       	movw	r24, r6
    17f6:	0e 94 81 00 	call	0x102	; 0x102 <pvPortMalloc>
    17fa:	98 8f       	std	Y+24, r25	; 0x18
    17fc:	8f 8b       	std	Y+23, r24	; 0x17
    17fe:	00 97       	sbiw	r24, 0x00	; 0
    1800:	21 f4       	brne	.+8      	; 0x180a <xTaskGenericCreate+0x56>
    1802:	ce 01       	movw	r24, r28
    1804:	0e 94 a7 00 	call	0x14e	; 0x14e <vPortFree>
    1808:	c4 c0       	rjmp	.+392    	; 0x1992 <xTaskGenericCreate+0x1de>
    180a:	a3 01       	movw	r20, r6
    180c:	65 ea       	ldi	r22, 0xA5	; 165
    180e:	70 e0       	ldi	r23, 0x00	; 0
    1810:	13 d3       	rcall	.+1574   	; 0x1e38 <memset>
    1812:	93 01       	movw	r18, r6
    1814:	21 50       	subi	r18, 0x01	; 1
    1816:	31 09       	sbc	r19, r1
    1818:	8f 89       	ldd	r24, Y+23	; 0x17
    181a:	98 8d       	ldd	r25, Y+24	; 0x18
    181c:	3c 01       	movw	r6, r24
    181e:	62 0e       	add	r6, r18
    1820:	73 1e       	adc	r7, r19
    1822:	48 e0       	ldi	r20, 0x08	; 8
    1824:	50 e0       	ldi	r21, 0x00	; 0
    1826:	b4 01       	movw	r22, r8
    1828:	ce 01       	movw	r24, r28
    182a:	49 96       	adiw	r24, 0x19	; 25
    182c:	0c d3       	rcall	.+1560   	; 0x1e46 <strncpy>
    182e:	18 a2       	std	Y+32, r1	; 0x20
    1830:	10 2f       	mov	r17, r16
    1832:	04 30       	cpi	r16, 0x04	; 4
    1834:	08 f0       	brcs	.+2      	; 0x1838 <xTaskGenericCreate+0x84>
    1836:	13 e0       	ldi	r17, 0x03	; 3
    1838:	1e 8b       	std	Y+22, r17	; 0x16
    183a:	6e 01       	movw	r12, r28
    183c:	82 e0       	ldi	r24, 0x02	; 2
    183e:	c8 0e       	add	r12, r24
    1840:	d1 1c       	adc	r13, r1
    1842:	c6 01       	movw	r24, r12
    1844:	0e 94 b6 00 	call	0x16c	; 0x16c <vListInitialiseItem>
    1848:	ce 01       	movw	r24, r28
    184a:	0c 96       	adiw	r24, 0x0c	; 12
    184c:	0e 94 b6 00 	call	0x16c	; 0x16c <vListInitialiseItem>
    1850:	d9 87       	std	Y+9, r29	; 0x09
    1852:	c8 87       	std	Y+8, r28	; 0x08
    1854:	84 e0       	ldi	r24, 0x04	; 4
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	81 1b       	sub	r24, r17
    185a:	91 09       	sbc	r25, r1
    185c:	9d 87       	std	Y+13, r25	; 0x0d
    185e:	8c 87       	std	Y+12, r24	; 0x0c
    1860:	db 8b       	std	Y+19, r29	; 0x13
    1862:	ca 8b       	std	Y+18, r28	; 0x12
    1864:	a2 01       	movw	r20, r4
    1866:	b5 01       	movw	r22, r10
    1868:	c3 01       	movw	r24, r6
    186a:	14 de       	rcall	.-984    	; 0x1494 <pxPortInitialiseStack>
    186c:	99 83       	std	Y+1, r25	; 0x01
    186e:	88 83       	st	Y, r24
    1870:	e1 14       	cp	r14, r1
    1872:	f1 04       	cpc	r15, r1
    1874:	19 f0       	breq	.+6      	; 0x187c <xTaskGenericCreate+0xc8>
    1876:	f7 01       	movw	r30, r14
    1878:	d1 83       	std	Z+1, r29	; 0x01
    187a:	c0 83       	st	Z, r28
    187c:	0f b6       	in	r0, 0x3f	; 63
    187e:	f8 94       	cli
    1880:	0f 92       	push	r0
    1882:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <uxCurrentNumberOfTasks>
    1886:	8f 5f       	subi	r24, 0xFF	; 255
    1888:	80 93 79 09 	sts	0x0979, r24	; 0x800979 <uxCurrentNumberOfTasks>
    188c:	80 91 c7 09 	lds	r24, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1890:	90 91 c8 09 	lds	r25, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1894:	89 2b       	or	r24, r25
    1896:	a9 f5       	brne	.+106    	; 0x1902 <xTaskGenericCreate+0x14e>
    1898:	d0 93 c8 09 	sts	0x09C8, r29	; 0x8009c8 <pxCurrentTCB+0x1>
    189c:	c0 93 c7 09 	sts	0x09C7, r28	; 0x8009c7 <pxCurrentTCB>
    18a0:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <uxCurrentNumberOfTasks>
    18a4:	81 30       	cpi	r24, 0x01	; 1
    18a6:	e1 f5       	brne	.+120    	; 0x1920 <xTaskGenericCreate+0x16c>
    18a8:	83 ea       	ldi	r24, 0xA3	; 163
    18aa:	99 e0       	ldi	r25, 0x09	; 9
    18ac:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18b0:	8c ea       	ldi	r24, 0xAC	; 172
    18b2:	99 e0       	ldi	r25, 0x09	; 9
    18b4:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18b8:	85 eb       	ldi	r24, 0xB5	; 181
    18ba:	99 e0       	ldi	r25, 0x09	; 9
    18bc:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18c0:	8e eb       	ldi	r24, 0xBE	; 190
    18c2:	99 e0       	ldi	r25, 0x09	; 9
    18c4:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18c8:	8a e9       	ldi	r24, 0x9A	; 154
    18ca:	99 e0       	ldi	r25, 0x09	; 9
    18cc:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18d0:	81 e9       	ldi	r24, 0x91	; 145
    18d2:	99 e0       	ldi	r25, 0x09	; 9
    18d4:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18d8:	84 e8       	ldi	r24, 0x84	; 132
    18da:	99 e0       	ldi	r25, 0x09	; 9
    18dc:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18e0:	8b e7       	ldi	r24, 0x7B	; 123
    18e2:	99 e0       	ldi	r25, 0x09	; 9
    18e4:	0e 94 a8 00 	call	0x150	; 0x150 <vListInitialise>
    18e8:	8a e9       	ldi	r24, 0x9A	; 154
    18ea:	99 e0       	ldi	r25, 0x09	; 9
    18ec:	90 93 90 09 	sts	0x0990, r25	; 0x800990 <pxDelayedTaskList+0x1>
    18f0:	80 93 8f 09 	sts	0x098F, r24	; 0x80098f <pxDelayedTaskList>
    18f4:	81 e9       	ldi	r24, 0x91	; 145
    18f6:	99 e0       	ldi	r25, 0x09	; 9
    18f8:	90 93 8e 09 	sts	0x098E, r25	; 0x80098e <pxOverflowDelayedTaskList+0x1>
    18fc:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <pxOverflowDelayedTaskList>
    1900:	0f c0       	rjmp	.+30     	; 0x1920 <xTaskGenericCreate+0x16c>
    1902:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <xSchedulerRunning>
    1906:	81 11       	cpse	r24, r1
    1908:	0b c0       	rjmp	.+22     	; 0x1920 <xTaskGenericCreate+0x16c>
    190a:	e0 91 c7 09 	lds	r30, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    190e:	f0 91 c8 09 	lds	r31, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1912:	86 89       	ldd	r24, Z+22	; 0x16
    1914:	08 17       	cp	r16, r24
    1916:	20 f0       	brcs	.+8      	; 0x1920 <xTaskGenericCreate+0x16c>
    1918:	d0 93 c8 09 	sts	0x09C8, r29	; 0x8009c8 <pxCurrentTCB+0x1>
    191c:	c0 93 c7 09 	sts	0x09C7, r28	; 0x8009c7 <pxCurrentTCB>
    1920:	8e 89       	ldd	r24, Y+22	; 0x16
    1922:	90 91 76 09 	lds	r25, 0x0976	; 0x800976 <uxTopUsedPriority>
    1926:	98 17       	cp	r25, r24
    1928:	10 f4       	brcc	.+4      	; 0x192e <xTaskGenericCreate+0x17a>
    192a:	80 93 76 09 	sts	0x0976, r24	; 0x800976 <uxTopUsedPriority>
    192e:	90 91 6f 09 	lds	r25, 0x096F	; 0x80096f <uxTaskNumber>
    1932:	9f 5f       	subi	r25, 0xFF	; 255
    1934:	90 93 6f 09 	sts	0x096F, r25	; 0x80096f <uxTaskNumber>
    1938:	90 91 75 09 	lds	r25, 0x0975	; 0x800975 <uxTopReadyPriority>
    193c:	98 17       	cp	r25, r24
    193e:	10 f4       	brcc	.+4      	; 0x1944 <xTaskGenericCreate+0x190>
    1940:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <uxTopReadyPriority>
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	9c 01       	movw	r18, r24
    1948:	22 0f       	add	r18, r18
    194a:	33 1f       	adc	r19, r19
    194c:	22 0f       	add	r18, r18
    194e:	33 1f       	adc	r19, r19
    1950:	22 0f       	add	r18, r18
    1952:	33 1f       	adc	r19, r19
    1954:	82 0f       	add	r24, r18
    1956:	93 1f       	adc	r25, r19
    1958:	b6 01       	movw	r22, r12
    195a:	8d 55       	subi	r24, 0x5D	; 93
    195c:	96 4f       	sbci	r25, 0xF6	; 246
    195e:	0e 94 ba 00 	call	0x174	; 0x174 <vListInsertEnd>
    1962:	0f 90       	pop	r0
    1964:	0f be       	out	0x3f, r0	; 63
    1966:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <xSchedulerRunning>
    196a:	88 23       	and	r24, r24
    196c:	51 f0       	breq	.+20     	; 0x1982 <xTaskGenericCreate+0x1ce>
    196e:	e0 91 c7 09 	lds	r30, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1972:	f0 91 c8 09 	lds	r31, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1976:	86 89       	ldd	r24, Z+22	; 0x16
    1978:	80 17       	cp	r24, r16
    197a:	28 f4       	brcc	.+10     	; 0x1986 <xTaskGenericCreate+0x1d2>
    197c:	31 de       	rcall	.-926    	; 0x15e0 <vPortYield>
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	09 c0       	rjmp	.+18     	; 0x1994 <xTaskGenericCreate+0x1e0>
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	07 c0       	rjmp	.+14     	; 0x1994 <xTaskGenericCreate+0x1e0>
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	05 c0       	rjmp	.+10     	; 0x1994 <xTaskGenericCreate+0x1e0>
    198a:	d8 8e       	std	Y+24, r13	; 0x18
    198c:	cf 8a       	std	Y+23, r12	; 0x17
    198e:	c6 01       	movw	r24, r12
    1990:	3c cf       	rjmp	.-392    	; 0x180a <xTaskGenericCreate+0x56>
    1992:	8f ef       	ldi	r24, 0xFF	; 255
    1994:	df 91       	pop	r29
    1996:	cf 91       	pop	r28
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	ff 90       	pop	r15
    199e:	ef 90       	pop	r14
    19a0:	df 90       	pop	r13
    19a2:	cf 90       	pop	r12
    19a4:	bf 90       	pop	r11
    19a6:	af 90       	pop	r10
    19a8:	9f 90       	pop	r9
    19aa:	8f 90       	pop	r8
    19ac:	7f 90       	pop	r7
    19ae:	6f 90       	pop	r6
    19b0:	5f 90       	pop	r5
    19b2:	4f 90       	pop	r4
    19b4:	08 95       	ret

000019b6 <vTaskStartScheduler>:
    19b6:	af 92       	push	r10
    19b8:	bf 92       	push	r11
    19ba:	cf 92       	push	r12
    19bc:	df 92       	push	r13
    19be:	ef 92       	push	r14
    19c0:	ff 92       	push	r15
    19c2:	0f 93       	push	r16
    19c4:	a1 2c       	mov	r10, r1
    19c6:	b1 2c       	mov	r11, r1
    19c8:	c1 2c       	mov	r12, r1
    19ca:	d1 2c       	mov	r13, r1
    19cc:	e1 2c       	mov	r14, r1
    19ce:	f1 2c       	mov	r15, r1
    19d0:	00 e0       	ldi	r16, 0x00	; 0
    19d2:	20 e0       	ldi	r18, 0x00	; 0
    19d4:	30 e0       	ldi	r19, 0x00	; 0
    19d6:	45 e5       	ldi	r20, 0x55	; 85
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	6f e7       	ldi	r22, 0x7F	; 127
    19dc:	73 e0       	ldi	r23, 0x03	; 3
    19de:	8e e6       	ldi	r24, 0x6E	; 110
    19e0:	9e e0       	ldi	r25, 0x0E	; 14
    19e2:	e8 de       	rcall	.-560    	; 0x17b4 <xTaskGenericCreate>
    19e4:	81 30       	cpi	r24, 0x01	; 1
    19e6:	41 f4       	brne	.+16     	; 0x19f8 <vTaskStartScheduler+0x42>
    19e8:	f8 94       	cli
    19ea:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <xSchedulerRunning>
    19ee:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <xTickCount+0x1>
    19f2:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <xTickCount>
    19f6:	ba dd       	rcall	.-1164   	; 0x156c <xPortStartScheduler>
    19f8:	0f 91       	pop	r16
    19fa:	ff 90       	pop	r15
    19fc:	ef 90       	pop	r14
    19fe:	df 90       	pop	r13
    1a00:	cf 90       	pop	r12
    1a02:	bf 90       	pop	r11
    1a04:	af 90       	pop	r10
    1a06:	08 95       	ret

00001a08 <vTaskSuspendAll>:
    1a08:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <uxSchedulerSuspended>
    1a0c:	8f 5f       	subi	r24, 0xFF	; 255
    1a0e:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <uxSchedulerSuspended>
    1a12:	08 95       	ret

00001a14 <vTaskIncrementTick>:
    1a14:	0f 93       	push	r16
    1a16:	1f 93       	push	r17
    1a18:	cf 93       	push	r28
    1a1a:	df 93       	push	r29
    1a1c:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <uxSchedulerSuspended>
    1a20:	81 11       	cpse	r24, r1
    1a22:	b2 c0       	rjmp	.+356    	; 0x1b88 <vTaskIncrementTick+0x174>
    1a24:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <xTickCount>
    1a28:	90 91 78 09 	lds	r25, 0x0978	; 0x800978 <xTickCount+0x1>
    1a2c:	01 96       	adiw	r24, 0x01	; 1
    1a2e:	90 93 78 09 	sts	0x0978, r25	; 0x800978 <xTickCount+0x1>
    1a32:	80 93 77 09 	sts	0x0977, r24	; 0x800977 <xTickCount>
    1a36:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <xTickCount>
    1a3a:	90 91 78 09 	lds	r25, 0x0978	; 0x800978 <xTickCount+0x1>
    1a3e:	89 2b       	or	r24, r25
    1a40:	99 f5       	brne	.+102    	; 0x1aa8 <vTaskIncrementTick+0x94>
    1a42:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <pxDelayedTaskList>
    1a46:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1a4a:	20 91 8d 09 	lds	r18, 0x098D	; 0x80098d <pxOverflowDelayedTaskList>
    1a4e:	30 91 8e 09 	lds	r19, 0x098E	; 0x80098e <pxOverflowDelayedTaskList+0x1>
    1a52:	30 93 90 09 	sts	0x0990, r19	; 0x800990 <pxDelayedTaskList+0x1>
    1a56:	20 93 8f 09 	sts	0x098F, r18	; 0x80098f <pxDelayedTaskList>
    1a5a:	90 93 8e 09 	sts	0x098E, r25	; 0x80098e <pxOverflowDelayedTaskList+0x1>
    1a5e:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <pxOverflowDelayedTaskList>
    1a62:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <xNumOfOverflows>
    1a66:	8f 5f       	subi	r24, 0xFF	; 255
    1a68:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <xNumOfOverflows>
    1a6c:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1a70:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1a74:	80 81       	ld	r24, Z
    1a76:	81 11       	cpse	r24, r1
    1a78:	07 c0       	rjmp	.+14     	; 0x1a88 <vTaskIncrementTick+0x74>
    1a7a:	8f ef       	ldi	r24, 0xFF	; 255
    1a7c:	9f ef       	ldi	r25, 0xFF	; 255
    1a7e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xNextTaskUnblockTime+0x1>
    1a82:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xNextTaskUnblockTime>
    1a86:	10 c0       	rjmp	.+32     	; 0x1aa8 <vTaskIncrementTick+0x94>
    1a88:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1a8c:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1a90:	05 80       	ldd	r0, Z+5	; 0x05
    1a92:	f6 81       	ldd	r31, Z+6	; 0x06
    1a94:	e0 2d       	mov	r30, r0
    1a96:	06 80       	ldd	r0, Z+6	; 0x06
    1a98:	f7 81       	ldd	r31, Z+7	; 0x07
    1a9a:	e0 2d       	mov	r30, r0
    1a9c:	82 81       	ldd	r24, Z+2	; 0x02
    1a9e:	93 81       	ldd	r25, Z+3	; 0x03
    1aa0:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xNextTaskUnblockTime+0x1>
    1aa4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xNextTaskUnblockTime>
    1aa8:	20 91 77 09 	lds	r18, 0x0977	; 0x800977 <xTickCount>
    1aac:	30 91 78 09 	lds	r19, 0x0978	; 0x800978 <xTickCount+0x1>
    1ab0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <xNextTaskUnblockTime>
    1ab4:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <xNextTaskUnblockTime+0x1>
    1ab8:	28 17       	cp	r18, r24
    1aba:	39 07       	cpc	r19, r25
    1abc:	08 f4       	brcc	.+2      	; 0x1ac0 <vTaskIncrementTick+0xac>
    1abe:	69 c0       	rjmp	.+210    	; 0x1b92 <vTaskIncrementTick+0x17e>
    1ac0:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1ac4:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1ac8:	80 81       	ld	r24, Z
    1aca:	88 23       	and	r24, r24
    1acc:	99 f0       	breq	.+38     	; 0x1af4 <vTaskIncrementTick+0xe0>
    1ace:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1ad2:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1ad6:	05 80       	ldd	r0, Z+5	; 0x05
    1ad8:	f6 81       	ldd	r31, Z+6	; 0x06
    1ada:	e0 2d       	mov	r30, r0
    1adc:	c6 81       	ldd	r28, Z+6	; 0x06
    1ade:	d7 81       	ldd	r29, Z+7	; 0x07
    1ae0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ae4:	20 91 77 09 	lds	r18, 0x0977	; 0x800977 <xTickCount>
    1ae8:	30 91 78 09 	lds	r19, 0x0978	; 0x800978 <xTickCount+0x1>
    1aec:	28 17       	cp	r18, r24
    1aee:	39 07       	cpc	r19, r25
    1af0:	f8 f4       	brcc	.+62     	; 0x1b30 <vTaskIncrementTick+0x11c>
    1af2:	19 c0       	rjmp	.+50     	; 0x1b26 <vTaskIncrementTick+0x112>
    1af4:	8f ef       	ldi	r24, 0xFF	; 255
    1af6:	9f ef       	ldi	r25, 0xFF	; 255
    1af8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xNextTaskUnblockTime+0x1>
    1afc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xNextTaskUnblockTime>
    1b00:	48 c0       	rjmp	.+144    	; 0x1b92 <vTaskIncrementTick+0x17e>
    1b02:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1b06:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1b0a:	05 80       	ldd	r0, Z+5	; 0x05
    1b0c:	f6 81       	ldd	r31, Z+6	; 0x06
    1b0e:	e0 2d       	mov	r30, r0
    1b10:	c6 81       	ldd	r28, Z+6	; 0x06
    1b12:	d7 81       	ldd	r29, Z+7	; 0x07
    1b14:	8a 81       	ldd	r24, Y+2	; 0x02
    1b16:	9b 81       	ldd	r25, Y+3	; 0x03
    1b18:	20 91 77 09 	lds	r18, 0x0977	; 0x800977 <xTickCount>
    1b1c:	30 91 78 09 	lds	r19, 0x0978	; 0x800978 <xTickCount+0x1>
    1b20:	28 17       	cp	r18, r24
    1b22:	39 07       	cpc	r19, r25
    1b24:	28 f4       	brcc	.+10     	; 0x1b30 <vTaskIncrementTick+0x11c>
    1b26:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xNextTaskUnblockTime+0x1>
    1b2a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xNextTaskUnblockTime>
    1b2e:	31 c0       	rjmp	.+98     	; 0x1b92 <vTaskIncrementTick+0x17e>
    1b30:	8e 01       	movw	r16, r28
    1b32:	0e 5f       	subi	r16, 0xFE	; 254
    1b34:	1f 4f       	sbci	r17, 0xFF	; 255
    1b36:	c8 01       	movw	r24, r16
    1b38:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
    1b3c:	8c 89       	ldd	r24, Y+20	; 0x14
    1b3e:	9d 89       	ldd	r25, Y+21	; 0x15
    1b40:	89 2b       	or	r24, r25
    1b42:	21 f0       	breq	.+8      	; 0x1b4c <vTaskIncrementTick+0x138>
    1b44:	ce 01       	movw	r24, r28
    1b46:	0c 96       	adiw	r24, 0x0c	; 12
    1b48:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
    1b4c:	8e 89       	ldd	r24, Y+22	; 0x16
    1b4e:	90 91 75 09 	lds	r25, 0x0975	; 0x800975 <uxTopReadyPriority>
    1b52:	98 17       	cp	r25, r24
    1b54:	10 f4       	brcc	.+4      	; 0x1b5a <vTaskIncrementTick+0x146>
    1b56:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <uxTopReadyPriority>
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	9c 01       	movw	r18, r24
    1b5e:	22 0f       	add	r18, r18
    1b60:	33 1f       	adc	r19, r19
    1b62:	22 0f       	add	r18, r18
    1b64:	33 1f       	adc	r19, r19
    1b66:	22 0f       	add	r18, r18
    1b68:	33 1f       	adc	r19, r19
    1b6a:	82 0f       	add	r24, r18
    1b6c:	93 1f       	adc	r25, r19
    1b6e:	b8 01       	movw	r22, r16
    1b70:	8d 55       	subi	r24, 0x5D	; 93
    1b72:	96 4f       	sbci	r25, 0xF6	; 246
    1b74:	0e 94 ba 00 	call	0x174	; 0x174 <vListInsertEnd>
    1b78:	e0 91 8f 09 	lds	r30, 0x098F	; 0x80098f <pxDelayedTaskList>
    1b7c:	f0 91 90 09 	lds	r31, 0x0990	; 0x800990 <pxDelayedTaskList+0x1>
    1b80:	80 81       	ld	r24, Z
    1b82:	81 11       	cpse	r24, r1
    1b84:	be cf       	rjmp	.-132    	; 0x1b02 <vTaskIncrementTick+0xee>
    1b86:	b6 cf       	rjmp	.-148    	; 0x1af4 <vTaskIncrementTick+0xe0>
    1b88:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <uxMissedTicks>
    1b8c:	8f 5f       	subi	r24, 0xFF	; 255
    1b8e:	80 93 72 09 	sts	0x0972, r24	; 0x800972 <uxMissedTicks>
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	1f 91       	pop	r17
    1b98:	0f 91       	pop	r16
    1b9a:	08 95       	ret

00001b9c <xTaskResumeAll>:
    1b9c:	cf 92       	push	r12
    1b9e:	df 92       	push	r13
    1ba0:	ef 92       	push	r14
    1ba2:	ff 92       	push	r15
    1ba4:	0f 93       	push	r16
    1ba6:	1f 93       	push	r17
    1ba8:	cf 93       	push	r28
    1baa:	df 93       	push	r29
    1bac:	0f b6       	in	r0, 0x3f	; 63
    1bae:	f8 94       	cli
    1bb0:	0f 92       	push	r0
    1bb2:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <uxSchedulerSuspended>
    1bb6:	81 50       	subi	r24, 0x01	; 1
    1bb8:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <uxSchedulerSuspended>
    1bbc:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <uxSchedulerSuspended>
    1bc0:	81 11       	cpse	r24, r1
    1bc2:	62 c0       	rjmp	.+196    	; 0x1c88 <xTaskResumeAll+0xec>
    1bc4:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <uxCurrentNumberOfTasks>
    1bc8:	81 11       	cpse	r24, r1
    1bca:	32 c0       	rjmp	.+100    	; 0x1c30 <xTaskResumeAll+0x94>
    1bcc:	60 c0       	rjmp	.+192    	; 0x1c8e <xTaskResumeAll+0xf2>
    1bce:	d7 01       	movw	r26, r14
    1bd0:	15 96       	adiw	r26, 0x05	; 5
    1bd2:	ed 91       	ld	r30, X+
    1bd4:	fc 91       	ld	r31, X
    1bd6:	16 97       	sbiw	r26, 0x06	; 6
    1bd8:	c6 81       	ldd	r28, Z+6	; 0x06
    1bda:	d7 81       	ldd	r29, Z+7	; 0x07
    1bdc:	ce 01       	movw	r24, r28
    1bde:	0c 96       	adiw	r24, 0x0c	; 12
    1be0:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
    1be4:	8e 01       	movw	r16, r28
    1be6:	0e 5f       	subi	r16, 0xFE	; 254
    1be8:	1f 4f       	sbci	r17, 0xFF	; 255
    1bea:	c8 01       	movw	r24, r16
    1bec:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
    1bf0:	8e 89       	ldd	r24, Y+22	; 0x16
    1bf2:	90 91 75 09 	lds	r25, 0x0975	; 0x800975 <uxTopReadyPriority>
    1bf6:	98 17       	cp	r25, r24
    1bf8:	10 f4       	brcc	.+4      	; 0x1bfe <xTaskResumeAll+0x62>
    1bfa:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <uxTopReadyPriority>
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	9c 01       	movw	r18, r24
    1c02:	22 0f       	add	r18, r18
    1c04:	33 1f       	adc	r19, r19
    1c06:	22 0f       	add	r18, r18
    1c08:	33 1f       	adc	r19, r19
    1c0a:	22 0f       	add	r18, r18
    1c0c:	33 1f       	adc	r19, r19
    1c0e:	82 0f       	add	r24, r18
    1c10:	93 1f       	adc	r25, r19
    1c12:	b8 01       	movw	r22, r16
    1c14:	8d 55       	subi	r24, 0x5D	; 93
    1c16:	96 4f       	sbci	r25, 0xF6	; 246
    1c18:	0e 94 ba 00 	call	0x174	; 0x174 <vListInsertEnd>
    1c1c:	e0 91 c7 09 	lds	r30, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1c20:	f0 91 c8 09 	lds	r31, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1c24:	9e 89       	ldd	r25, Y+22	; 0x16
    1c26:	86 89       	ldd	r24, Z+22	; 0x16
    1c28:	98 17       	cp	r25, r24
    1c2a:	58 f0       	brcs	.+22     	; 0x1c42 <xTaskResumeAll+0xa6>
    1c2c:	dc 2c       	mov	r13, r12
    1c2e:	09 c0       	rjmp	.+18     	; 0x1c42 <xTaskResumeAll+0xa6>
    1c30:	d1 2c       	mov	r13, r1
    1c32:	0f 2e       	mov	r0, r31
    1c34:	f4 e8       	ldi	r31, 0x84	; 132
    1c36:	ef 2e       	mov	r14, r31
    1c38:	f9 e0       	ldi	r31, 0x09	; 9
    1c3a:	ff 2e       	mov	r15, r31
    1c3c:	f0 2d       	mov	r31, r0
    1c3e:	cc 24       	eor	r12, r12
    1c40:	c3 94       	inc	r12
    1c42:	f7 01       	movw	r30, r14
    1c44:	80 81       	ld	r24, Z
    1c46:	81 11       	cpse	r24, r1
    1c48:	c2 cf       	rjmp	.-124    	; 0x1bce <xTaskResumeAll+0x32>
    1c4a:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <uxMissedTicks>
    1c4e:	88 23       	and	r24, r24
    1c50:	79 f0       	breq	.+30     	; 0x1c70 <xTaskResumeAll+0xd4>
    1c52:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <uxMissedTicks>
    1c56:	88 23       	and	r24, r24
    1c58:	91 f0       	breq	.+36     	; 0x1c7e <xTaskResumeAll+0xe2>
    1c5a:	dc de       	rcall	.-584    	; 0x1a14 <vTaskIncrementTick>
    1c5c:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <uxMissedTicks>
    1c60:	81 50       	subi	r24, 0x01	; 1
    1c62:	80 93 72 09 	sts	0x0972, r24	; 0x800972 <uxMissedTicks>
    1c66:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <uxMissedTicks>
    1c6a:	81 11       	cpse	r24, r1
    1c6c:	f6 cf       	rjmp	.-20     	; 0x1c5a <xTaskResumeAll+0xbe>
    1c6e:	07 c0       	rjmp	.+14     	; 0x1c7e <xTaskResumeAll+0xe2>
    1c70:	f1 e0       	ldi	r31, 0x01	; 1
    1c72:	df 16       	cp	r13, r31
    1c74:	21 f0       	breq	.+8      	; 0x1c7e <xTaskResumeAll+0xe2>
    1c76:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <xMissedYield>
    1c7a:	81 30       	cpi	r24, 0x01	; 1
    1c7c:	39 f4       	brne	.+14     	; 0x1c8c <xTaskResumeAll+0xf0>
    1c7e:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <xMissedYield>
    1c82:	ae dc       	rcall	.-1700   	; 0x15e0 <vPortYield>
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	03 c0       	rjmp	.+6      	; 0x1c8e <xTaskResumeAll+0xf2>
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	01 c0       	rjmp	.+2      	; 0x1c8e <xTaskResumeAll+0xf2>
    1c8c:	80 e0       	ldi	r24, 0x00	; 0
    1c8e:	0f 90       	pop	r0
    1c90:	0f be       	out	0x3f, r0	; 63
    1c92:	df 91       	pop	r29
    1c94:	cf 91       	pop	r28
    1c96:	1f 91       	pop	r17
    1c98:	0f 91       	pop	r16
    1c9a:	ff 90       	pop	r15
    1c9c:	ef 90       	pop	r14
    1c9e:	df 90       	pop	r13
    1ca0:	cf 90       	pop	r12
    1ca2:	08 95       	ret

00001ca4 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
    1ca4:	cf 93       	push	r28
    1ca6:	df 93       	push	r29
    1ca8:	ec 01       	movw	r28, r24
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
    1caa:	89 2b       	or	r24, r25
    1cac:	99 f0       	breq	.+38     	; 0x1cd4 <vTaskDelay+0x30>
		{
			vTaskSuspendAll();
    1cae:	ac de       	rcall	.-680    	; 0x1a08 <vTaskSuspendAll>
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
    1cb0:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <xTickCount>
    1cb4:	90 91 78 09 	lds	r25, 0x0978	; 0x800978 <xTickCount+0x1>
    1cb8:	c8 0f       	add	r28, r24
    1cba:	d9 1f       	adc	r29, r25

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
    1cbc:	80 91 c7 09 	lds	r24, 0x09C7	; 0x8009c7 <pxCurrentTCB>
    1cc0:	90 91 c8 09 	lds	r25, 0x09C8	; 0x8009c8 <pxCurrentTCB+0x1>
    1cc4:	02 96       	adiw	r24, 0x02	; 2
    1cc6:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
				prvAddCurrentTaskToDelayedList( xTimeToWake );
    1cca:	ce 01       	movw	r24, r28
			}
			xAlreadyYielded = xTaskResumeAll();
    1ccc:	3c dd       	rcall	.-1416   	; 0x1746 <prvAddCurrentTaskToDelayedList>
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
    1cce:	66 df       	rcall	.-308    	; 0x1b9c <xTaskResumeAll>
    1cd0:	81 11       	cpse	r24, r1
		{
			portYIELD_WITHIN_API();
    1cd2:	01 c0       	rjmp	.+2      	; 0x1cd6 <vTaskDelay+0x32>
    1cd4:	85 dc       	rcall	.-1782   	; 0x15e0 <vPortYield>
		}
	}
    1cd6:	df 91       	pop	r29
    1cd8:	cf 91       	pop	r28
    1cda:	08 95       	ret

00001cdc <prvIdleTask>:
		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0U )
		{
			vTaskSuspendAll();
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    1cdc:	0f 2e       	mov	r0, r31
    1cde:	fb e7       	ldi	r31, 0x7B	; 123
    1ce0:	ef 2e       	mov	r14, r31
    1ce2:	f9 e0       	ldi	r31, 0x09	; 9
    1ce4:	ff 2e       	mov	r15, r31
    1ce6:	f0 2d       	mov	r31, r0

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
    1ce8:	c3 ea       	ldi	r28, 0xA3	; 163
    1cea:	d9 e0       	ldi	r29, 0x09	; 9
	{
		portBASE_TYPE xListIsEmpty;

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0U )
    1cec:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <uxTasksDeleted>
    1cf0:	88 23       	and	r24, r24
    1cf2:	41 f1       	breq	.+80     	; 0x1d44 <prvIdleTask+0x68>
		{
			vTaskSuspendAll();
    1cf4:	89 de       	rcall	.-750    	; 0x1a08 <vTaskSuspendAll>
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    1cf6:	d7 01       	movw	r26, r14
			xTaskResumeAll();
    1cf8:	1c 91       	ld	r17, X
    1cfa:	50 df       	rcall	.-352    	; 0x1b9c <xTaskResumeAll>

			if( xListIsEmpty == pdFALSE )
    1cfc:	11 23       	and	r17, r17
    1cfe:	11 f1       	breq	.+68     	; 0x1d44 <prvIdleTask+0x68>
			{
				tskTCB *pxTCB;

				taskENTER_CRITICAL();
    1d00:	0f b6       	in	r0, 0x3f	; 63
    1d02:	f8 94       	cli
    1d04:	0f 92       	push	r0
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
    1d06:	d7 01       	movw	r26, r14
    1d08:	15 96       	adiw	r26, 0x05	; 5
    1d0a:	ed 91       	ld	r30, X+
    1d0c:	fc 91       	ld	r31, X
    1d0e:	16 97       	sbiw	r26, 0x06	; 6
    1d10:	06 81       	ldd	r16, Z+6	; 0x06
    1d12:	17 81       	ldd	r17, Z+7	; 0x07
					vListRemove( &( pxTCB->xGenericListItem ) );
    1d14:	c8 01       	movw	r24, r16
    1d16:	02 96       	adiw	r24, 0x02	; 2
    1d18:	0e 94 1c 01 	call	0x238	; 0x238 <vListRemove>
					--uxCurrentNumberOfTasks;
    1d1c:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <uxCurrentNumberOfTasks>
    1d20:	81 50       	subi	r24, 0x01	; 1
    1d22:	80 93 79 09 	sts	0x0979, r24	; 0x800979 <uxCurrentNumberOfTasks>
					--uxTasksDeleted;
    1d26:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <uxTasksDeleted>
    1d2a:	81 50       	subi	r24, 0x01	; 1
    1d2c:	80 93 7a 09 	sts	0x097A, r24	; 0x80097a <uxTasksDeleted>
				}
				taskEXIT_CRITICAL();
    1d30:	0f 90       	pop	r0
    1d32:	0f be       	out	0x3f, r0	; 63
		want to allocate and clean RAM statically. */
		portCLEAN_UP_TCB( pxTCB );

		/* Free up the memory allocated by the scheduler for the task.  It is up to
		the task to free any memory allocated at the application level. */
		vPortFreeAligned( pxTCB->pxStack );
    1d34:	f8 01       	movw	r30, r16
    1d36:	87 89       	ldd	r24, Z+23	; 0x17
    1d38:	90 8d       	ldd	r25, Z+24	; 0x18
    1d3a:	0e 94 a7 00 	call	0x14e	; 0x14e <vPortFree>
		vPortFree( pxTCB );
    1d3e:	c8 01       	movw	r24, r16
    1d40:	0e 94 a7 00 	call	0x14e	; 0x14e <vPortFree>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
    1d44:	88 81       	ld	r24, Y
    1d46:	82 30       	cpi	r24, 0x02	; 2
			{
				taskYIELD();
    1d48:	88 f2       	brcs	.-94     	; 0x1cec <prvIdleTask+0x10>
    1d4a:	4a dc       	rcall	.-1900   	; 0x15e0 <vPortYield>
    1d4c:	cf cf       	rjmp	.-98     	; 0x1cec <prvIdleTask+0x10>

00001d4e <vTaskSwitchContext>:
#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
    1d4e:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <uxSchedulerSuspended>
    1d52:	81 11       	cpse	r24, r1
    1d54:	13 c0       	rjmp	.+38     	; 0x1d7c <vTaskSwitchContext+0x2e>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
    1d56:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <uxTopReadyPriority>
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	fc 01       	movw	r30, r24
    1d5e:	ee 0f       	add	r30, r30
    1d60:	ff 1f       	adc	r31, r31
    1d62:	ee 0f       	add	r30, r30
    1d64:	ff 1f       	adc	r31, r31
    1d66:	ee 0f       	add	r30, r30
    1d68:	ff 1f       	adc	r31, r31
    1d6a:	8e 0f       	add	r24, r30
    1d6c:	9f 1f       	adc	r25, r31
    1d6e:	fc 01       	movw	r30, r24
    1d70:	ed 55       	subi	r30, 0x5D	; 93
    1d72:	f6 4f       	sbci	r31, 0xF6	; 246
    1d74:	80 81       	ld	r24, Z
    1d76:	88 23       	and	r24, r24
    1d78:	29 f0       	breq	.+10     	; 0x1d84 <vTaskSwitchContext+0x36>
    1d7a:	1b c0       	rjmp	.+54     	; 0x1db2 <vTaskSwitchContext+0x64>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
    1d7c:	81 e0       	ldi	r24, 0x01	; 1
    1d7e:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <xMissedYield>
    1d82:	08 95       	ret
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
    1d84:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <uxTopReadyPriority>
    1d88:	81 50       	subi	r24, 0x01	; 1
    1d8a:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <uxTopReadyPriority>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
    1d8e:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <uxTopReadyPriority>
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	fc 01       	movw	r30, r24
    1d96:	ee 0f       	add	r30, r30
    1d98:	ff 1f       	adc	r31, r31
    1d9a:	ee 0f       	add	r30, r30
    1d9c:	ff 1f       	adc	r31, r31
    1d9e:	ee 0f       	add	r30, r30
    1da0:	ff 1f       	adc	r31, r31
    1da2:	8e 0f       	add	r24, r30
    1da4:	9f 1f       	adc	r25, r31
    1da6:	fc 01       	movw	r30, r24
    1da8:	ed 55       	subi	r30, 0x5D	; 93
    1daa:	f6 4f       	sbci	r31, 0xF6	; 246
    1dac:	80 81       	ld	r24, Z
    1dae:	88 23       	and	r24, r24
    1db0:	49 f3       	breq	.-46     	; 0x1d84 <vTaskSwitchContext+0x36>
			--uxTopReadyPriority;
		}
	
		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
		same priority get an equal share of the processor time. */
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
    1db2:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <uxTopReadyPriority>
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	9c 01       	movw	r18, r24
    1dba:	22 0f       	add	r18, r18
    1dbc:	33 1f       	adc	r19, r19
    1dbe:	22 0f       	add	r18, r18
    1dc0:	33 1f       	adc	r19, r19
    1dc2:	22 0f       	add	r18, r18
    1dc4:	33 1f       	adc	r19, r19
    1dc6:	28 0f       	add	r18, r24
    1dc8:	39 1f       	adc	r19, r25
    1dca:	d9 01       	movw	r26, r18
    1dcc:	ad 55       	subi	r26, 0x5D	; 93
    1dce:	b6 4f       	sbci	r27, 0xF6	; 246
    1dd0:	11 96       	adiw	r26, 0x01	; 1
    1dd2:	ed 91       	ld	r30, X+
    1dd4:	fc 91       	ld	r31, X
    1dd6:	12 97       	sbiw	r26, 0x02	; 2
    1dd8:	02 80       	ldd	r0, Z+2	; 0x02
    1dda:	f3 81       	ldd	r31, Z+3	; 0x03
    1ddc:	e0 2d       	mov	r30, r0
    1dde:	12 96       	adiw	r26, 0x02	; 2
    1de0:	fc 93       	st	X, r31
    1de2:	ee 93       	st	-X, r30
    1de4:	11 97       	sbiw	r26, 0x01	; 1
    1de6:	2a 55       	subi	r18, 0x5A	; 90
    1de8:	36 4f       	sbci	r19, 0xF6	; 246
    1dea:	e2 17       	cp	r30, r18
    1dec:	f3 07       	cpc	r31, r19
    1dee:	29 f4       	brne	.+10     	; 0x1dfa <vTaskSwitchContext+0xac>
    1df0:	22 81       	ldd	r18, Z+2	; 0x02
    1df2:	33 81       	ldd	r19, Z+3	; 0x03
    1df4:	fd 01       	movw	r30, r26
    1df6:	32 83       	std	Z+2, r19	; 0x02
    1df8:	21 83       	std	Z+1, r18	; 0x01
    1dfa:	fc 01       	movw	r30, r24
    1dfc:	ee 0f       	add	r30, r30
    1dfe:	ff 1f       	adc	r31, r31
    1e00:	ee 0f       	add	r30, r30
    1e02:	ff 1f       	adc	r31, r31
    1e04:	ee 0f       	add	r30, r30
    1e06:	ff 1f       	adc	r31, r31
    1e08:	8e 0f       	add	r24, r30
    1e0a:	9f 1f       	adc	r25, r31
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	ed 55       	subi	r30, 0x5D	; 93
    1e10:	f6 4f       	sbci	r31, 0xF6	; 246
    1e12:	01 80       	ldd	r0, Z+1	; 0x01
    1e14:	f2 81       	ldd	r31, Z+2	; 0x02
    1e16:	e0 2d       	mov	r30, r0
    1e18:	86 81       	ldd	r24, Z+6	; 0x06
    1e1a:	97 81       	ldd	r25, Z+7	; 0x07
    1e1c:	90 93 c8 09 	sts	0x09C8, r25	; 0x8009c8 <pxCurrentTCB+0x1>
    1e20:	80 93 c7 09 	sts	0x09C7, r24	; 0x8009c7 <pxCurrentTCB>
    1e24:	08 95       	ret

00001e26 <__tablejump2__>:
    1e26:	ee 0f       	add	r30, r30
    1e28:	ff 1f       	adc	r31, r31
    1e2a:	00 24       	eor	r0, r0
    1e2c:	00 1c       	adc	r0, r0
    1e2e:	0b be       	out	0x3b, r0	; 59
    1e30:	07 90       	elpm	r0, Z+
    1e32:	f6 91       	elpm	r31, Z
    1e34:	e0 2d       	mov	r30, r0
    1e36:	09 94       	ijmp

00001e38 <memset>:
    1e38:	dc 01       	movw	r26, r24
    1e3a:	01 c0       	rjmp	.+2      	; 0x1e3e <memset+0x6>
    1e3c:	6d 93       	st	X+, r22
    1e3e:	41 50       	subi	r20, 0x01	; 1
    1e40:	50 40       	sbci	r21, 0x00	; 0
    1e42:	e0 f7       	brcc	.-8      	; 0x1e3c <memset+0x4>
    1e44:	08 95       	ret

00001e46 <strncpy>:
    1e46:	fb 01       	movw	r30, r22
    1e48:	dc 01       	movw	r26, r24
    1e4a:	41 50       	subi	r20, 0x01	; 1
    1e4c:	50 40       	sbci	r21, 0x00	; 0
    1e4e:	48 f0       	brcs	.+18     	; 0x1e62 <strncpy+0x1c>
    1e50:	01 90       	ld	r0, Z+
    1e52:	0d 92       	st	X+, r0
    1e54:	00 20       	and	r0, r0
    1e56:	c9 f7       	brne	.-14     	; 0x1e4a <strncpy+0x4>
    1e58:	01 c0       	rjmp	.+2      	; 0x1e5c <strncpy+0x16>
    1e5a:	1d 92       	st	X+, r1
    1e5c:	41 50       	subi	r20, 0x01	; 1
    1e5e:	50 40       	sbci	r21, 0x00	; 0
    1e60:	e0 f7       	brcc	.-8      	; 0x1e5a <strncpy+0x14>
    1e62:	08 95       	ret

00001e64 <eeprom_read_byte>:
    1e64:	f9 99       	sbic	0x1f, 1	; 31
    1e66:	fe cf       	rjmp	.-4      	; 0x1e64 <eeprom_read_byte>
    1e68:	92 bd       	out	0x22, r25	; 34
    1e6a:	81 bd       	out	0x21, r24	; 33
    1e6c:	f8 9a       	sbi	0x1f, 0	; 31
    1e6e:	99 27       	eor	r25, r25
    1e70:	80 b5       	in	r24, 0x20	; 32
    1e72:	08 95       	ret

00001e74 <eeprom_write_byte>:
    1e74:	26 2f       	mov	r18, r22

00001e76 <eeprom_write_r18>:
    1e76:	f9 99       	sbic	0x1f, 1	; 31
    1e78:	fe cf       	rjmp	.-4      	; 0x1e76 <eeprom_write_r18>
    1e7a:	1f ba       	out	0x1f, r1	; 31
    1e7c:	92 bd       	out	0x22, r25	; 34
    1e7e:	81 bd       	out	0x21, r24	; 33
    1e80:	20 bd       	out	0x20, r18	; 32
    1e82:	0f b6       	in	r0, 0x3f	; 63
    1e84:	f8 94       	cli
    1e86:	fa 9a       	sbi	0x1f, 2	; 31
    1e88:	f9 9a       	sbi	0x1f, 1	; 31
    1e8a:	0f be       	out	0x3f, r0	; 63
    1e8c:	01 96       	adiw	r24, 0x01	; 1
    1e8e:	08 95       	ret

00001e90 <_exit>:
    1e90:	f8 94       	cli

00001e92 <__stop_program>:
    1e92:	ff cf       	rjmp	.-2      	; 0x1e92 <__stop_program>
