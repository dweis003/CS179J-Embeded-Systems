
CHIP_1_Control_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001f4  00800100  00001d14  00001da8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000649  008002f4  008002f4  00001f9c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001f9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001fcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000300  00000000  00000000  00002010  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037a2  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001086  00000000  00000000  00005ab2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002811  00000000  00000000  00006b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000704  00000000  00000000  0000934c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001048  00000000  00000000  00009a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001861  00000000  00000000  0000aa98  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  0000c2f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5a c0       	rjmp	.+180    	; 0xb6 <__ctors_end>
       2:	00 00       	nop
       4:	77 c0       	rjmp	.+238    	; 0xf4 <__bad_interrupt>
       6:	00 00       	nop
       8:	75 c0       	rjmp	.+234    	; 0xf4 <__bad_interrupt>
       a:	00 00       	nop
       c:	73 c0       	rjmp	.+230    	; 0xf4 <__bad_interrupt>
       e:	00 00       	nop
      10:	71 c0       	rjmp	.+226    	; 0xf4 <__bad_interrupt>
      12:	00 00       	nop
      14:	6f c0       	rjmp	.+222    	; 0xf4 <__bad_interrupt>
      16:	00 00       	nop
      18:	6d c0       	rjmp	.+218    	; 0xf4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6b c0       	rjmp	.+214    	; 0xf4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	69 c0       	rjmp	.+210    	; 0xf4 <__bad_interrupt>
      22:	00 00       	nop
      24:	67 c0       	rjmp	.+206    	; 0xf4 <__bad_interrupt>
      26:	00 00       	nop
      28:	65 c0       	rjmp	.+202    	; 0xf4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	63 c0       	rjmp	.+198    	; 0xf4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	61 c0       	rjmp	.+194    	; 0xf4 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 e1 0a 	jmp	0x15c2	; 0x15c2 <__vector_13>
      38:	5d c0       	rjmp	.+186    	; 0xf4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5b c0       	rjmp	.+182    	; 0xf4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	59 c0       	rjmp	.+178    	; 0xf4 <__bad_interrupt>
      42:	00 00       	nop
      44:	57 c0       	rjmp	.+174    	; 0xf4 <__bad_interrupt>
      46:	00 00       	nop
      48:	55 c0       	rjmp	.+170    	; 0xf4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	53 c0       	rjmp	.+166    	; 0xf4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	51 c0       	rjmp	.+162    	; 0xf4 <__bad_interrupt>
      52:	00 00       	nop
      54:	4f c0       	rjmp	.+158    	; 0xf4 <__bad_interrupt>
      56:	00 00       	nop
      58:	4d c0       	rjmp	.+154    	; 0xf4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4b c0       	rjmp	.+150    	; 0xf4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	49 c0       	rjmp	.+146    	; 0xf4 <__bad_interrupt>
      62:	00 00       	nop
      64:	47 c0       	rjmp	.+142    	; 0xf4 <__bad_interrupt>
      66:	00 00       	nop
      68:	45 c0       	rjmp	.+138    	; 0xf4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	43 c0       	rjmp	.+134    	; 0xf4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	41 c0       	rjmp	.+130    	; 0xf4 <__bad_interrupt>
      72:	00 00       	nop
      74:	3f c0       	rjmp	.+126    	; 0xf4 <__bad_interrupt>
      76:	00 00       	nop
      78:	3d c0       	rjmp	.+122    	; 0xf4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3b c0       	rjmp	.+118    	; 0xf4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	39 c0       	rjmp	.+114    	; 0xf4 <__bad_interrupt>
      82:	00 00       	nop
      84:	37 c0       	rjmp	.+110    	; 0xf4 <__bad_interrupt>
      86:	00 00       	nop
      88:	35 c0       	rjmp	.+106    	; 0xf4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d8 02       	muls	r29, r24
      8e:	da 02       	muls	r29, r26
      90:	dc 02       	muls	r29, r28
      92:	e6 02       	muls	r30, r22
      94:	f0 02       	muls	r31, r16
      96:	fa 02       	muls	r31, r26
      98:	04 03       	mulsu	r16, r20
      9a:	0e 03       	fmul	r16, r22
      9c:	18 03       	fmul	r17, r16
      9e:	22 03       	mulsu	r18, r18
      a0:	39 03       	fmul	r19, r17
      a2:	67 03       	mulsu	r22, r23
      a4:	83 03       	fmuls	r16, r19
      a6:	b4 03       	fmuls	r19, r20
      a8:	34 04       	cpc	r3, r4
      aa:	ac 04       	cpc	r10, r12
      ac:	43 05       	cpc	r20, r3
      ae:	bb 05       	cpc	r27, r11
      b0:	6e 06       	cpc	r6, r30
      b2:	e5 06       	cpc	r14, r21
      b4:	5a 07       	cpc	r21, r26

000000b6 <__ctors_end>:
      b6:	11 24       	eor	r1, r1
      b8:	1f be       	out	0x3f, r1	; 63
      ba:	cf ef       	ldi	r28, 0xFF	; 255
      bc:	d0 e4       	ldi	r29, 0x40	; 64
      be:	de bf       	out	0x3e, r29	; 62
      c0:	cd bf       	out	0x3d, r28	; 61

000000c2 <__do_copy_data>:
      c2:	12 e0       	ldi	r17, 0x02	; 2
      c4:	a0 e0       	ldi	r26, 0x00	; 0
      c6:	b1 e0       	ldi	r27, 0x01	; 1
      c8:	e4 e1       	ldi	r30, 0x14	; 20
      ca:	fd e1       	ldi	r31, 0x1D	; 29
      cc:	00 e0       	ldi	r16, 0x00	; 0
      ce:	0b bf       	out	0x3b, r16	; 59
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x14>
      d2:	07 90       	elpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	a4 3f       	cpi	r26, 0xF4	; 244
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0x10>

000000dc <__do_clear_bss>:
      dc:	29 e0       	ldi	r18, 0x09	; 9
      de:	a4 ef       	ldi	r26, 0xF4	; 244
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	ad 33       	cpi	r26, 0x3D	; 61
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>
      ec:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <main>
      f0:	0c 94 88 0e 	jmp	0x1d10	; 0x1d10 <_exit>

000000f4 <__bad_interrupt>:
      f4:	85 cf       	rjmp	.-246    	; 0x0 <__vectors>

000000f6 <pvPortMalloc>:

static size_t xNextFreeByte = ( size_t ) 0;
/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	ec 01       	movw	r28, r24
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
		}
	#endif

	vTaskSuspendAll();
      fc:	0e 94 44 0c 	call	0x1888	; 0x1888 <vTaskSuspendAll>
	{
		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configTOTAL_HEAP_SIZE ) &&
     100:	20 91 f4 02 	lds	r18, 0x02F4	; 0x8002f4 <__data_end>
     104:	30 91 f5 02 	lds	r19, 0x02F5	; 0x8002f5 <__data_end+0x1>
     108:	c9 01       	movw	r24, r18
     10a:	8c 0f       	add	r24, r28
     10c:	9d 1f       	adc	r25, r29
     10e:	8c 3d       	cpi	r24, 0xDC	; 220
     110:	45 e0       	ldi	r20, 0x05	; 5
     112:	94 07       	cpc	r25, r20
     114:	58 f4       	brcc	.+22     	; 0x12c <pvPortMalloc+0x36>
     116:	28 17       	cp	r18, r24
     118:	39 07       	cpc	r19, r25
     11a:	58 f4       	brcc	.+22     	; 0x132 <pvPortMalloc+0x3c>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = &( xHeap.ucHeap[ xNextFreeByte ] );
     11c:	e9 01       	movw	r28, r18
     11e:	ca 50       	subi	r28, 0x0A	; 10
     120:	dd 4f       	sbci	r29, 0xFD	; 253
			xNextFreeByte += xWantedSize;			
     122:	90 93 f5 02 	sts	0x02F5, r25	; 0x8002f5 <__data_end+0x1>
     126:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <__data_end>
     12a:	05 c0       	rjmp	.+10     	; 0x136 <pvPortMalloc+0x40>
static size_t xNextFreeByte = ( size_t ) 0;
/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL; 
     12c:	c0 e0       	ldi	r28, 0x00	; 0
     12e:	d0 e0       	ldi	r29, 0x00	; 0
     130:	02 c0       	rjmp	.+4      	; 0x136 <pvPortMalloc+0x40>
     132:	c0 e0       	ldi	r28, 0x00	; 0
     134:	d0 e0       	ldi	r29, 0x00	; 0
			block. */
			pvReturn = &( xHeap.ucHeap[ xNextFreeByte ] );
			xNextFreeByte += xWantedSize;			
		}	
	}
	xTaskResumeAll();
     136:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <xTaskResumeAll>
		}
	}
	#endif	

	return pvReturn;
}
     13a:	ce 01       	movw	r24, r28
     13c:	df 91       	pop	r29
     13e:	cf 91       	pop	r28
     140:	08 95       	ret

00000142 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
     142:	08 95       	ret

00000144 <vListInitialise>:
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( xList *pxList )
{
     144:	fc 01       	movw	r30, r24
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     146:	03 96       	adiw	r24, 0x03	; 3
     148:	92 83       	std	Z+2, r25	; 0x02
     14a:	81 83       	std	Z+1, r24	; 0x01

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     14c:	2f ef       	ldi	r18, 0xFF	; 255
     14e:	3f ef       	ldi	r19, 0xFF	; 255
     150:	34 83       	std	Z+4, r19	; 0x04
     152:	23 83       	std	Z+3, r18	; 0x03

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     154:	96 83       	std	Z+6, r25	; 0x06
     156:	85 83       	std	Z+5, r24	; 0x05
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     158:	90 87       	std	Z+8, r25	; 0x08
     15a:	87 83       	std	Z+7, r24	; 0x07

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     15c:	10 82       	st	Z, r1
     15e:	08 95       	ret

00000160 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     160:	fc 01       	movw	r30, r24
     162:	11 86       	std	Z+9, r1	; 0x09
     164:	10 86       	std	Z+8, r1	; 0x08
     166:	08 95       	ret

00000168 <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd( xList *pxList, xListItem *pxNewListItem )
{
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	fc 01       	movw	r30, r24
     16e:	db 01       	movw	r26, r22

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     170:	21 81       	ldd	r18, Z+1	; 0x01
     172:	32 81       	ldd	r19, Z+2	; 0x02

	pxNewListItem->pxNext = pxIndex->pxNext;
     174:	e9 01       	movw	r28, r18
     176:	8a 81       	ldd	r24, Y+2	; 0x02
     178:	9b 81       	ldd	r25, Y+3	; 0x03
     17a:	13 96       	adiw	r26, 0x03	; 3
     17c:	9c 93       	st	X, r25
     17e:	8e 93       	st	-X, r24
     180:	12 97       	sbiw	r26, 0x02	; 2
	pxNewListItem->pxPrevious = pxList->pxIndex;
     182:	81 81       	ldd	r24, Z+1	; 0x01
     184:	92 81       	ldd	r25, Z+2	; 0x02
     186:	15 96       	adiw	r26, 0x05	; 5
     188:	9c 93       	st	X, r25
     18a:	8e 93       	st	-X, r24
     18c:	14 97       	sbiw	r26, 0x04	; 4
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     18e:	8a 81       	ldd	r24, Y+2	; 0x02
     190:	9b 81       	ldd	r25, Y+3	; 0x03
     192:	ec 01       	movw	r28, r24
     194:	7d 83       	std	Y+5, r23	; 0x05
     196:	6c 83       	std	Y+4, r22	; 0x04
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     198:	e9 01       	movw	r28, r18
     19a:	7b 83       	std	Y+3, r23	; 0x03
     19c:	6a 83       	std	Y+2, r22	; 0x02
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     19e:	72 83       	std	Z+2, r23	; 0x02
     1a0:	61 83       	std	Z+1, r22	; 0x01

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     1a2:	19 96       	adiw	r26, 0x09	; 9
     1a4:	fc 93       	st	X, r31
     1a6:	ee 93       	st	-X, r30
     1a8:	18 97       	sbiw	r26, 0x08	; 8

	( pxList->uxNumberOfItems )++;
     1aa:	80 81       	ld	r24, Z
     1ac:	8f 5f       	subi	r24, 0xFF	; 255
     1ae:	80 83       	st	Z, r24
}
     1b0:	df 91       	pop	r29
     1b2:	cf 91       	pop	r28
     1b4:	08 95       	ret

000001b6 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	eb 01       	movw	r28, r22
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     1bc:	48 81       	ld	r20, Y
     1be:	59 81       	ldd	r21, Y+1	; 0x01
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     1c0:	4f 3f       	cpi	r20, 0xFF	; 255
     1c2:	2f ef       	ldi	r18, 0xFF	; 255
     1c4:	52 07       	cpc	r21, r18
     1c6:	31 f4       	brne	.+12     	; 0x1d4 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     1c8:	dc 01       	movw	r26, r24
     1ca:	17 96       	adiw	r26, 0x07	; 7
     1cc:	ed 91       	ld	r30, X+
     1ce:	fc 91       	ld	r31, X
     1d0:	18 97       	sbiw	r26, 0x08	; 8
     1d2:	17 c0       	rjmp	.+46     	; 0x202 <vListInsert+0x4c>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/
		
		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     1d4:	fc 01       	movw	r30, r24
     1d6:	33 96       	adiw	r30, 0x03	; 3
     1d8:	dc 01       	movw	r26, r24
     1da:	15 96       	adiw	r26, 0x05	; 5
     1dc:	2d 91       	ld	r18, X+
     1de:	3c 91       	ld	r19, X
     1e0:	16 97       	sbiw	r26, 0x06	; 6
     1e2:	d9 01       	movw	r26, r18
     1e4:	2d 91       	ld	r18, X+
     1e6:	3c 91       	ld	r19, X
     1e8:	42 17       	cp	r20, r18
     1ea:	53 07       	cpc	r21, r19
     1ec:	50 f0       	brcs	.+20     	; 0x202 <vListInsert+0x4c>
     1ee:	02 80       	ldd	r0, Z+2	; 0x02
     1f0:	f3 81       	ldd	r31, Z+3	; 0x03
     1f2:	e0 2d       	mov	r30, r0
     1f4:	a2 81       	ldd	r26, Z+2	; 0x02
     1f6:	b3 81       	ldd	r27, Z+3	; 0x03
     1f8:	2d 91       	ld	r18, X+
     1fa:	3c 91       	ld	r19, X
     1fc:	42 17       	cp	r20, r18
     1fe:	53 07       	cpc	r21, r19
     200:	b0 f7       	brcc	.-20     	; 0x1ee <vListInsert+0x38>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     202:	a2 81       	ldd	r26, Z+2	; 0x02
     204:	b3 81       	ldd	r27, Z+3	; 0x03
     206:	bb 83       	std	Y+3, r27	; 0x03
     208:	aa 83       	std	Y+2, r26	; 0x02
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     20a:	15 96       	adiw	r26, 0x05	; 5
     20c:	dc 93       	st	X, r29
     20e:	ce 93       	st	-X, r28
     210:	14 97       	sbiw	r26, 0x04	; 4
	pxNewListItem->pxPrevious = pxIterator;
     212:	fd 83       	std	Y+5, r31	; 0x05
     214:	ec 83       	std	Y+4, r30	; 0x04
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     216:	d3 83       	std	Z+3, r29	; 0x03
     218:	c2 83       	std	Z+2, r28	; 0x02

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     21a:	99 87       	std	Y+9, r25	; 0x09
     21c:	88 87       	std	Y+8, r24	; 0x08

	( pxList->uxNumberOfItems )++;
     21e:	fc 01       	movw	r30, r24
     220:	20 81       	ld	r18, Z
     222:	2f 5f       	subi	r18, 0xFF	; 255
     224:	20 83       	st	Z, r18
}
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	08 95       	ret

0000022c <vListRemove>:
/*-----------------------------------------------------------*/

void vListRemove( xListItem *pxItemToRemove )
{
     22c:	fc 01       	movw	r30, r24
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     22e:	a2 81       	ldd	r26, Z+2	; 0x02
     230:	b3 81       	ldd	r27, Z+3	; 0x03
     232:	84 81       	ldd	r24, Z+4	; 0x04
     234:	95 81       	ldd	r25, Z+5	; 0x05
     236:	15 96       	adiw	r26, 0x05	; 5
     238:	9c 93       	st	X, r25
     23a:	8e 93       	st	-X, r24
     23c:	14 97       	sbiw	r26, 0x04	; 4
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     23e:	a4 81       	ldd	r26, Z+4	; 0x04
     240:	b5 81       	ldd	r27, Z+5	; 0x05
     242:	82 81       	ldd	r24, Z+2	; 0x02
     244:	93 81       	ldd	r25, Z+3	; 0x03
     246:	13 96       	adiw	r26, 0x03	; 3
     248:	9c 93       	st	X, r25
     24a:	8e 93       	st	-X, r24
     24c:	12 97       	sbiw	r26, 0x02	; 2
	
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     24e:	a0 85       	ldd	r26, Z+8	; 0x08
     250:	b1 85       	ldd	r27, Z+9	; 0x09

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     252:	11 96       	adiw	r26, 0x01	; 1
     254:	8d 91       	ld	r24, X+
     256:	9c 91       	ld	r25, X
     258:	12 97       	sbiw	r26, 0x02	; 2
     25a:	e8 17       	cp	r30, r24
     25c:	f9 07       	cpc	r31, r25
     25e:	31 f4       	brne	.+12     	; 0x26c <vListRemove+0x40>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     260:	84 81       	ldd	r24, Z+4	; 0x04
     262:	95 81       	ldd	r25, Z+5	; 0x05
     264:	12 96       	adiw	r26, 0x02	; 2
     266:	9c 93       	st	X, r25
     268:	8e 93       	st	-X, r24
     26a:	11 97       	sbiw	r26, 0x01	; 1
	}

	pxItemToRemove->pvContainer = NULL;
     26c:	11 86       	std	Z+9, r1	; 0x09
     26e:	10 86       	std	Z+8, r1	; 0x08
	( pxList->uxNumberOfItems )--;
     270:	8c 91       	ld	r24, X
     272:	81 50       	subi	r24, 0x01	; 1
     274:	8c 93       	st	X, r24
     276:	08 95       	ret

00000278 <initUSART>:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Bluetooth RECEIVE FSM
enum BLUERECState {Blue_Rec_Wait, Blue_Receive_State } blue_rec_state;

void BLUE_REC_Init(){
	blue_rec_state = Blue_Rec_Wait;
     278:	81 30       	cpi	r24, 0x01	; 1
     27a:	81 f0       	breq	.+32     	; 0x29c <initUSART+0x24>
     27c:	e1 ec       	ldi	r30, 0xC1	; 193
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	80 81       	ld	r24, Z
     282:	88 61       	ori	r24, 0x18	; 24
     284:	80 83       	st	Z, r24
     286:	e2 ec       	ldi	r30, 0xC2	; 194
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	80 81       	ld	r24, Z
     28c:	86 60       	ori	r24, 0x06	; 6
     28e:	80 83       	st	Z, r24
     290:	83 e3       	ldi	r24, 0x33	; 51
     292:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     296:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     29a:	08 95       	ret
     29c:	e9 ec       	ldi	r30, 0xC9	; 201
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	88 61       	ori	r24, 0x18	; 24
     2a4:	80 83       	st	Z, r24
     2a6:	ea ec       	ldi	r30, 0xCA	; 202
     2a8:	f0 e0       	ldi	r31, 0x00	; 0
     2aa:	80 81       	ld	r24, Z
     2ac:	86 60       	ori	r24, 0x06	; 6
     2ae:	80 83       	st	Z, r24
     2b0:	83 e3       	ldi	r24, 0x33	; 51
     2b2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     2b6:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     2ba:	08 95       	ret

000002bc <USART_Flush>:
     2bc:	81 30       	cpi	r24, 0x01	; 1
     2be:	29 f4       	brne	.+10     	; 0x2ca <USART_Flush+0xe>
     2c0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     2c4:	88 23       	and	r24, r24
     2c6:	74 f0       	brlt	.+28     	; 0x2e4 <USART_Flush+0x28>
     2c8:	08 95       	ret
     2ca:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     2ce:	88 23       	and	r24, r24
     2d0:	8c f4       	brge	.+34     	; 0x2f4 <USART_Flush+0x38>
     2d2:	a6 ec       	ldi	r26, 0xC6	; 198
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	e0 ec       	ldi	r30, 0xC0	; 192
     2d8:	f0 e0       	ldi	r31, 0x00	; 0
     2da:	8c 91       	ld	r24, X
     2dc:	80 81       	ld	r24, Z
     2de:	88 23       	and	r24, r24
     2e0:	e4 f3       	brlt	.-8      	; 0x2da <USART_Flush+0x1e>
     2e2:	08 95       	ret
     2e4:	ae ec       	ldi	r26, 0xCE	; 206
     2e6:	b0 e0       	ldi	r27, 0x00	; 0
     2e8:	e8 ec       	ldi	r30, 0xC8	; 200
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	8c 91       	ld	r24, X
     2ee:	80 81       	ld	r24, Z
     2f0:	88 23       	and	r24, r24
     2f2:	e4 f3       	brlt	.-8      	; 0x2ec <USART_Flush+0x30>
     2f4:	08 95       	ret

000002f6 <USART_Send>:
     2f6:	61 30       	cpi	r22, 0x01	; 1
     2f8:	41 f0       	breq	.+16     	; 0x30a <USART_Send+0x14>
     2fa:	e0 ec       	ldi	r30, 0xC0	; 192
     2fc:	f0 e0       	ldi	r31, 0x00	; 0
     2fe:	90 81       	ld	r25, Z
     300:	95 ff       	sbrs	r25, 5
     302:	fd cf       	rjmp	.-6      	; 0x2fe <USART_Send+0x8>
     304:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     308:	08 95       	ret
     30a:	e8 ec       	ldi	r30, 0xC8	; 200
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	90 81       	ld	r25, Z
     310:	95 ff       	sbrs	r25, 5
     312:	fd cf       	rjmp	.-6      	; 0x30e <USART_Send+0x18>
     314:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     318:	08 95       	ret

0000031a <USART_Receive>:
     31a:	81 30       	cpi	r24, 0x01	; 1
     31c:	41 f0       	breq	.+16     	; 0x32e <USART_Receive+0x14>
     31e:	e0 ec       	ldi	r30, 0xC0	; 192
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	88 23       	and	r24, r24
     326:	ec f7       	brge	.-6      	; 0x322 <USART_Receive+0x8>
     328:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     32c:	08 95       	ret
     32e:	e8 ec       	ldi	r30, 0xC8	; 200
     330:	f0 e0       	ldi	r31, 0x00	; 0
     332:	80 81       	ld	r24, Z
     334:	88 23       	and	r24, r24
     336:	ec f7       	brge	.-6      	; 0x332 <USART_Receive+0x18>
     338:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     33c:	08 95       	ret

0000033e <delay_ms>:
     33e:	18 16       	cp	r1, r24
     340:	19 06       	cpc	r1, r25
     342:	5c f0       	brlt	.+22     	; 0x35a <delay_ms+0x1c>
     344:	08 95       	ret
     346:	00 00       	nop
     348:	21 50       	subi	r18, 0x01	; 1
     34a:	31 09       	sbc	r19, r1
     34c:	e1 f7       	brne	.-8      	; 0x346 <delay_ms+0x8>
     34e:	4f 5f       	subi	r20, 0xFF	; 255
     350:	5f 4f       	sbci	r21, 0xFF	; 255
     352:	84 17       	cp	r24, r20
     354:	95 07       	cpc	r25, r21
     356:	19 f4       	brne	.+6      	; 0x35e <delay_ms+0x20>
     358:	08 95       	ret
     35a:	40 e0       	ldi	r20, 0x00	; 0
     35c:	50 e0       	ldi	r21, 0x00	; 0
     35e:	27 e0       	ldi	r18, 0x07	; 7
     360:	33 e0       	ldi	r19, 0x03	; 3
     362:	f1 cf       	rjmp	.-30     	; 0x346 <delay_ms+0x8>

00000364 <LCD_WriteCommand>:
     364:	5e 98       	cbi	0x0b, 6	; 11
     366:	88 b9       	out	0x08, r24	; 8
     368:	5f 9a       	sbi	0x0b, 7	; 11
     36a:	00 00       	nop
     36c:	5f 98       	cbi	0x0b, 7	; 11
     36e:	82 e0       	ldi	r24, 0x02	; 2
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	e5 cf       	rjmp	.-54     	; 0x33e <delay_ms>
     374:	08 95       	ret

00000376 <LCD_ClearScreen>:
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	f5 cf       	rjmp	.-22     	; 0x364 <LCD_WriteCommand>
     37a:	08 95       	ret

0000037c <LCD_Cursor>:
     37c:	81 31       	cpi	r24, 0x11	; 17
     37e:	18 f4       	brcc	.+6      	; 0x386 <LCD_Cursor+0xa>
     380:	81 58       	subi	r24, 0x81	; 129
     382:	f0 cf       	rjmp	.-32     	; 0x364 <LCD_WriteCommand>
     384:	08 95       	ret
     386:	81 55       	subi	r24, 0x51	; 81
     388:	ed cf       	rjmp	.-38     	; 0x364 <LCD_WriteCommand>
     38a:	08 95       	ret

0000038c <LCD_init>:
     38c:	84 e6       	ldi	r24, 0x64	; 100
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	d6 df       	rcall	.-84     	; 0x33e <delay_ms>
     392:	88 e3       	ldi	r24, 0x38	; 56
     394:	e7 df       	rcall	.-50     	; 0x364 <LCD_WriteCommand>
     396:	86 e0       	ldi	r24, 0x06	; 6
     398:	e5 df       	rcall	.-54     	; 0x364 <LCD_WriteCommand>
     39a:	8f e0       	ldi	r24, 0x0F	; 15
     39c:	e3 df       	rcall	.-58     	; 0x364 <LCD_WriteCommand>
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	e1 df       	rcall	.-62     	; 0x364 <LCD_WriteCommand>
     3a2:	8a e0       	ldi	r24, 0x0A	; 10
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	cb cf       	rjmp	.-106    	; 0x33e <delay_ms>
     3a8:	08 95       	ret

000003aa <LCD_WriteData>:
     3aa:	5e 9a       	sbi	0x0b, 6	; 11
     3ac:	88 b9       	out	0x08, r24	; 8
     3ae:	5f 9a       	sbi	0x0b, 7	; 11
     3b0:	00 00       	nop
     3b2:	5f 98       	cbi	0x0b, 7	; 11
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	c2 cf       	rjmp	.-124    	; 0x33e <delay_ms>
     3ba:	08 95       	ret

000003bc <LCD_DisplayString>:
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	18 2f       	mov	r17, r24
     3c6:	eb 01       	movw	r28, r22
     3c8:	d6 df       	rcall	.-84     	; 0x376 <LCD_ClearScreen>
     3ca:	88 81       	ld	r24, Y
     3cc:	88 23       	and	r24, r24
     3ce:	51 f0       	breq	.+20     	; 0x3e4 <LCD_DisplayString+0x28>
     3d0:	01 e0       	ldi	r16, 0x01	; 1
     3d2:	01 0f       	add	r16, r17
     3d4:	81 2f       	mov	r24, r17
     3d6:	d2 df       	rcall	.-92     	; 0x37c <LCD_Cursor>
     3d8:	89 91       	ld	r24, Y+
     3da:	e7 df       	rcall	.-50     	; 0x3aa <LCD_WriteData>
     3dc:	10 2f       	mov	r17, r16
     3de:	88 81       	ld	r24, Y
     3e0:	81 11       	cpse	r24, r1
     3e2:	f6 cf       	rjmp	.-20     	; 0x3d0 <LCD_DisplayString+0x14>
     3e4:	df 91       	pop	r29
     3e6:	cf 91       	pop	r28
     3e8:	1f 91       	pop	r17
     3ea:	0f 91       	pop	r16
     3ec:	08 95       	ret

000003ee <BUTTON_Tick>:
     3ee:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <button_state>
     3f2:	88 23       	and	r24, r24
     3f4:	21 f0       	breq	.+8      	; 0x3fe <BUTTON_Tick+0x10>
     3f6:	81 30       	cpi	r24, 0x01	; 1
     3f8:	09 f4       	brne	.+2      	; 0x3fc <BUTTON_Tick+0xe>
     3fa:	86 c0       	rjmp	.+268    	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     3fc:	9f c0       	rjmp	.+318    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
     3fe:	00 99       	sbic	0x00, 0	; 0
     400:	1f c0       	rjmp	.+62     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     402:	80 b1       	in	r24, 0x00	; 0
     404:	80 95       	com	r24
     406:	81 fd       	sbrc	r24, 1
     408:	1b c0       	rjmp	.+54     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     40a:	80 b1       	in	r24, 0x00	; 0
     40c:	80 95       	com	r24
     40e:	82 fd       	sbrc	r24, 2
     410:	17 c0       	rjmp	.+46     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     412:	80 b1       	in	r24, 0x00	; 0
     414:	80 95       	com	r24
     416:	83 fd       	sbrc	r24, 3
     418:	13 c0       	rjmp	.+38     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     41a:	80 b1       	in	r24, 0x00	; 0
     41c:	80 95       	com	r24
     41e:	84 fd       	sbrc	r24, 4
     420:	0f c0       	rjmp	.+30     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     422:	29 9a       	sbi	0x05, 1	; 5
     424:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     428:	81 30       	cpi	r24, 0x01	; 1
     42a:	19 f4       	brne	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     42c:	10 92 dd 08 	sts	0x08DD, r1	; 0x8008dd <ARM_DISARM>
     430:	03 c0       	rjmp	.+6      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <ARM_DISARM>
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     43e:	08 95       	ret
     440:	00 9b       	sbis	0x00, 0	; 0
     442:	17 c0       	rjmp	.+46     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     444:	80 b1       	in	r24, 0x00	; 0
     446:	80 95       	com	r24
     448:	81 ff       	sbrs	r24, 1
     44a:	13 c0       	rjmp	.+38     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     44c:	80 b1       	in	r24, 0x00	; 0
     44e:	80 95       	com	r24
     450:	82 fd       	sbrc	r24, 2
     452:	0f c0       	rjmp	.+30     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     454:	80 b1       	in	r24, 0x00	; 0
     456:	80 95       	com	r24
     458:	83 fd       	sbrc	r24, 3
     45a:	0b c0       	rjmp	.+22     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     45c:	80 b1       	in	r24, 0x00	; 0
     45e:	80 95       	com	r24
     460:	84 fd       	sbrc	r24, 4
     462:	07 c0       	rjmp	.+14     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     464:	29 9a       	sbi	0x05, 1	; 5
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	80 93 dc 08 	sts	0x08DC, r24	; 0x8008dc <Button_A>
     46c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     470:	08 95       	ret
     472:	00 9b       	sbis	0x00, 0	; 0
     474:	17 c0       	rjmp	.+46     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     476:	80 b1       	in	r24, 0x00	; 0
     478:	80 95       	com	r24
     47a:	81 fd       	sbrc	r24, 1
     47c:	13 c0       	rjmp	.+38     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     47e:	80 b1       	in	r24, 0x00	; 0
     480:	80 95       	com	r24
     482:	82 ff       	sbrs	r24, 2
     484:	0f c0       	rjmp	.+30     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     486:	80 b1       	in	r24, 0x00	; 0
     488:	80 95       	com	r24
     48a:	83 fd       	sbrc	r24, 3
     48c:	0b c0       	rjmp	.+22     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     48e:	80 b1       	in	r24, 0x00	; 0
     490:	80 95       	com	r24
     492:	84 fd       	sbrc	r24, 4
     494:	07 c0       	rjmp	.+14     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     496:	29 9a       	sbi	0x05, 1	; 5
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	80 93 db 08 	sts	0x08DB, r24	; 0x8008db <Button_B>
     49e:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     4a2:	08 95       	ret
     4a4:	00 9b       	sbis	0x00, 0	; 0
     4a6:	17 c0       	rjmp	.+46     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4a8:	80 b1       	in	r24, 0x00	; 0
     4aa:	80 95       	com	r24
     4ac:	81 fd       	sbrc	r24, 1
     4ae:	13 c0       	rjmp	.+38     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4b0:	80 b1       	in	r24, 0x00	; 0
     4b2:	80 95       	com	r24
     4b4:	82 fd       	sbrc	r24, 2
     4b6:	0f c0       	rjmp	.+30     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4b8:	80 b1       	in	r24, 0x00	; 0
     4ba:	80 95       	com	r24
     4bc:	83 ff       	sbrs	r24, 3
     4be:	0b c0       	rjmp	.+22     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4c0:	80 b1       	in	r24, 0x00	; 0
     4c2:	80 95       	com	r24
     4c4:	84 fd       	sbrc	r24, 4
     4c6:	07 c0       	rjmp	.+14     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4c8:	29 9a       	sbi	0x05, 1	; 5
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	80 93 da 08 	sts	0x08DA, r24	; 0x8008da <Button_L>
     4d0:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     4d4:	08 95       	ret
     4d6:	00 9b       	sbis	0x00, 0	; 0
     4d8:	33 c0       	rjmp	.+102    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4da:	80 b1       	in	r24, 0x00	; 0
     4dc:	80 95       	com	r24
     4de:	81 fd       	sbrc	r24, 1
     4e0:	2f c0       	rjmp	.+94     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4e2:	80 b1       	in	r24, 0x00	; 0
     4e4:	80 95       	com	r24
     4e6:	82 fd       	sbrc	r24, 2
     4e8:	2b c0       	rjmp	.+86     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4ea:	80 b1       	in	r24, 0x00	; 0
     4ec:	80 95       	com	r24
     4ee:	83 fd       	sbrc	r24, 3
     4f0:	27 c0       	rjmp	.+78     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4f2:	80 b1       	in	r24, 0x00	; 0
     4f4:	80 95       	com	r24
     4f6:	84 ff       	sbrs	r24, 4
     4f8:	23 c0       	rjmp	.+70     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4fa:	29 9a       	sbi	0x05, 1	; 5
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	80 93 d9 08 	sts	0x08D9, r24	; 0x8008d9 <Button_R>
     502:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     506:	08 95       	ret
     508:	29 98       	cbi	0x05, 1	; 5
     50a:	00 9b       	sbis	0x00, 0	; 0
     50c:	10 c0       	rjmp	.+32     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     50e:	80 b1       	in	r24, 0x00	; 0
     510:	80 95       	com	r24
     512:	81 fd       	sbrc	r24, 1
     514:	0c c0       	rjmp	.+24     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     516:	80 b1       	in	r24, 0x00	; 0
     518:	80 95       	com	r24
     51a:	82 fd       	sbrc	r24, 2
     51c:	08 c0       	rjmp	.+16     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     51e:	80 b1       	in	r24, 0x00	; 0
     520:	80 95       	com	r24
     522:	83 fd       	sbrc	r24, 3
     524:	04 c0       	rjmp	.+8      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     526:	80 b1       	in	r24, 0x00	; 0
     528:	80 95       	com	r24
     52a:	84 ff       	sbrs	r24, 4
     52c:	04 c0       	rjmp	.+8      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <button_state>
     534:	08 95       	ret
     536:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <button_state>
     53a:	08 95       	ret
     53c:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <button_state>
     540:	08 95       	ret

00000542 <ButtonTask>:
     542:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <button_state>
     546:	53 df       	rcall	.-346    	; 0x3ee <BUTTON_Tick>
     548:	8a e0       	ldi	r24, 0x0A	; 10
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	0e 94 92 0d 	call	0x1b24	; 0x1b24 <vTaskDelay>
     550:	fa cf       	rjmp	.-12     	; 0x546 <ButtonTask+0x4>

00000552 <StartButtonPulse>:
     552:	af 92       	push	r10
     554:	bf 92       	push	r11
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	a1 2c       	mov	r10, r1
     562:	b1 2c       	mov	r11, r1
     564:	c1 2c       	mov	r12, r1
     566:	d1 2c       	mov	r13, r1
     568:	e1 2c       	mov	r14, r1
     56a:	f1 2c       	mov	r15, r1
     56c:	08 2f       	mov	r16, r24
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	45 e5       	ldi	r20, 0x55	; 85
     574:	50 e0       	ldi	r21, 0x00	; 0
     576:	64 e0       	ldi	r22, 0x04	; 4
     578:	71 e0       	ldi	r23, 0x01	; 1
     57a:	81 ea       	ldi	r24, 0xA1	; 161
     57c:	92 e0       	ldi	r25, 0x02	; 2
     57e:	0e 94 1a 0b 	call	0x1634	; 0x1634 <xTaskGenericCreate>
     582:	0f 91       	pop	r16
     584:	ff 90       	pop	r15
     586:	ef 90       	pop	r14
     588:	df 90       	pop	r13
     58a:	cf 90       	pop	r12
     58c:	bf 90       	pop	r11
     58e:	af 90       	pop	r10
     590:	08 95       	ret

00000592 <Menu_Tick>:
     592:	cf 93       	push	r28
     594:	e0 91 3b 09 	lds	r30, 0x093B	; 0x80093b <menu_state>
     598:	8e 2f       	mov	r24, r30
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	fc 01       	movw	r30, r24
     59e:	31 97       	sbiw	r30, 0x01	; 1
     5a0:	ea 30       	cpi	r30, 0x0A	; 10
     5a2:	f1 05       	cpc	r31, r1
     5a4:	08 f0       	brcs	.+2      	; 0x5a8 <Menu_Tick+0x16>
     5a6:	58 c0       	rjmp	.+176    	; 0x658 <Menu_Tick+0xc6>
     5a8:	ea 5b       	subi	r30, 0xBA	; 186
     5aa:	ff 4f       	sbci	r31, 0xFF	; 255
     5ac:	0c 94 53 0e 	jmp	0x1ca6	; 0x1ca6 <__tablejump2__>
     5b0:	28 9a       	sbi	0x05, 0	; 5
     5b2:	52 c0       	rjmp	.+164    	; 0x658 <Menu_Tick+0xc6>
     5b4:	28 98       	cbi	0x05, 0	; 5
     5b6:	50 c0       	rjmp	.+160    	; 0x658 <Menu_Tick+0xc6>
     5b8:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     5bc:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     5c0:	01 96       	adiw	r24, 0x01	; 1
     5c2:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     5c6:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     5ca:	ce c0       	rjmp	.+412    	; 0x768 <Menu_Tick+0x1d6>
     5cc:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     5d0:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     5da:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     5de:	44 c1       	rjmp	.+648    	; 0x868 <Menu_Tick+0x2d6>
     5e0:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     5e4:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     5ee:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     5f2:	b2 c1       	rjmp	.+868    	; 0x958 <Menu_Tick+0x3c6>
     5f4:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     5f8:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     5fc:	01 96       	adiw	r24, 0x01	; 1
     5fe:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     602:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     606:	3f c2       	rjmp	.+1150   	; 0xa86 <Menu_Tick+0x4f4>
     608:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     60c:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     610:	01 96       	adiw	r24, 0x01	; 1
     612:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     616:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     61a:	ad c2       	rjmp	.+1370   	; 0xb76 <Menu_Tick+0x5e4>
     61c:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     620:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     624:	01 96       	adiw	r24, 0x01	; 1
     626:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     62a:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     62e:	56 c3       	rjmp	.+1708   	; 0xcdc <Menu_Tick+0x74a>
     630:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     634:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     638:	01 96       	adiw	r24, 0x01	; 1
     63a:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     63e:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     642:	c3 c3       	rjmp	.+1926   	; 0xdca <Menu_Tick+0x838>
     644:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     648:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     64c:	01 96       	adiw	r24, 0x01	; 1
     64e:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <counter+0x1>
     652:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <counter>
     656:	2e c4       	rjmp	.+2140   	; 0xeb4 <Menu_Tick+0x922>
     658:	e0 91 3b 09 	lds	r30, 0x093B	; 0x80093b <menu_state>
     65c:	8e 2f       	mov	r24, r30
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	8b 30       	cpi	r24, 0x0B	; 11
     662:	91 05       	cpc	r25, r1
     664:	08 f0       	brcs	.+2      	; 0x668 <Menu_Tick+0xd6>
     666:	75 c4       	rjmp	.+2282   	; 0xf52 <Menu_Tick+0x9c0>
     668:	fc 01       	movw	r30, r24
     66a:	e0 5b       	subi	r30, 0xB0	; 176
     66c:	ff 4f       	sbci	r31, 0xFF	; 255
     66e:	0c 94 53 0e 	jmp	0x1ca6	; 0x1ca6 <__tablejump2__>
     672:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     676:	81 11       	cpse	r24, r1
     678:	17 c0       	rjmp	.+46     	; 0x6a8 <Menu_Tick+0x116>
     67a:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     67e:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     682:	6f e0       	ldi	r22, 0x0F	; 15
     684:	71 e0       	ldi	r23, 0x01	; 1
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	99 de       	rcall	.-718    	; 0x3bc <LCD_DisplayString>
     68a:	81 e2       	ldi	r24, 0x21	; 33
     68c:	77 de       	rcall	.-786    	; 0x37c <LCD_Cursor>
     68e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     692:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     696:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     69a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     69e:	15 b8       	out	0x05, r1	; 5
     6a0:	82 e0       	ldi	r24, 0x02	; 2
     6a2:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     6a6:	57 c4       	rjmp	.+2222   	; 0xf56 <Menu_Tick+0x9c4>
     6a8:	6d e2       	ldi	r22, 0x2D	; 45
     6aa:	71 e0       	ldi	r23, 0x01	; 1
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	86 de       	rcall	.-756    	; 0x3bc <LCD_DisplayString>
     6b0:	81 e2       	ldi	r24, 0x21	; 33
     6b2:	64 de       	rcall	.-824    	; 0x37c <LCD_Cursor>
     6b4:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     6b8:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     6bc:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     6c0:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	85 b9       	out	0x05, r24	; 5
     6c8:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     6cc:	44 c4       	rjmp	.+2184   	; 0xf56 <Menu_Tick+0x9c4>
     6ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6d2:	81 11       	cpse	r24, r1
     6d4:	08 c0       	rjmp	.+16     	; 0x6e6 <Menu_Tick+0x154>
     6d6:	82 e0       	ldi	r24, 0x02	; 2
     6d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     6dc:	10 92 dd 08 	sts	0x08DD, r1	; 0x8008dd <ARM_DISARM>
     6e0:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     6e4:	38 c4       	rjmp	.+2160   	; 0xf56 <Menu_Tick+0x9c4>
     6e6:	80 b1       	in	r24, 0x00	; 0
     6e8:	80 95       	com	r24
     6ea:	85 ff       	sbrs	r24, 5
     6ec:	05 c0       	rjmp	.+10     	; 0x6f8 <Menu_Tick+0x166>
     6ee:	10 92 dd 08 	sts	0x08DD, r1	; 0x8008dd <ARM_DISARM>
     6f2:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     6f6:	2f c4       	rjmp	.+2142   	; 0xf56 <Menu_Tick+0x9c4>
     6f8:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     6fc:	81 11       	cpse	r24, r1
     6fe:	2b c4       	rjmp	.+2134   	; 0xf56 <Menu_Tick+0x9c4>
     700:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     704:	28 c4       	rjmp	.+2128   	; 0xf56 <Menu_Tick+0x9c4>
     706:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     70a:	81 30       	cpi	r24, 0x01	; 1
     70c:	49 f4       	brne	.+18     	; 0x720 <Menu_Tick+0x18e>
     70e:	82 e0       	ldi	r24, 0x02	; 2
     710:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <ARM_DISARM>
     71a:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     71e:	1b c4       	rjmp	.+2102   	; 0xf56 <Menu_Tick+0x9c4>
     720:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     724:	81 30       	cpi	r24, 0x01	; 1
     726:	31 f4       	brne	.+12     	; 0x734 <Menu_Tick+0x1a2>
     728:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     72c:	82 e0       	ldi	r24, 0x02	; 2
     72e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     732:	11 c4       	rjmp	.+2082   	; 0xf56 <Menu_Tick+0x9c4>
     734:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     738:	81 30       	cpi	r24, 0x01	; 1
     73a:	09 f0       	breq	.+2      	; 0x73e <Menu_Tick+0x1ac>
     73c:	0c c4       	rjmp	.+2072   	; 0xf56 <Menu_Tick+0x9c4>
     73e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     742:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     746:	67 e4       	ldi	r22, 0x47	; 71
     748:	71 e0       	ldi	r23, 0x01	; 1
     74a:	38 de       	rcall	.-912    	; 0x3bc <LCD_DisplayString>
     74c:	81 e2       	ldi	r24, 0x21	; 33
     74e:	16 de       	rcall	.-980    	; 0x37c <LCD_Cursor>
     750:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     754:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     758:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     75c:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     760:	83 e0       	ldi	r24, 0x03	; 3
     762:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     766:	f7 c3       	rjmp	.+2030   	; 0xf56 <Menu_Tick+0x9c4>
     768:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     76c:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     770:	84 3f       	cpi	r24, 0xF4	; 244
     772:	91 40       	sbci	r25, 0x01	; 1
     774:	b0 f0       	brcs	.+44     	; 0x7a2 <Menu_Tick+0x210>
     776:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     77a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     77e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     782:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     786:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     78a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     78e:	6f e0       	ldi	r22, 0x0F	; 15
     790:	71 e0       	ldi	r23, 0x01	; 1
     792:	81 e0       	ldi	r24, 0x01	; 1
     794:	13 de       	rcall	.-986    	; 0x3bc <LCD_DisplayString>
     796:	81 e2       	ldi	r24, 0x21	; 33
     798:	f1 dd       	rcall	.-1054   	; 0x37c <LCD_Cursor>
     79a:	82 e0       	ldi	r24, 0x02	; 2
     79c:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     7a0:	da c3       	rjmp	.+1972   	; 0xf56 <Menu_Tick+0x9c4>
     7a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     7a6:	81 30       	cpi	r24, 0x01	; 1
     7a8:	49 f4       	brne	.+18     	; 0x7bc <Menu_Tick+0x22a>
     7aa:	82 e0       	ldi	r24, 0x02	; 2
     7ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <ARM_DISARM>
     7b6:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     7ba:	cd c3       	rjmp	.+1946   	; 0xf56 <Menu_Tick+0x9c4>
     7bc:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     7c0:	81 30       	cpi	r24, 0x01	; 1
     7c2:	31 f4       	brne	.+12     	; 0x7d0 <Menu_Tick+0x23e>
     7c4:	82 e0       	ldi	r24, 0x02	; 2
     7c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     7ca:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     7ce:	c3 c3       	rjmp	.+1926   	; 0xf56 <Menu_Tick+0x9c4>
     7d0:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     7d4:	81 30       	cpi	r24, 0x01	; 1
     7d6:	a9 f4       	brne	.+42     	; 0x802 <Menu_Tick+0x270>
     7d8:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     7dc:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     7e0:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     7e4:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     7e8:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     7ec:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     7f0:	6f e5       	ldi	r22, 0x5F	; 95
     7f2:	71 e0       	ldi	r23, 0x01	; 1
     7f4:	e3 dd       	rcall	.-1082   	; 0x3bc <LCD_DisplayString>
     7f6:	81 e2       	ldi	r24, 0x21	; 33
     7f8:	c1 dd       	rcall	.-1150   	; 0x37c <LCD_Cursor>
     7fa:	87 e0       	ldi	r24, 0x07	; 7
     7fc:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     800:	aa c3       	rjmp	.+1876   	; 0xf56 <Menu_Tick+0x9c4>
     802:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     806:	81 30       	cpi	r24, 0x01	; 1
     808:	a9 f4       	brne	.+42     	; 0x834 <Menu_Tick+0x2a2>
     80a:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     80e:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     812:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     816:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     81a:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     81e:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     822:	6f e0       	ldi	r22, 0x0F	; 15
     824:	71 e0       	ldi	r23, 0x01	; 1
     826:	ca dd       	rcall	.-1132   	; 0x3bc <LCD_DisplayString>
     828:	81 e2       	ldi	r24, 0x21	; 33
     82a:	a8 dd       	rcall	.-1200   	; 0x37c <LCD_Cursor>
     82c:	82 e0       	ldi	r24, 0x02	; 2
     82e:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     832:	91 c3       	rjmp	.+1826   	; 0xf56 <Menu_Tick+0x9c4>
     834:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     838:	81 30       	cpi	r24, 0x01	; 1
     83a:	09 f0       	breq	.+2      	; 0x83e <Menu_Tick+0x2ac>
     83c:	8c c3       	rjmp	.+1816   	; 0xf56 <Menu_Tick+0x9c4>
     83e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     842:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     846:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     84a:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     84e:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     852:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     856:	67 e7       	ldi	r22, 0x77	; 119
     858:	71 e0       	ldi	r23, 0x01	; 1
     85a:	b0 dd       	rcall	.-1184   	; 0x3bc <LCD_DisplayString>
     85c:	81 e2       	ldi	r24, 0x21	; 33
     85e:	8e dd       	rcall	.-1252   	; 0x37c <LCD_Cursor>
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     866:	77 c3       	rjmp	.+1774   	; 0xf56 <Menu_Tick+0x9c4>
     868:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     86c:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     870:	84 3f       	cpi	r24, 0xF4	; 244
     872:	91 40       	sbci	r25, 0x01	; 1
     874:	c0 f0       	brcs	.+48     	; 0x8a6 <Menu_Tick+0x314>
     876:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     87a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     87e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     882:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     886:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     88a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     88e:	6f e0       	ldi	r22, 0x0F	; 15
     890:	71 e0       	ldi	r23, 0x01	; 1
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	93 dd       	rcall	.-1242   	; 0x3bc <LCD_DisplayString>
     896:	81 e2       	ldi	r24, 0x21	; 33
     898:	71 dd       	rcall	.-1310   	; 0x37c <LCD_Cursor>
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     8a0:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     8a4:	58 c3       	rjmp	.+1712   	; 0xf56 <Menu_Tick+0x9c4>
     8a6:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     8aa:	81 30       	cpi	r24, 0x01	; 1
     8ac:	a9 f4       	brne	.+42     	; 0x8d8 <Menu_Tick+0x346>
     8ae:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     8b2:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     8b6:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     8ba:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     8be:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     8c2:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     8c6:	68 e9       	ldi	r22, 0x98	; 152
     8c8:	71 e0       	ldi	r23, 0x01	; 1
     8ca:	78 dd       	rcall	.-1296   	; 0x3bc <LCD_DisplayString>
     8cc:	81 e2       	ldi	r24, 0x21	; 33
     8ce:	56 dd       	rcall	.-1364   	; 0x37c <LCD_Cursor>
     8d0:	85 e0       	ldi	r24, 0x05	; 5
     8d2:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     8d6:	3f c3       	rjmp	.+1662   	; 0xf56 <Menu_Tick+0x9c4>
     8d8:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     8dc:	81 30       	cpi	r24, 0x01	; 1
     8de:	f9 f4       	brne	.+62     	; 0x91e <Menu_Tick+0x38c>
     8e0:	10 92 d3 08 	sts	0x08D3, r1	; 0x8008d3 <bark_delay>
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <eeprom_write_byte>
     8ee:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     8f2:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     8f6:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     8fa:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     8fe:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     902:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     906:	6f e0       	ldi	r22, 0x0F	; 15
     908:	71 e0       	ldi	r23, 0x01	; 1
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	57 dd       	rcall	.-1362   	; 0x3bc <LCD_DisplayString>
     90e:	81 e2       	ldi	r24, 0x21	; 33
     910:	35 dd       	rcall	.-1430   	; 0x37c <LCD_Cursor>
     912:	82 e0       	ldi	r24, 0x02	; 2
     914:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     918:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     91c:	1c c3       	rjmp	.+1592   	; 0xf56 <Menu_Tick+0x9c4>
     91e:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <Button_B>
     922:	81 30       	cpi	r24, 0x01	; 1
     924:	09 f0       	breq	.+2      	; 0x928 <Menu_Tick+0x396>
     926:	17 c3       	rjmp	.+1582   	; 0xf56 <Menu_Tick+0x9c4>
     928:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     92c:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     930:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     934:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     938:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     93c:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     940:	67 e4       	ldi	r22, 0x47	; 71
     942:	71 e0       	ldi	r23, 0x01	; 1
     944:	3b dd       	rcall	.-1418   	; 0x3bc <LCD_DisplayString>
     946:	81 e2       	ldi	r24, 0x21	; 33
     948:	19 dd       	rcall	.-1486   	; 0x37c <LCD_Cursor>
     94a:	82 e0       	ldi	r24, 0x02	; 2
     94c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     950:	83 e0       	ldi	r24, 0x03	; 3
     952:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     956:	ff c2       	rjmp	.+1534   	; 0xf56 <Menu_Tick+0x9c4>
     958:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     95c:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     960:	84 3f       	cpi	r24, 0xF4	; 244
     962:	91 40       	sbci	r25, 0x01	; 1
     964:	c0 f0       	brcs	.+48     	; 0x996 <Menu_Tick+0x404>
     966:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     96a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     96e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     972:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     976:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     97a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     97e:	6f e0       	ldi	r22, 0x0F	; 15
     980:	71 e0       	ldi	r23, 0x01	; 1
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	1b dd       	rcall	.-1482   	; 0x3bc <LCD_DisplayString>
     986:	81 e2       	ldi	r24, 0x21	; 33
     988:	f9 dc       	rcall	.-1550   	; 0x37c <LCD_Cursor>
     98a:	82 e0       	ldi	r24, 0x02	; 2
     98c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     990:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     994:	e0 c2       	rjmp	.+1472   	; 0xf56 <Menu_Tick+0x9c4>
     996:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     99a:	81 30       	cpi	r24, 0x01	; 1
     99c:	c1 f4       	brne	.+48     	; 0x9ce <Menu_Tick+0x43c>
     99e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     9a2:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     9a6:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     9aa:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     9ae:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     9b2:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     9b6:	69 eb       	ldi	r22, 0xB9	; 185
     9b8:	71 e0       	ldi	r23, 0x01	; 1
     9ba:	00 dd       	rcall	.-1536   	; 0x3bc <LCD_DisplayString>
     9bc:	81 e2       	ldi	r24, 0x21	; 33
     9be:	de dc       	rcall	.-1604   	; 0x37c <LCD_Cursor>
     9c0:	82 e0       	ldi	r24, 0x02	; 2
     9c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9c6:	86 e0       	ldi	r24, 0x06	; 6
     9c8:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     9cc:	c4 c2       	rjmp	.+1416   	; 0xf56 <Menu_Tick+0x9c4>
     9ce:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     9d2:	81 30       	cpi	r24, 0x01	; 1
     9d4:	c1 f4       	brne	.+48     	; 0xa06 <Menu_Tick+0x474>
     9d6:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     9da:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     9de:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     9e2:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     9e6:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     9ea:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     9ee:	67 e7       	ldi	r22, 0x77	; 119
     9f0:	71 e0       	ldi	r23, 0x01	; 1
     9f2:	e4 dc       	rcall	.-1592   	; 0x3bc <LCD_DisplayString>
     9f4:	81 e2       	ldi	r24, 0x21	; 33
     9f6:	c2 dc       	rcall	.-1660   	; 0x37c <LCD_Cursor>
     9f8:	82 e0       	ldi	r24, 0x02	; 2
     9fa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9fe:	84 e0       	ldi	r24, 0x04	; 4
     a00:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     a04:	a8 c2       	rjmp	.+1360   	; 0xf56 <Menu_Tick+0x9c4>
     a06:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     a0a:	81 30       	cpi	r24, 0x01	; 1
     a0c:	f9 f4       	brne	.+62     	; 0xa4c <Menu_Tick+0x4ba>
     a0e:	80 93 d3 08 	sts	0x08D3, r24	; 0x8008d3 <bark_delay>
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <eeprom_write_byte>
     a1c:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     a20:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     a24:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     a28:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     a2c:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     a30:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     a34:	6f e0       	ldi	r22, 0x0F	; 15
     a36:	71 e0       	ldi	r23, 0x01	; 1
     a38:	81 e0       	ldi	r24, 0x01	; 1
     a3a:	c0 dc       	rcall	.-1664   	; 0x3bc <LCD_DisplayString>
     a3c:	81 e2       	ldi	r24, 0x21	; 33
     a3e:	9e dc       	rcall	.-1732   	; 0x37c <LCD_Cursor>
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a46:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     a4a:	85 c2       	rjmp	.+1290   	; 0xf56 <Menu_Tick+0x9c4>
     a4c:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <Button_B>
     a50:	81 30       	cpi	r24, 0x01	; 1
     a52:	09 f0       	breq	.+2      	; 0xa56 <Menu_Tick+0x4c4>
     a54:	80 c2       	rjmp	.+1280   	; 0xf56 <Menu_Tick+0x9c4>
     a56:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     a5a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     a5e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     a62:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     a66:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     a6a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     a6e:	67 e4       	ldi	r22, 0x47	; 71
     a70:	71 e0       	ldi	r23, 0x01	; 1
     a72:	a4 dc       	rcall	.-1720   	; 0x3bc <LCD_DisplayString>
     a74:	81 e2       	ldi	r24, 0x21	; 33
     a76:	82 dc       	rcall	.-1788   	; 0x37c <LCD_Cursor>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     a84:	68 c2       	rjmp	.+1232   	; 0xf56 <Menu_Tick+0x9c4>
     a86:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     a8a:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     a8e:	84 3f       	cpi	r24, 0xF4	; 244
     a90:	91 40       	sbci	r25, 0x01	; 1
     a92:	c0 f0       	brcs	.+48     	; 0xac4 <Menu_Tick+0x532>
     a94:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     a98:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     a9c:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     aa0:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     aa4:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     aa8:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     aac:	6f e0       	ldi	r22, 0x0F	; 15
     aae:	71 e0       	ldi	r23, 0x01	; 1
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	84 dc       	rcall	.-1784   	; 0x3bc <LCD_DisplayString>
     ab4:	81 e2       	ldi	r24, 0x21	; 33
     ab6:	62 dc       	rcall	.-1852   	; 0x37c <LCD_Cursor>
     ab8:	82 e0       	ldi	r24, 0x02	; 2
     aba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     abe:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     ac2:	49 c2       	rjmp	.+1170   	; 0xf56 <Menu_Tick+0x9c4>
     ac4:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     ac8:	81 30       	cpi	r24, 0x01	; 1
     aca:	a9 f4       	brne	.+42     	; 0xaf6 <Menu_Tick+0x564>
     acc:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     ad0:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     ad4:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     ad8:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     adc:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     ae0:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     ae4:	68 e9       	ldi	r22, 0x98	; 152
     ae6:	71 e0       	ldi	r23, 0x01	; 1
     ae8:	69 dc       	rcall	.-1838   	; 0x3bc <LCD_DisplayString>
     aea:	81 e2       	ldi	r24, 0x21	; 33
     aec:	47 dc       	rcall	.-1906   	; 0x37c <LCD_Cursor>
     aee:	85 e0       	ldi	r24, 0x05	; 5
     af0:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     af4:	30 c2       	rjmp	.+1120   	; 0xf56 <Menu_Tick+0x9c4>
     af6:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     afa:	81 30       	cpi	r24, 0x01	; 1
     afc:	f9 f4       	brne	.+62     	; 0xb3c <Menu_Tick+0x5aa>
     afe:	c2 e0       	ldi	r28, 0x02	; 2
     b00:	c0 93 d3 08 	sts	0x08D3, r28	; 0x8008d3 <bark_delay>
     b04:	62 e0       	ldi	r22, 0x02	; 2
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <eeprom_write_byte>
     b0e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     b12:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     b16:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     b1a:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     b1e:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     b22:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     b26:	6f e0       	ldi	r22, 0x0F	; 15
     b28:	71 e0       	ldi	r23, 0x01	; 1
     b2a:	81 e0       	ldi	r24, 0x01	; 1
     b2c:	47 dc       	rcall	.-1906   	; 0x3bc <LCD_DisplayString>
     b2e:	81 e2       	ldi	r24, 0x21	; 33
     b30:	25 dc       	rcall	.-1974   	; 0x37c <LCD_Cursor>
     b32:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     b36:	c0 93 3b 09 	sts	0x093B, r28	; 0x80093b <menu_state>
     b3a:	0d c2       	rjmp	.+1050   	; 0xf56 <Menu_Tick+0x9c4>
     b3c:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <Button_B>
     b40:	81 30       	cpi	r24, 0x01	; 1
     b42:	09 f0       	breq	.+2      	; 0xb46 <Menu_Tick+0x5b4>
     b44:	08 c2       	rjmp	.+1040   	; 0xf56 <Menu_Tick+0x9c4>
     b46:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     b4a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     b4e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     b52:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     b56:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     b5a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     b5e:	67 e4       	ldi	r22, 0x47	; 71
     b60:	71 e0       	ldi	r23, 0x01	; 1
     b62:	2c dc       	rcall	.-1960   	; 0x3bc <LCD_DisplayString>
     b64:	81 e2       	ldi	r24, 0x21	; 33
     b66:	0a dc       	rcall	.-2028   	; 0x37c <LCD_Cursor>
     b68:	82 e0       	ldi	r24, 0x02	; 2
     b6a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     b6e:	83 e0       	ldi	r24, 0x03	; 3
     b70:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     b74:	f0 c1       	rjmp	.+992    	; 0xf56 <Menu_Tick+0x9c4>
     b76:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     b7a:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     b7e:	84 3f       	cpi	r24, 0xF4	; 244
     b80:	91 40       	sbci	r25, 0x01	; 1
     b82:	b0 f0       	brcs	.+44     	; 0xbb0 <Menu_Tick+0x61e>
     b84:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     b88:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     b8c:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     b90:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     b94:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     b98:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     b9c:	6f e0       	ldi	r22, 0x0F	; 15
     b9e:	71 e0       	ldi	r23, 0x01	; 1
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	0c dc       	rcall	.-2024   	; 0x3bc <LCD_DisplayString>
     ba4:	81 e2       	ldi	r24, 0x21	; 33
     ba6:	ea db       	rcall	.-2092   	; 0x37c <LCD_Cursor>
     ba8:	82 e0       	ldi	r24, 0x02	; 2
     baa:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     bae:	d3 c1       	rjmp	.+934    	; 0xf56 <Menu_Tick+0x9c4>
     bb0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	49 f4       	brne	.+18     	; 0xbca <Menu_Tick+0x638>
     bb8:	82 e0       	ldi	r24, 0x02	; 2
     bba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     bbe:	81 e0       	ldi	r24, 0x01	; 1
     bc0:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <ARM_DISARM>
     bc4:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     bc8:	c6 c1       	rjmp	.+908    	; 0xf56 <Menu_Tick+0x9c4>
     bca:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     bce:	81 30       	cpi	r24, 0x01	; 1
     bd0:	31 f4       	brne	.+12     	; 0xbde <Menu_Tick+0x64c>
     bd2:	82 e0       	ldi	r24, 0x02	; 2
     bd4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     bd8:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     bdc:	bc c1       	rjmp	.+888    	; 0xf56 <Menu_Tick+0x9c4>
     bde:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     be2:	81 30       	cpi	r24, 0x01	; 1
     be4:	09 f0       	breq	.+2      	; 0xbe8 <Menu_Tick+0x656>
     be6:	47 c0       	rjmp	.+142    	; 0xc76 <Menu_Tick+0x6e4>
     be8:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     bec:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     bf0:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     bf4:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     bf8:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     bfc:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     c00:	80 91 d4 08 	lds	r24, 0x08D4	; 0x8008d4 <bark_setting>
     c04:	81 11       	cpse	r24, r1
     c06:	1a c0       	rjmp	.+52     	; 0xc3c <Menu_Tick+0x6aa>
     c08:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
     c0c:	81 11       	cpse	r24, r1
     c0e:	07 c0       	rjmp	.+14     	; 0xc1e <Menu_Tick+0x68c>
     c10:	6a ed       	ldi	r22, 0xDA	; 218
     c12:	71 e0       	ldi	r23, 0x01	; 1
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	d2 db       	rcall	.-2140   	; 0x3bc <LCD_DisplayString>
     c18:	81 e2       	ldi	r24, 0x21	; 33
     c1a:	b0 db       	rcall	.-2208   	; 0x37c <LCD_Cursor>
     c1c:	28 c0       	rjmp	.+80     	; 0xc6e <Menu_Tick+0x6dc>
     c1e:	81 30       	cpi	r24, 0x01	; 1
     c20:	31 f4       	brne	.+12     	; 0xc2e <Menu_Tick+0x69c>
     c22:	67 ef       	ldi	r22, 0xF7	; 247
     c24:	71 e0       	ldi	r23, 0x01	; 1
     c26:	ca db       	rcall	.-2156   	; 0x3bc <LCD_DisplayString>
     c28:	81 e2       	ldi	r24, 0x21	; 33
     c2a:	a8 db       	rcall	.-2224   	; 0x37c <LCD_Cursor>
     c2c:	20 c0       	rjmp	.+64     	; 0xc6e <Menu_Tick+0x6dc>
     c2e:	64 e1       	ldi	r22, 0x14	; 20
     c30:	72 e0       	ldi	r23, 0x02	; 2
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	c3 db       	rcall	.-2170   	; 0x3bc <LCD_DisplayString>
     c36:	81 e2       	ldi	r24, 0x21	; 33
     c38:	a1 db       	rcall	.-2238   	; 0x37c <LCD_Cursor>
     c3a:	19 c0       	rjmp	.+50     	; 0xc6e <Menu_Tick+0x6dc>
     c3c:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
     c40:	81 11       	cpse	r24, r1
     c42:	07 c0       	rjmp	.+14     	; 0xc52 <Menu_Tick+0x6c0>
     c44:	61 e3       	ldi	r22, 0x31	; 49
     c46:	72 e0       	ldi	r23, 0x02	; 2
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	b8 db       	rcall	.-2192   	; 0x3bc <LCD_DisplayString>
     c4c:	81 e2       	ldi	r24, 0x21	; 33
     c4e:	96 db       	rcall	.-2260   	; 0x37c <LCD_Cursor>
     c50:	0e c0       	rjmp	.+28     	; 0xc6e <Menu_Tick+0x6dc>
     c52:	81 30       	cpi	r24, 0x01	; 1
     c54:	31 f4       	brne	.+12     	; 0xc62 <Menu_Tick+0x6d0>
     c56:	6e e4       	ldi	r22, 0x4E	; 78
     c58:	72 e0       	ldi	r23, 0x02	; 2
     c5a:	b0 db       	rcall	.-2208   	; 0x3bc <LCD_DisplayString>
     c5c:	81 e2       	ldi	r24, 0x21	; 33
     c5e:	8e db       	rcall	.-2276   	; 0x37c <LCD_Cursor>
     c60:	06 c0       	rjmp	.+12     	; 0xc6e <Menu_Tick+0x6dc>
     c62:	6b e6       	ldi	r22, 0x6B	; 107
     c64:	72 e0       	ldi	r23, 0x02	; 2
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	a9 db       	rcall	.-2222   	; 0x3bc <LCD_DisplayString>
     c6a:	81 e2       	ldi	r24, 0x21	; 33
     c6c:	87 db       	rcall	.-2290   	; 0x37c <LCD_Cursor>
     c6e:	8a e0       	ldi	r24, 0x0A	; 10
     c70:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     c74:	70 c1       	rjmp	.+736    	; 0xf56 <Menu_Tick+0x9c4>
     c76:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     c7a:	81 30       	cpi	r24, 0x01	; 1
     c7c:	a9 f4       	brne	.+42     	; 0xca8 <Menu_Tick+0x716>
     c7e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     c82:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     c86:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     c8a:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     c8e:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     c92:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     c96:	67 e4       	ldi	r22, 0x47	; 71
     c98:	71 e0       	ldi	r23, 0x01	; 1
     c9a:	90 db       	rcall	.-2272   	; 0x3bc <LCD_DisplayString>
     c9c:	81 e2       	ldi	r24, 0x21	; 33
     c9e:	6e db       	rcall	.-2340   	; 0x37c <LCD_Cursor>
     ca0:	83 e0       	ldi	r24, 0x03	; 3
     ca2:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     ca6:	57 c1       	rjmp	.+686    	; 0xf56 <Menu_Tick+0x9c4>
     ca8:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     cac:	81 30       	cpi	r24, 0x01	; 1
     cae:	09 f0       	breq	.+2      	; 0xcb2 <Menu_Tick+0x720>
     cb0:	52 c1       	rjmp	.+676    	; 0xf56 <Menu_Tick+0x9c4>
     cb2:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     cb6:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     cba:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     cbe:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     cc2:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     cc6:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     cca:	68 e8       	ldi	r22, 0x88	; 136
     ccc:	72 e0       	ldi	r23, 0x02	; 2
     cce:	76 db       	rcall	.-2324   	; 0x3bc <LCD_DisplayString>
     cd0:	81 e2       	ldi	r24, 0x21	; 33
     cd2:	54 db       	rcall	.-2392   	; 0x37c <LCD_Cursor>
     cd4:	88 e0       	ldi	r24, 0x08	; 8
     cd6:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     cda:	3d c1       	rjmp	.+634    	; 0xf56 <Menu_Tick+0x9c4>
     cdc:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     ce0:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     ce4:	84 3f       	cpi	r24, 0xF4	; 244
     ce6:	91 40       	sbci	r25, 0x01	; 1
     ce8:	c0 f0       	brcs	.+48     	; 0xd1a <Menu_Tick+0x788>
     cea:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     cee:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     cf2:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     cf6:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     cfa:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     cfe:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     d02:	6f e0       	ldi	r22, 0x0F	; 15
     d04:	71 e0       	ldi	r23, 0x01	; 1
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	59 db       	rcall	.-2382   	; 0x3bc <LCD_DisplayString>
     d0a:	81 e2       	ldi	r24, 0x21	; 33
     d0c:	37 db       	rcall	.-2450   	; 0x37c <LCD_Cursor>
     d0e:	82 e0       	ldi	r24, 0x02	; 2
     d10:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     d14:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     d18:	1e c1       	rjmp	.+572    	; 0xf56 <Menu_Tick+0x9c4>
     d1a:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	f1 f4       	brne	.+60     	; 0xd5e <Menu_Tick+0x7cc>
     d22:	10 92 d4 08 	sts	0x08D4, r1	; 0x8008d4 <bark_setting>
     d26:	60 e0       	ldi	r22, 0x00	; 0
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	e3 d7       	rcall	.+4038   	; 0x1cf4 <eeprom_write_byte>
     d2e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     d32:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     d36:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     d3a:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     d3e:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     d42:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     d46:	6f e0       	ldi	r22, 0x0F	; 15
     d48:	71 e0       	ldi	r23, 0x01	; 1
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	37 db       	rcall	.-2450   	; 0x3bc <LCD_DisplayString>
     d4e:	81 e2       	ldi	r24, 0x21	; 33
     d50:	15 db       	rcall	.-2518   	; 0x37c <LCD_Cursor>
     d52:	82 e0       	ldi	r24, 0x02	; 2
     d54:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     d58:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     d5c:	fc c0       	rjmp	.+504    	; 0xf56 <Menu_Tick+0x9c4>
     d5e:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <Button_B>
     d62:	81 30       	cpi	r24, 0x01	; 1
     d64:	c1 f4       	brne	.+48     	; 0xd96 <Menu_Tick+0x804>
     d66:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     d6a:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     d6e:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     d72:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     d76:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     d7a:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     d7e:	6f e5       	ldi	r22, 0x5F	; 95
     d80:	71 e0       	ldi	r23, 0x01	; 1
     d82:	1c db       	rcall	.-2504   	; 0x3bc <LCD_DisplayString>
     d84:	81 e2       	ldi	r24, 0x21	; 33
     d86:	fa da       	rcall	.-2572   	; 0x37c <LCD_Cursor>
     d88:	82 e0       	ldi	r24, 0x02	; 2
     d8a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     d8e:	87 e0       	ldi	r24, 0x07	; 7
     d90:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     d94:	e0 c0       	rjmp	.+448    	; 0xf56 <Menu_Tick+0x9c4>
     d96:	80 91 d9 08 	lds	r24, 0x08D9	; 0x8008d9 <Button_R>
     d9a:	81 30       	cpi	r24, 0x01	; 1
     d9c:	09 f0       	breq	.+2      	; 0xda0 <Menu_Tick+0x80e>
     d9e:	db c0       	rjmp	.+438    	; 0xf56 <Menu_Tick+0x9c4>
     da0:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     da4:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     da8:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     dac:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     db0:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     db4:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     db8:	65 ea       	ldi	r22, 0xA5	; 165
     dba:	72 e0       	ldi	r23, 0x02	; 2
     dbc:	ff da       	rcall	.-2562   	; 0x3bc <LCD_DisplayString>
     dbe:	81 e2       	ldi	r24, 0x21	; 33
     dc0:	dd da       	rcall	.-2630   	; 0x37c <LCD_Cursor>
     dc2:	89 e0       	ldi	r24, 0x09	; 9
     dc4:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     dc8:	c6 c0       	rjmp	.+396    	; 0xf56 <Menu_Tick+0x9c4>
     dca:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     dce:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     dd2:	84 3f       	cpi	r24, 0xF4	; 244
     dd4:	91 40       	sbci	r25, 0x01	; 1
     dd6:	c0 f0       	brcs	.+48     	; 0xe08 <Menu_Tick+0x876>
     dd8:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     ddc:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     de0:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     de4:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     de8:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     dec:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     df0:	6f e0       	ldi	r22, 0x0F	; 15
     df2:	71 e0       	ldi	r23, 0x01	; 1
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	e2 da       	rcall	.-2620   	; 0x3bc <LCD_DisplayString>
     df8:	81 e2       	ldi	r24, 0x21	; 33
     dfa:	c0 da       	rcall	.-2688   	; 0x37c <LCD_Cursor>
     dfc:	82 e0       	ldi	r24, 0x02	; 2
     dfe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     e02:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     e06:	a7 c0       	rjmp	.+334    	; 0xf56 <Menu_Tick+0x9c4>
     e08:	80 91 dc 08 	lds	r24, 0x08DC	; 0x8008dc <Button_A>
     e0c:	81 30       	cpi	r24, 0x01	; 1
     e0e:	f1 f4       	brne	.+60     	; 0xe4c <Menu_Tick+0x8ba>
     e10:	80 93 d4 08 	sts	0x08D4, r24	; 0x8008d4 <bark_setting>
     e14:	61 e0       	ldi	r22, 0x01	; 1
     e16:	80 e0       	ldi	r24, 0x00	; 0
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	6c d7       	rcall	.+3800   	; 0x1cf4 <eeprom_write_byte>
     e1c:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     e20:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     e24:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     e28:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     e2c:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     e30:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     e34:	6f e0       	ldi	r22, 0x0F	; 15
     e36:	71 e0       	ldi	r23, 0x01	; 1
     e38:	81 e0       	ldi	r24, 0x01	; 1
     e3a:	c0 da       	rcall	.-2688   	; 0x3bc <LCD_DisplayString>
     e3c:	81 e2       	ldi	r24, 0x21	; 33
     e3e:	9e da       	rcall	.-2756   	; 0x37c <LCD_Cursor>
     e40:	82 e0       	ldi	r24, 0x02	; 2
     e42:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     e46:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     e4a:	85 c0       	rjmp	.+266    	; 0xf56 <Menu_Tick+0x9c4>
     e4c:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <Button_B>
     e50:	81 30       	cpi	r24, 0x01	; 1
     e52:	c1 f4       	brne	.+48     	; 0xe84 <Menu_Tick+0x8f2>
     e54:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     e58:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     e5c:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     e60:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     e64:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     e68:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     e6c:	6f e5       	ldi	r22, 0x5F	; 95
     e6e:	71 e0       	ldi	r23, 0x01	; 1
     e70:	a5 da       	rcall	.-2742   	; 0x3bc <LCD_DisplayString>
     e72:	81 e2       	ldi	r24, 0x21	; 33
     e74:	83 da       	rcall	.-2810   	; 0x37c <LCD_Cursor>
     e76:	82 e0       	ldi	r24, 0x02	; 2
     e78:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     e7c:	87 e0       	ldi	r24, 0x07	; 7
     e7e:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     e82:	69 c0       	rjmp	.+210    	; 0xf56 <Menu_Tick+0x9c4>
     e84:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     e88:	81 30       	cpi	r24, 0x01	; 1
     e8a:	09 f0       	breq	.+2      	; 0xe8e <Menu_Tick+0x8fc>
     e8c:	64 c0       	rjmp	.+200    	; 0xf56 <Menu_Tick+0x9c4>
     e8e:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     e92:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     e96:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     e9a:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     e9e:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     ea2:	68 e8       	ldi	r22, 0x88	; 136
     ea4:	72 e0       	ldi	r23, 0x02	; 2
     ea6:	8a da       	rcall	.-2796   	; 0x3bc <LCD_DisplayString>
     ea8:	81 e2       	ldi	r24, 0x21	; 33
     eaa:	68 da       	rcall	.-2864   	; 0x37c <LCD_Cursor>
     eac:	88 e0       	ldi	r24, 0x08	; 8
     eae:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     eb2:	51 c0       	rjmp	.+162    	; 0xf56 <Menu_Tick+0x9c4>
     eb4:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <counter>
     eb8:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <counter+0x1>
     ebc:	84 3f       	cpi	r24, 0xF4	; 244
     ebe:	91 40       	sbci	r25, 0x01	; 1
     ec0:	c0 f0       	brcs	.+48     	; 0xef2 <Menu_Tick+0x960>
     ec2:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     ec6:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     eca:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     ece:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     ed2:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     ed6:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     eda:	6f e0       	ldi	r22, 0x0F	; 15
     edc:	71 e0       	ldi	r23, 0x01	; 1
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	6d da       	rcall	.-2854   	; 0x3bc <LCD_DisplayString>
     ee2:	81 e2       	ldi	r24, 0x21	; 33
     ee4:	4b da       	rcall	.-2922   	; 0x37c <LCD_Cursor>
     ee6:	82 e0       	ldi	r24, 0x02	; 2
     ee8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     eec:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     ef0:	32 c0       	rjmp	.+100    	; 0xf56 <Menu_Tick+0x9c4>
     ef2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ef6:	81 30       	cpi	r24, 0x01	; 1
     ef8:	49 f4       	brne	.+18     	; 0xf0c <Menu_Tick+0x97a>
     efa:	82 e0       	ldi	r24, 0x02	; 2
     efc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <ARM_DISARM>
     f06:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     f0a:	25 c0       	rjmp	.+74     	; 0xf56 <Menu_Tick+0x9c4>
     f0c:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     f10:	81 30       	cpi	r24, 0x01	; 1
     f12:	31 f4       	brne	.+12     	; 0xf20 <Menu_Tick+0x98e>
     f14:	82 e0       	ldi	r24, 0x02	; 2
     f16:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     f1a:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     f1e:	1b c0       	rjmp	.+54     	; 0xf56 <Menu_Tick+0x9c4>
     f20:	80 91 da 08 	lds	r24, 0x08DA	; 0x8008da <Button_L>
     f24:	81 30       	cpi	r24, 0x01	; 1
     f26:	b9 f4       	brne	.+46     	; 0xf56 <Menu_Tick+0x9c4>
     f28:	10 92 d6 08 	sts	0x08D6, r1	; 0x8008d6 <counter+0x1>
     f2c:	10 92 d5 08 	sts	0x08D5, r1	; 0x8008d5 <counter>
     f30:	10 92 dc 08 	sts	0x08DC, r1	; 0x8008dc <Button_A>
     f34:	10 92 db 08 	sts	0x08DB, r1	; 0x8008db <Button_B>
     f38:	10 92 da 08 	sts	0x08DA, r1	; 0x8008da <Button_L>
     f3c:	10 92 d9 08 	sts	0x08D9, r1	; 0x8008d9 <Button_R>
     f40:	6f e5       	ldi	r22, 0x5F	; 95
     f42:	71 e0       	ldi	r23, 0x01	; 1
     f44:	3b da       	rcall	.-2954   	; 0x3bc <LCD_DisplayString>
     f46:	81 e2       	ldi	r24, 0x21	; 33
     f48:	19 da       	rcall	.-3022   	; 0x37c <LCD_Cursor>
     f4a:	87 e0       	ldi	r24, 0x07	; 7
     f4c:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <menu_state>
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <Menu_Tick+0x9c4>
     f52:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     f56:	cf 91       	pop	r28
     f58:	08 95       	ret

00000f5a <MENUSecTask>:
     f5a:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <menu_state>
     f5e:	19 db       	rcall	.-2510   	; 0x592 <Menu_Tick>
     f60:	8a e0       	ldi	r24, 0x0A	; 10
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	df d5       	rcall	.+3006   	; 0x1b24 <vTaskDelay>
     f66:	fb cf       	rjmp	.-10     	; 0xf5e <MENUSecTask+0x4>

00000f68 <StartMENUPulse>:
     f68:	af 92       	push	r10
     f6a:	bf 92       	push	r11
     f6c:	cf 92       	push	r12
     f6e:	df 92       	push	r13
     f70:	ef 92       	push	r14
     f72:	ff 92       	push	r15
     f74:	0f 93       	push	r16
     f76:	a1 2c       	mov	r10, r1
     f78:	b1 2c       	mov	r11, r1
     f7a:	c1 2c       	mov	r12, r1
     f7c:	d1 2c       	mov	r13, r1
     f7e:	e1 2c       	mov	r14, r1
     f80:	f1 2c       	mov	r15, r1
     f82:	08 2f       	mov	r16, r24
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	45 e5       	ldi	r20, 0x55	; 85
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	62 ec       	ldi	r22, 0xC2	; 194
     f8e:	72 e0       	ldi	r23, 0x02	; 2
     f90:	8d ea       	ldi	r24, 0xAD	; 173
     f92:	97 e0       	ldi	r25, 0x07	; 7
     f94:	4f d3       	rcall	.+1694   	; 0x1634 <xTaskGenericCreate>
     f96:	0f 91       	pop	r16
     f98:	ff 90       	pop	r15
     f9a:	ef 90       	pop	r14
     f9c:	df 90       	pop	r13
     f9e:	cf 90       	pop	r12
     fa0:	bf 90       	pop	r11
     fa2:	af 90       	pop	r10
     fa4:	08 95       	ret

00000fa6 <Trans_Tick>:
     fa6:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <trans_state>
     faa:	88 23       	and	r24, r24
     fac:	21 f0       	breq	.+8      	; 0xfb6 <Trans_Tick+0x10>
     fae:	81 30       	cpi	r24, 0x01	; 1
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <Trans_Tick+0xe>
     fb2:	b4 c0       	rjmp	.+360    	; 0x111c <Trans_Tick+0x176>
     fb4:	b7 c0       	rjmp	.+366    	; 0x1124 <Trans_Tick+0x17e>
     fb6:	80 91 dd 08 	lds	r24, 0x08DD	; 0x8008dd <ARM_DISARM>
     fba:	81 11       	cpse	r24, r1
     fbc:	57 c0       	rjmp	.+174    	; 0x106c <Trans_Tick+0xc6>
     fbe:	80 91 d4 08 	lds	r24, 0x08D4	; 0x8008d4 <bark_setting>
     fc2:	81 11       	cpse	r24, r1
     fc4:	29 c0       	rjmp	.+82     	; 0x1018 <Trans_Tick+0x72>
     fc6:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
     fca:	81 11       	cpse	r24, r1
     fcc:	0b c0       	rjmp	.+22     	; 0xfe4 <Trans_Tick+0x3e>
     fce:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
     fd2:	81 11       	cpse	r24, r1
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <Trans_Tick+0x36>
     fd6:	10 92 d7 08 	sts	0x08D7, r1	; 0x8008d7 <data_to_send>
     fda:	ab c0       	rjmp	.+342    	; 0x1132 <Trans_Tick+0x18c>
     fdc:	80 e1       	ldi	r24, 0x10	; 16
     fde:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
     fe2:	a7 c0       	rjmp	.+334    	; 0x1132 <Trans_Tick+0x18c>
     fe4:	81 30       	cpi	r24, 0x01	; 1
     fe6:	61 f4       	brne	.+24     	; 0x1000 <Trans_Tick+0x5a>
     fe8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
     fec:	81 11       	cpse	r24, r1
     fee:	04 c0       	rjmp	.+8      	; 0xff8 <Trans_Tick+0x52>
     ff0:	82 e0       	ldi	r24, 0x02	; 2
     ff2:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
     ff6:	9d c0       	rjmp	.+314    	; 0x1132 <Trans_Tick+0x18c>
     ff8:	82 e1       	ldi	r24, 0x12	; 18
     ffa:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
     ffe:	99 c0       	rjmp	.+306    	; 0x1132 <Trans_Tick+0x18c>
    1000:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1004:	81 11       	cpse	r24, r1
    1006:	04 c0       	rjmp	.+8      	; 0x1010 <Trans_Tick+0x6a>
    1008:	84 e0       	ldi	r24, 0x04	; 4
    100a:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    100e:	91 c0       	rjmp	.+290    	; 0x1132 <Trans_Tick+0x18c>
    1010:	84 e1       	ldi	r24, 0x14	; 20
    1012:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1016:	8d c0       	rjmp	.+282    	; 0x1132 <Trans_Tick+0x18c>
    1018:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
    101c:	81 11       	cpse	r24, r1
    101e:	0c c0       	rjmp	.+24     	; 0x1038 <Trans_Tick+0x92>
    1020:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1024:	81 11       	cpse	r24, r1
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <Trans_Tick+0x8a>
    1028:	88 e0       	ldi	r24, 0x08	; 8
    102a:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    102e:	81 c0       	rjmp	.+258    	; 0x1132 <Trans_Tick+0x18c>
    1030:	88 e1       	ldi	r24, 0x18	; 24
    1032:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1036:	7d c0       	rjmp	.+250    	; 0x1132 <Trans_Tick+0x18c>
    1038:	81 30       	cpi	r24, 0x01	; 1
    103a:	61 f4       	brne	.+24     	; 0x1054 <Trans_Tick+0xae>
    103c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1040:	81 11       	cpse	r24, r1
    1042:	04 c0       	rjmp	.+8      	; 0x104c <Trans_Tick+0xa6>
    1044:	8a e0       	ldi	r24, 0x0A	; 10
    1046:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    104a:	73 c0       	rjmp	.+230    	; 0x1132 <Trans_Tick+0x18c>
    104c:	8a e1       	ldi	r24, 0x1A	; 26
    104e:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1052:	6f c0       	rjmp	.+222    	; 0x1132 <Trans_Tick+0x18c>
    1054:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1058:	81 11       	cpse	r24, r1
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <Trans_Tick+0xbe>
    105c:	8c e0       	ldi	r24, 0x0C	; 12
    105e:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1062:	67 c0       	rjmp	.+206    	; 0x1132 <Trans_Tick+0x18c>
    1064:	8c e1       	ldi	r24, 0x1C	; 28
    1066:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    106a:	63 c0       	rjmp	.+198    	; 0x1132 <Trans_Tick+0x18c>
    106c:	80 91 d4 08 	lds	r24, 0x08D4	; 0x8008d4 <bark_setting>
    1070:	81 11       	cpse	r24, r1
    1072:	2a c0       	rjmp	.+84     	; 0x10c8 <Trans_Tick+0x122>
    1074:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
    1078:	81 11       	cpse	r24, r1
    107a:	0c c0       	rjmp	.+24     	; 0x1094 <Trans_Tick+0xee>
    107c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1080:	81 11       	cpse	r24, r1
    1082:	04 c0       	rjmp	.+8      	; 0x108c <Trans_Tick+0xe6>
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    108a:	53 c0       	rjmp	.+166    	; 0x1132 <Trans_Tick+0x18c>
    108c:	81 e8       	ldi	r24, 0x81	; 129
    108e:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1092:	4f c0       	rjmp	.+158    	; 0x1132 <Trans_Tick+0x18c>
    1094:	81 30       	cpi	r24, 0x01	; 1
    1096:	61 f4       	brne	.+24     	; 0x10b0 <Trans_Tick+0x10a>
    1098:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    109c:	81 11       	cpse	r24, r1
    109e:	04 c0       	rjmp	.+8      	; 0x10a8 <Trans_Tick+0x102>
    10a0:	83 e0       	ldi	r24, 0x03	; 3
    10a2:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10a6:	45 c0       	rjmp	.+138    	; 0x1132 <Trans_Tick+0x18c>
    10a8:	83 e8       	ldi	r24, 0x83	; 131
    10aa:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10ae:	41 c0       	rjmp	.+130    	; 0x1132 <Trans_Tick+0x18c>
    10b0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    10b4:	81 11       	cpse	r24, r1
    10b6:	04 c0       	rjmp	.+8      	; 0x10c0 <Trans_Tick+0x11a>
    10b8:	85 e0       	ldi	r24, 0x05	; 5
    10ba:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10be:	39 c0       	rjmp	.+114    	; 0x1132 <Trans_Tick+0x18c>
    10c0:	85 e8       	ldi	r24, 0x85	; 133
    10c2:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10c6:	35 c0       	rjmp	.+106    	; 0x1132 <Trans_Tick+0x18c>
    10c8:	80 91 d3 08 	lds	r24, 0x08D3	; 0x8008d3 <bark_delay>
    10cc:	81 11       	cpse	r24, r1
    10ce:	0c c0       	rjmp	.+24     	; 0x10e8 <Trans_Tick+0x142>
    10d0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    10d4:	81 11       	cpse	r24, r1
    10d6:	04 c0       	rjmp	.+8      	; 0x10e0 <Trans_Tick+0x13a>
    10d8:	89 e0       	ldi	r24, 0x09	; 9
    10da:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10de:	29 c0       	rjmp	.+82     	; 0x1132 <Trans_Tick+0x18c>
    10e0:	89 e8       	ldi	r24, 0x89	; 137
    10e2:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10e6:	25 c0       	rjmp	.+74     	; 0x1132 <Trans_Tick+0x18c>
    10e8:	81 30       	cpi	r24, 0x01	; 1
    10ea:	61 f4       	brne	.+24     	; 0x1104 <Trans_Tick+0x15e>
    10ec:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    10f0:	81 11       	cpse	r24, r1
    10f2:	04 c0       	rjmp	.+8      	; 0x10fc <Trans_Tick+0x156>
    10f4:	8b e0       	ldi	r24, 0x0B	; 11
    10f6:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    10fa:	1b c0       	rjmp	.+54     	; 0x1132 <Trans_Tick+0x18c>
    10fc:	8b e8       	ldi	r24, 0x8B	; 139
    10fe:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1102:	17 c0       	rjmp	.+46     	; 0x1132 <Trans_Tick+0x18c>
    1104:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dog_head_direction>
    1108:	81 11       	cpse	r24, r1
    110a:	04 c0       	rjmp	.+8      	; 0x1114 <Trans_Tick+0x16e>
    110c:	8d e0       	ldi	r24, 0x0D	; 13
    110e:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    1112:	0f c0       	rjmp	.+30     	; 0x1132 <Trans_Tick+0x18c>
    1114:	8d e8       	ldi	r24, 0x8D	; 141
    1116:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <data_to_send>
    111a:	0b c0       	rjmp	.+22     	; 0x1132 <Trans_Tick+0x18c>
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	80 91 d7 08 	lds	r24, 0x08D7	; 0x8008d7 <data_to_send>
    1122:	e9 d8       	rcall	.-3630   	; 0x2f6 <USART_Send>
    1124:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <trans_state>
    1128:	88 23       	and	r24, r24
    112a:	19 f0       	breq	.+6      	; 0x1132 <Trans_Tick+0x18c>
    112c:	81 30       	cpi	r24, 0x01	; 1
    112e:	49 f0       	breq	.+18     	; 0x1142 <Trans_Tick+0x19c>
    1130:	0f c0       	rjmp	.+30     	; 0x1150 <Trans_Tick+0x1aa>
    1132:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1136:	85 ff       	sbrs	r24, 5
    1138:	0d c0       	rjmp	.+26     	; 0x1154 <Trans_Tick+0x1ae>
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <trans_state>
    1140:	08 95       	ret
    1142:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1146:	86 ff       	sbrs	r24, 6
    1148:	05 c0       	rjmp	.+10     	; 0x1154 <Trans_Tick+0x1ae>
    114a:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <trans_state>
    114e:	08 95       	ret
    1150:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <trans_state>
    1154:	08 95       	ret

00001156 <TransSecTask>:
    1156:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <trans_state>
    115a:	25 df       	rcall	.-438    	; 0xfa6 <Trans_Tick>
    115c:	8a e0       	ldi	r24, 0x0A	; 10
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	e1 d4       	rcall	.+2498   	; 0x1b24 <vTaskDelay>
    1162:	fb cf       	rjmp	.-10     	; 0x115a <TransSecTask+0x4>

00001164 <TransSecPulse>:
    1164:	af 92       	push	r10
    1166:	bf 92       	push	r11
    1168:	cf 92       	push	r12
    116a:	df 92       	push	r13
    116c:	ef 92       	push	r14
    116e:	ff 92       	push	r15
    1170:	0f 93       	push	r16
    1172:	a1 2c       	mov	r10, r1
    1174:	b1 2c       	mov	r11, r1
    1176:	c1 2c       	mov	r12, r1
    1178:	d1 2c       	mov	r13, r1
    117a:	e1 2c       	mov	r14, r1
    117c:	f1 2c       	mov	r15, r1
    117e:	08 2f       	mov	r16, r24
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	45 e5       	ldi	r20, 0x55	; 85
    1186:	50 e0       	ldi	r21, 0x00	; 0
    1188:	6e ec       	ldi	r22, 0xCE	; 206
    118a:	72 e0       	ldi	r23, 0x02	; 2
    118c:	8b ea       	ldi	r24, 0xAB	; 171
    118e:	98 e0       	ldi	r25, 0x08	; 8
    1190:	51 d2       	rcall	.+1186   	; 0x1634 <xTaskGenericCreate>
    1192:	0f 91       	pop	r16
    1194:	ff 90       	pop	r15
    1196:	ef 90       	pop	r14
    1198:	df 90       	pop	r13
    119a:	cf 90       	pop	r12
    119c:	bf 90       	pop	r11
    119e:	af 90       	pop	r10
    11a0:	08 95       	ret

000011a2 <Rec_Tick>:
    11a2:	80 91 38 09 	lds	r24, 0x0938	; 0x800938 <rec_state>
    11a6:	81 30       	cpi	r24, 0x01	; 1
    11a8:	31 f4       	brne	.+12     	; 0x11b6 <Rec_Tick+0x14>
    11aa:	80 e0       	ldi	r24, 0x00	; 0
    11ac:	b6 d8       	rcall	.-3732   	; 0x31a <USART_Receive>
    11ae:	80 93 d8 08 	sts	0x08D8, r24	; 0x8008d8 <received_value>
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	83 d8       	rcall	.-3834   	; 0x2bc <USART_Flush>
    11b6:	80 91 38 09 	lds	r24, 0x0938	; 0x800938 <rec_state>
    11ba:	88 23       	and	r24, r24
    11bc:	19 f0       	breq	.+6      	; 0x11c4 <Rec_Tick+0x22>
    11be:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <rec_state>
    11c2:	08 95       	ret
    11c4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    11c8:	88 23       	and	r24, r24
    11ca:	1c f4       	brge	.+6      	; 0x11d2 <Rec_Tick+0x30>
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <rec_state>
    11d2:	08 95       	ret

000011d4 <RecSecTask>:
    11d4:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <rec_state>
    11d8:	e4 df       	rcall	.-56     	; 0x11a2 <Rec_Tick>
    11da:	8a e0       	ldi	r24, 0x0A	; 10
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	a2 d4       	rcall	.+2372   	; 0x1b24 <vTaskDelay>
    11e0:	fb cf       	rjmp	.-10     	; 0x11d8 <RecSecTask+0x4>

000011e2 <RecSecPulse>:
    11e2:	af 92       	push	r10
    11e4:	bf 92       	push	r11
    11e6:	cf 92       	push	r12
    11e8:	df 92       	push	r13
    11ea:	ef 92       	push	r14
    11ec:	ff 92       	push	r15
    11ee:	0f 93       	push	r16
    11f0:	a1 2c       	mov	r10, r1
    11f2:	b1 2c       	mov	r11, r1
    11f4:	c1 2c       	mov	r12, r1
    11f6:	d1 2c       	mov	r13, r1
    11f8:	e1 2c       	mov	r14, r1
    11fa:	f1 2c       	mov	r15, r1
    11fc:	08 2f       	mov	r16, r24
    11fe:	20 e0       	ldi	r18, 0x00	; 0
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	45 e5       	ldi	r20, 0x55	; 85
    1204:	50 e0       	ldi	r21, 0x00	; 0
    1206:	6f ed       	ldi	r22, 0xDF	; 223
    1208:	72 e0       	ldi	r23, 0x02	; 2
    120a:	8a ee       	ldi	r24, 0xEA	; 234
    120c:	98 e0       	ldi	r25, 0x08	; 8
    120e:	12 d2       	rcall	.+1060   	; 0x1634 <xTaskGenericCreate>
    1210:	0f 91       	pop	r16
    1212:	ff 90       	pop	r15
    1214:	ef 90       	pop	r14
    1216:	df 90       	pop	r13
    1218:	cf 90       	pop	r12
    121a:	bf 90       	pop	r11
    121c:	af 90       	pop	r10
    121e:	08 95       	ret

00001220 <Blue_Rec_Tick>:
}

void Blue_Rec_Tick(){
	//Actions
	switch(blue_rec_state){
    1220:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <blue_rec_state>
    1224:	81 30       	cpi	r24, 0x01	; 1
    1226:	99 f4       	brne	.+38     	; 0x124e <Blue_Rec_Tick+0x2e>


		case Blue_Receive_State:
		//get data from bluetooth
		//bluetooth_arm_disarm = USART_Receive(1);
		bluetooth_temp = USART_Receive(1);
    1228:	78 d8       	rcall	.-3856   	; 0x31a <USART_Receive>
    122a:	80 93 d2 08 	sts	0x08D2, r24	; 0x8008d2 <bluetooth_temp>
		if(bluetooth_temp == 0x0F){	//received arm command
    122e:	8f 30       	cpi	r24, 0x0F	; 15
    1230:	21 f4       	brne	.+8      	; 0x123a <Blue_Rec_Tick+0x1a>
			bluetooth_arm_disarm = 1;
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1238:	08 c0       	rjmp	.+16     	; 0x124a <Blue_Rec_Tick+0x2a>
		}
		else if(bluetooth_temp == 0xF0){ //received disarm command
    123a:	80 3f       	cpi	r24, 0xF0	; 240
    123c:	19 f4       	brne	.+6      	; 0x1244 <Blue_Rec_Tick+0x24>
			bluetooth_arm_disarm = 0;
    123e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    1242:	03 c0       	rjmp	.+6      	; 0x124a <Blue_Rec_Tick+0x2a>
		}
		else{
			bluetooth_arm_disarm = 2;  //random or invalid data set to 2
    1244:	82 e0       	ldi	r24, 0x02	; 2
    1246:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}
		
		USART_Flush(1); //flush so flag reset
    124a:	81 e0       	ldi	r24, 0x01	; 1
    124c:	37 d8       	rcall	.-3986   	; 0x2bc <USART_Flush>
		
		default:
		break;
	}
	//Transitions
	switch(blue_rec_state){
    124e:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <blue_rec_state>
    1252:	88 23       	and	r24, r24
    1254:	19 f0       	breq	.+6      	; 0x125c <Blue_Rec_Tick+0x3c>
		}
		break;


		case Blue_Receive_State:
		blue_rec_state = Blue_Rec_Wait; //go back
    1256:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <blue_rec_state>
    125a:	08 95       	ret
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
    125c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
		break;
	}
	//Transitions
	switch(blue_rec_state){
		case Blue_Rec_Wait:
		if(USART_HasReceived(1)){
    1260:	88 23       	and	r24, r24
    1262:	1c f4       	brge	.+6      	; 0x126a <Blue_Rec_Tick+0x4a>
			blue_rec_state = Blue_Receive_State; //if ready go to next state
    1264:	81 e0       	ldi	r24, 0x01	; 1
    1266:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <blue_rec_state>
    126a:	08 95       	ret

0000126c <BlueRecSecTask>:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Bluetooth RECEIVE FSM
enum BLUERECState {Blue_Rec_Wait, Blue_Receive_State } blue_rec_state;

void BLUE_REC_Init(){
	blue_rec_state = Blue_Rec_Wait;
    126c:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <blue_rec_state>
void BlueRecSecTask()
{
	BLUE_REC_Init();
	for(;;)
	{
		Blue_Rec_Tick();
    1270:	d7 df       	rcall	.-82     	; 0x1220 <Blue_Rec_Tick>
		vTaskDelay(10);
    1272:	8a e0       	ldi	r24, 0x0A	; 10
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	56 d4       	rcall	.+2220   	; 0x1b24 <vTaskDelay>
    1278:	fb cf       	rjmp	.-10     	; 0x1270 <BlueRecSecTask+0x4>

0000127a <BlueRecSecPulse>:
	}
}

void BlueRecSecPulse(unsigned portBASE_TYPE Priority)
{
    127a:	af 92       	push	r10
    127c:	bf 92       	push	r11
    127e:	cf 92       	push	r12
    1280:	df 92       	push	r13
    1282:	ef 92       	push	r14
    1284:	ff 92       	push	r15
    1286:	0f 93       	push	r16
	xTaskCreate(BlueRecSecTask, (signed portCHAR *)"BlueRecSecTask", configMINIMAL_STACK_SIZE, NULL, Priority, NULL );
    1288:	a1 2c       	mov	r10, r1
    128a:	b1 2c       	mov	r11, r1
    128c:	c1 2c       	mov	r12, r1
    128e:	d1 2c       	mov	r13, r1
    1290:	e1 2c       	mov	r14, r1
    1292:	f1 2c       	mov	r15, r1
    1294:	08 2f       	mov	r16, r24
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	45 e5       	ldi	r20, 0x55	; 85
    129c:	50 e0       	ldi	r21, 0x00	; 0
    129e:	6b ed       	ldi	r22, 0xDB	; 219
    12a0:	72 e0       	ldi	r23, 0x02	; 2
    12a2:	86 e3       	ldi	r24, 0x36	; 54
    12a4:	99 e0       	ldi	r25, 0x09	; 9
    12a6:	c6 d1       	rcall	.+908    	; 0x1634 <xTaskGenericCreate>
}
    12a8:	0f 91       	pop	r16
    12aa:	ff 90       	pop	r15
    12ac:	ef 90       	pop	r14
    12ae:	df 90       	pop	r13
    12b0:	cf 90       	pop	r12
    12b2:	bf 90       	pop	r11
    12b4:	af 90       	pop	r10
    12b6:	08 95       	ret

000012b8 <main>:


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // PA0-4 inputs for control/power buttons
    12b8:	11 b8       	out	0x01, r1	; 1
    12ba:	8f ef       	ldi	r24, 0xFF	; 255
    12bc:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00; // set as output for lcd
    12be:	87 b9       	out	0x07, r24	; 7
    12c0:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
    12c2:	8a b9       	out	0x0a, r24	; 10
    12c4:	1b b8       	out	0x0b, r1	; 11
	DDRB = 0xFF; PORTB = 0x00; //set as output
    12c6:	84 b9       	out	0x04, r24	; 4
    12c8:	15 b8       	out	0x05, r1	; 5
	//EEPROM
	//eeprom_write_byte(0,0);  //address 0 bark settings
	//eeprom_write_byte(1,0);  //address 1 timing setting
	

	bark_setting = eeprom_read_byte(0);
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0a d5       	rcall	.+2580   	; 0x1ce4 <eeprom_read_byte>
    12d0:	80 93 d4 08 	sts	0x08D4, r24	; 0x8008d4 <bark_setting>
	bark_delay = eeprom_read_byte(1);
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	05 d5       	rcall	.+2570   	; 0x1ce4 <eeprom_read_byte>
    12da:	80 93 d3 08 	sts	0x08D3, r24	; 0x8008d3 <bark_delay>


	//LCD init
	LCD_init();
    12de:	56 d8       	rcall	.-3924   	; 0x38c <LCD_init>
	
	LCD_DisplayString(1, "TEST");
    12e0:	6a ee       	ldi	r22, 0xEA	; 234
    12e2:	72 e0       	ldi	r23, 0x02	; 2
    12e4:	81 e0       	ldi	r24, 0x01	; 1
	LCD_Cursor(33);
    12e6:	6a d8       	rcall	.-3884   	; 0x3bc <LCD_DisplayString>
    12e8:	81 e2       	ldi	r24, 0x21	; 33
    12ea:	48 d8       	rcall	.-3952   	; 0x37c <LCD_Cursor>
	//output initial message that dog is off
	//LCD_DisplayString(1, LCD_data[1]);
	
	//init USART
	initUSART(0); //used to communicate to CHIP 0 AKA "dog"
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	0e 94 3c 01 	call	0x278	; 0x278 <initUSART>
	initUSART(1); //used to communicate via bluetooth
    12f2:	81 e0       	ldi	r24, 0x01	; 1
    12f4:	0e 94 3c 01 	call	0x278	; 0x278 <initUSART>
	
	
	//Start Tasks
	StartButtonPulse(1);
    12f8:	81 e0       	ldi	r24, 0x01	; 1
	StartMENUPulse(1);
    12fa:	2b d9       	rcall	.-3498   	; 0x552 <StartButtonPulse>
    12fc:	81 e0       	ldi	r24, 0x01	; 1
	TransSecPulse(1);
    12fe:	34 de       	rcall	.-920    	; 0xf68 <StartMENUPulse>
    1300:	81 e0       	ldi	r24, 0x01	; 1
	RecSecPulse(1);
    1302:	30 df       	rcall	.-416    	; 0x1164 <TransSecPulse>
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	6d df       	rcall	.-294    	; 0x11e2 <RecSecPulse>

	BlueRecSecPulse(1);
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	b7 df       	rcall	.-146    	; 0x127a <BlueRecSecPulse>
    130c:	94 d2       	rcall	.+1320   	; 0x1836 <vTaskStartScheduler>
	
	//RunSchedular
	vTaskStartScheduler();
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	90 e0       	ldi	r25, 0x00	; 0
	
	return 0;
    1312:	08 95       	ret

00001314 <pxPortInitialiseStack>:
    1314:	31 e1       	ldi	r19, 0x11	; 17
    1316:	fc 01       	movw	r30, r24
	return pdTRUE;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
    1318:	30 83       	st	Z, r19
    131a:	31 97       	sbiw	r30, 0x01	; 1
    131c:	22 e2       	ldi	r18, 0x22	; 34
    131e:	20 83       	st	Z, r18
    1320:	31 97       	sbiw	r30, 0x01	; 1
    1322:	a3 e3       	ldi	r26, 0x33	; 51
    1324:	a0 83       	st	Z, r26
    1326:	31 97       	sbiw	r30, 0x01	; 1
    1328:	60 83       	st	Z, r22
    132a:	31 97       	sbiw	r30, 0x01	; 1
    132c:	70 83       	st	Z, r23
    132e:	31 97       	sbiw	r30, 0x01	; 1
    1330:	10 82       	st	Z, r1
    1332:	31 97       	sbiw	r30, 0x01	; 1
    1334:	60 e8       	ldi	r22, 0x80	; 128
    1336:	60 83       	st	Z, r22
    1338:	31 97       	sbiw	r30, 0x01	; 1
    133a:	10 82       	st	Z, r1
    133c:	31 97       	sbiw	r30, 0x01	; 1
    133e:	62 e0       	ldi	r22, 0x02	; 2
    1340:	60 83       	st	Z, r22
    1342:	31 97       	sbiw	r30, 0x01	; 1
    1344:	63 e0       	ldi	r22, 0x03	; 3
    1346:	60 83       	st	Z, r22
    1348:	31 97       	sbiw	r30, 0x01	; 1
    134a:	64 e0       	ldi	r22, 0x04	; 4
    134c:	60 83       	st	Z, r22
    134e:	31 97       	sbiw	r30, 0x01	; 1
    1350:	65 e0       	ldi	r22, 0x05	; 5
    1352:	60 83       	st	Z, r22
    1354:	31 97       	sbiw	r30, 0x01	; 1
    1356:	66 e0       	ldi	r22, 0x06	; 6
    1358:	60 83       	st	Z, r22
    135a:	31 97       	sbiw	r30, 0x01	; 1
    135c:	67 e0       	ldi	r22, 0x07	; 7
    135e:	60 83       	st	Z, r22
    1360:	31 97       	sbiw	r30, 0x01	; 1
    1362:	68 e0       	ldi	r22, 0x08	; 8
    1364:	60 83       	st	Z, r22
    1366:	31 97       	sbiw	r30, 0x01	; 1
    1368:	69 e0       	ldi	r22, 0x09	; 9
    136a:	60 83       	st	Z, r22
    136c:	31 97       	sbiw	r30, 0x01	; 1
    136e:	60 e1       	ldi	r22, 0x10	; 16
    1370:	60 83       	st	Z, r22
    1372:	31 97       	sbiw	r30, 0x01	; 1
    1374:	30 83       	st	Z, r19
    1376:	31 97       	sbiw	r30, 0x01	; 1
    1378:	32 e1       	ldi	r19, 0x12	; 18
    137a:	30 83       	st	Z, r19
    137c:	31 97       	sbiw	r30, 0x01	; 1
    137e:	33 e1       	ldi	r19, 0x13	; 19
    1380:	30 83       	st	Z, r19
    1382:	31 97       	sbiw	r30, 0x01	; 1
    1384:	34 e1       	ldi	r19, 0x14	; 20
    1386:	30 83       	st	Z, r19
    1388:	31 97       	sbiw	r30, 0x01	; 1
    138a:	35 e1       	ldi	r19, 0x15	; 21
    138c:	30 83       	st	Z, r19
    138e:	31 97       	sbiw	r30, 0x01	; 1
    1390:	36 e1       	ldi	r19, 0x16	; 22
    1392:	30 83       	st	Z, r19
    1394:	31 97       	sbiw	r30, 0x01	; 1
    1396:	37 e1       	ldi	r19, 0x17	; 23
    1398:	30 83       	st	Z, r19
    139a:	31 97       	sbiw	r30, 0x01	; 1
    139c:	38 e1       	ldi	r19, 0x18	; 24
    139e:	30 83       	st	Z, r19
    13a0:	31 97       	sbiw	r30, 0x01	; 1
    13a2:	39 e1       	ldi	r19, 0x19	; 25
    13a4:	30 83       	st	Z, r19
    13a6:	31 97       	sbiw	r30, 0x01	; 1
    13a8:	30 e2       	ldi	r19, 0x20	; 32
    13aa:	30 83       	st	Z, r19
    13ac:	31 97       	sbiw	r30, 0x01	; 1
    13ae:	31 e2       	ldi	r19, 0x21	; 33
    13b0:	30 83       	st	Z, r19
    13b2:	31 97       	sbiw	r30, 0x01	; 1
    13b4:	20 83       	st	Z, r18
    13b6:	31 97       	sbiw	r30, 0x01	; 1
    13b8:	23 e2       	ldi	r18, 0x23	; 35
    13ba:	20 83       	st	Z, r18
    13bc:	31 97       	sbiw	r30, 0x01	; 1
    13be:	40 83       	st	Z, r20
    13c0:	31 97       	sbiw	r30, 0x01	; 1
    13c2:	50 83       	st	Z, r21
    13c4:	31 97       	sbiw	r30, 0x01	; 1
    13c6:	26 e2       	ldi	r18, 0x26	; 38
    13c8:	20 83       	st	Z, r18
    13ca:	31 97       	sbiw	r30, 0x01	; 1
    13cc:	27 e2       	ldi	r18, 0x27	; 39
    13ce:	20 83       	st	Z, r18
    13d0:	31 97       	sbiw	r30, 0x01	; 1
    13d2:	28 e2       	ldi	r18, 0x28	; 40
    13d4:	20 83       	st	Z, r18
    13d6:	31 97       	sbiw	r30, 0x01	; 1
    13d8:	29 e2       	ldi	r18, 0x29	; 41
    13da:	20 83       	st	Z, r18
    13dc:	31 97       	sbiw	r30, 0x01	; 1
    13de:	20 e3       	ldi	r18, 0x30	; 48
    13e0:	20 83       	st	Z, r18
    13e2:	31 97       	sbiw	r30, 0x01	; 1
    13e4:	21 e3       	ldi	r18, 0x31	; 49
    13e6:	20 83       	st	Z, r18
    13e8:	86 97       	sbiw	r24, 0x26	; 38
    13ea:	08 95       	ret

000013ec <xPortStartScheduler>:
    13ec:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    13f0:	8c e7       	ldi	r24, 0x7C	; 124
    13f2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    13f6:	8b e0       	ldi	r24, 0x0B	; 11
    13f8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    13fc:	ef e6       	ldi	r30, 0x6F	; 111
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	80 81       	ld	r24, Z
    1402:	82 60       	ori	r24, 0x02	; 2
    1404:	80 83       	st	Z, r24
    1406:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <pxCurrentTCB>
    140a:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    140e:	cd 91       	ld	r28, X+
    1410:	cd bf       	out	0x3d, r28	; 61
    1412:	dd 91       	ld	r29, X+
    1414:	de bf       	out	0x3e, r29	; 62
    1416:	ff 91       	pop	r31
    1418:	ef 91       	pop	r30
    141a:	df 91       	pop	r29
    141c:	cf 91       	pop	r28
    141e:	bf 91       	pop	r27
    1420:	af 91       	pop	r26
    1422:	9f 91       	pop	r25
    1424:	8f 91       	pop	r24
    1426:	7f 91       	pop	r23
    1428:	6f 91       	pop	r22
    142a:	5f 91       	pop	r21
    142c:	4f 91       	pop	r20
    142e:	3f 91       	pop	r19
    1430:	2f 91       	pop	r18
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	ff 90       	pop	r15
    1438:	ef 90       	pop	r14
    143a:	df 90       	pop	r13
    143c:	cf 90       	pop	r12
    143e:	bf 90       	pop	r11
    1440:	af 90       	pop	r10
    1442:	9f 90       	pop	r9
    1444:	8f 90       	pop	r8
    1446:	7f 90       	pop	r7
    1448:	6f 90       	pop	r6
    144a:	5f 90       	pop	r5
    144c:	4f 90       	pop	r4
    144e:	3f 90       	pop	r3
    1450:	2f 90       	pop	r2
    1452:	1f 90       	pop	r1
    1454:	0f 90       	pop	r0
    1456:	0f be       	out	0x3f, r0	; 63
    1458:	0f 90       	pop	r0
    145a:	08 95       	ret
    145c:	81 e0       	ldi	r24, 0x01	; 1
    145e:	08 95       	ret

00001460 <vPortYield>:
 * can use a naked attribute.
 */
void vPortYield( void ) __attribute__ ( ( naked ) );
void vPortYield( void )
{
	portSAVE_CONTEXT();
    1460:	0f 92       	push	r0
    1462:	0f b6       	in	r0, 0x3f	; 63
    1464:	f8 94       	cli
    1466:	0f 92       	push	r0
    1468:	1f 92       	push	r1
    146a:	11 24       	eor	r1, r1
    146c:	2f 92       	push	r2
    146e:	3f 92       	push	r3
    1470:	4f 92       	push	r4
    1472:	5f 92       	push	r5
    1474:	6f 92       	push	r6
    1476:	7f 92       	push	r7
    1478:	8f 92       	push	r8
    147a:	9f 92       	push	r9
    147c:	af 92       	push	r10
    147e:	bf 92       	push	r11
    1480:	cf 92       	push	r12
    1482:	df 92       	push	r13
    1484:	ef 92       	push	r14
    1486:	ff 92       	push	r15
    1488:	0f 93       	push	r16
    148a:	1f 93       	push	r17
    148c:	2f 93       	push	r18
    148e:	3f 93       	push	r19
    1490:	4f 93       	push	r20
    1492:	5f 93       	push	r21
    1494:	6f 93       	push	r22
    1496:	7f 93       	push	r23
    1498:	8f 93       	push	r24
    149a:	9f 93       	push	r25
    149c:	af 93       	push	r26
    149e:	bf 93       	push	r27
    14a0:	cf 93       	push	r28
    14a2:	df 93       	push	r29
    14a4:	ef 93       	push	r30
    14a6:	ff 93       	push	r31
    14a8:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <pxCurrentTCB>
    14ac:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    14b0:	0d b6       	in	r0, 0x3d	; 61
    14b2:	0d 92       	st	X+, r0
    14b4:	0e b6       	in	r0, 0x3e	; 62
    14b6:	0d 92       	st	X+, r0
	vTaskSwitchContext();
    14b8:	8a d3       	rcall	.+1812   	; 0x1bce <vTaskSwitchContext>
	portRESTORE_CONTEXT();
    14ba:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <pxCurrentTCB>
    14be:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    14c2:	cd 91       	ld	r28, X+
    14c4:	cd bf       	out	0x3d, r28	; 61
    14c6:	dd 91       	ld	r29, X+
    14c8:	de bf       	out	0x3e, r29	; 62
    14ca:	ff 91       	pop	r31
    14cc:	ef 91       	pop	r30
    14ce:	df 91       	pop	r29
    14d0:	cf 91       	pop	r28
    14d2:	bf 91       	pop	r27
    14d4:	af 91       	pop	r26
    14d6:	9f 91       	pop	r25
    14d8:	8f 91       	pop	r24
    14da:	7f 91       	pop	r23
    14dc:	6f 91       	pop	r22
    14de:	5f 91       	pop	r21
    14e0:	4f 91       	pop	r20
    14e2:	3f 91       	pop	r19
    14e4:	2f 91       	pop	r18
    14e6:	1f 91       	pop	r17
    14e8:	0f 91       	pop	r16
    14ea:	ff 90       	pop	r15
    14ec:	ef 90       	pop	r14
    14ee:	df 90       	pop	r13
    14f0:	cf 90       	pop	r12
    14f2:	bf 90       	pop	r11
    14f4:	af 90       	pop	r10
    14f6:	9f 90       	pop	r9
    14f8:	8f 90       	pop	r8
    14fa:	7f 90       	pop	r7
    14fc:	6f 90       	pop	r6
    14fe:	5f 90       	pop	r5
    1500:	4f 90       	pop	r4
    1502:	3f 90       	pop	r3
    1504:	2f 90       	pop	r2
    1506:	1f 90       	pop	r1
    1508:	0f 90       	pop	r0
    150a:	0f be       	out	0x3f, r0	; 63
    150c:	0f 90       	pop	r0

	asm volatile ( "ret" );
    150e:	08 95       	ret

00001510 <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
void vPortYieldFromTick( void )
{
	portSAVE_CONTEXT();
    1510:	0f 92       	push	r0
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	0f 92       	push	r0
    1518:	1f 92       	push	r1
    151a:	11 24       	eor	r1, r1
    151c:	2f 92       	push	r2
    151e:	3f 92       	push	r3
    1520:	4f 92       	push	r4
    1522:	5f 92       	push	r5
    1524:	6f 92       	push	r6
    1526:	7f 92       	push	r7
    1528:	8f 92       	push	r8
    152a:	9f 92       	push	r9
    152c:	af 92       	push	r10
    152e:	bf 92       	push	r11
    1530:	cf 92       	push	r12
    1532:	df 92       	push	r13
    1534:	ef 92       	push	r14
    1536:	ff 92       	push	r15
    1538:	0f 93       	push	r16
    153a:	1f 93       	push	r17
    153c:	2f 93       	push	r18
    153e:	3f 93       	push	r19
    1540:	4f 93       	push	r20
    1542:	5f 93       	push	r21
    1544:	6f 93       	push	r22
    1546:	7f 93       	push	r23
    1548:	8f 93       	push	r24
    154a:	9f 93       	push	r25
    154c:	af 93       	push	r26
    154e:	bf 93       	push	r27
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	ef 93       	push	r30
    1556:	ff 93       	push	r31
    1558:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <pxCurrentTCB>
    155c:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1560:	0d b6       	in	r0, 0x3d	; 61
    1562:	0d 92       	st	X+, r0
    1564:	0e b6       	in	r0, 0x3e	; 62
    1566:	0d 92       	st	X+, r0
	vTaskIncrementTick();
    1568:	95 d1       	rcall	.+810    	; 0x1894 <vTaskIncrementTick>
	vTaskSwitchContext();
    156a:	31 d3       	rcall	.+1634   	; 0x1bce <vTaskSwitchContext>
    156c:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <pxCurrentTCB>
	portRESTORE_CONTEXT();
    1570:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1574:	cd 91       	ld	r28, X+
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	dd 91       	ld	r29, X+
    157a:	de bf       	out	0x3e, r29	; 62
    157c:	ff 91       	pop	r31
    157e:	ef 91       	pop	r30
    1580:	df 91       	pop	r29
    1582:	cf 91       	pop	r28
    1584:	bf 91       	pop	r27
    1586:	af 91       	pop	r26
    1588:	9f 91       	pop	r25
    158a:	8f 91       	pop	r24
    158c:	7f 91       	pop	r23
    158e:	6f 91       	pop	r22
    1590:	5f 91       	pop	r21
    1592:	4f 91       	pop	r20
    1594:	3f 91       	pop	r19
    1596:	2f 91       	pop	r18
    1598:	1f 91       	pop	r17
    159a:	0f 91       	pop	r16
    159c:	ff 90       	pop	r15
    159e:	ef 90       	pop	r14
    15a0:	df 90       	pop	r13
    15a2:	cf 90       	pop	r12
    15a4:	bf 90       	pop	r11
    15a6:	af 90       	pop	r10
    15a8:	9f 90       	pop	r9
    15aa:	8f 90       	pop	r8
    15ac:	7f 90       	pop	r7
    15ae:	6f 90       	pop	r6
    15b0:	5f 90       	pop	r5
    15b2:	4f 90       	pop	r4
    15b4:	3f 90       	pop	r3
    15b6:	2f 90       	pop	r2
    15b8:	1f 90       	pop	r1
    15ba:	0f 90       	pop	r0
    15bc:	0f be       	out	0x3f, r0	; 63
    15be:	0f 90       	pop	r0
    15c0:	08 95       	ret

000015c2 <__vector_13>:

	asm volatile ( "ret" );
    15c2:	a6 df       	rcall	.-180    	; 0x1510 <vPortYieldFromTick>
	 */
	void TIMER1_COMPA_vect( void ) __attribute__ ( ( signal, naked ) );
	void TIMER1_COMPA_vect( void )
	{
		vPortYieldFromTick();
		asm volatile ( "reti" );
    15c4:	18 95       	reti

000015c6 <prvAddCurrentTaskToDelayedList>:
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
		{
			portYIELD_WITHIN_API();
		}
	}
    15c6:	cf 93       	push	r28
    15c8:	df 93       	push	r29
    15ca:	ec 01       	movw	r28, r24
    15cc:	e0 91 36 09 	lds	r30, 0x0936	; 0x800936 <pxCurrentTCB>
    15d0:	f0 91 37 09 	lds	r31, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    15d4:	93 83       	std	Z+3, r25	; 0x03
    15d6:	82 83       	std	Z+2, r24	; 0x02
    15d8:	80 91 e6 08 	lds	r24, 0x08E6	; 0x8008e6 <xTickCount>
    15dc:	90 91 e7 08 	lds	r25, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    15e0:	c8 17       	cp	r28, r24
    15e2:	d9 07       	cpc	r29, r25
    15e4:	68 f4       	brcc	.+26     	; 0x1600 <prvAddCurrentTaskToDelayedList+0x3a>
    15e6:	60 91 36 09 	lds	r22, 0x0936	; 0x800936 <pxCurrentTCB>
    15ea:	70 91 37 09 	lds	r23, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    15ee:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <pxOverflowDelayedTaskList>
    15f2:	90 91 fd 08 	lds	r25, 0x08FD	; 0x8008fd <pxOverflowDelayedTaskList+0x1>
    15f6:	6e 5f       	subi	r22, 0xFE	; 254
    15f8:	7f 4f       	sbci	r23, 0xFF	; 255
    15fa:	0e 94 db 00 	call	0x1b6	; 0x1b6 <vListInsert>
    15fe:	17 c0       	rjmp	.+46     	; 0x162e <prvAddCurrentTaskToDelayedList+0x68>
    1600:	60 91 36 09 	lds	r22, 0x0936	; 0x800936 <pxCurrentTCB>
    1604:	70 91 37 09 	lds	r23, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1608:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    160c:	90 91 ff 08 	lds	r25, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    1610:	6e 5f       	subi	r22, 0xFE	; 254
    1612:	7f 4f       	sbci	r23, 0xFF	; 255
    1614:	0e 94 db 00 	call	0x1b6	; 0x1b6 <vListInsert>
    1618:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    161c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    1620:	c8 17       	cp	r28, r24
    1622:	d9 07       	cpc	r29, r25
    1624:	20 f4       	brcc	.+8      	; 0x162e <prvAddCurrentTaskToDelayedList+0x68>
    1626:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
    162a:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	08 95       	ret

00001634 <xTaskGenericCreate>:
    1634:	4f 92       	push	r4
    1636:	5f 92       	push	r5
    1638:	6f 92       	push	r6
    163a:	7f 92       	push	r7
    163c:	8f 92       	push	r8
    163e:	9f 92       	push	r9
    1640:	af 92       	push	r10
    1642:	bf 92       	push	r11
    1644:	cf 92       	push	r12
    1646:	df 92       	push	r13
    1648:	ef 92       	push	r14
    164a:	ff 92       	push	r15
    164c:	0f 93       	push	r16
    164e:	1f 93       	push	r17
    1650:	cf 93       	push	r28
    1652:	df 93       	push	r29
    1654:	5c 01       	movw	r10, r24
    1656:	4b 01       	movw	r8, r22
    1658:	3a 01       	movw	r6, r20
    165a:	29 01       	movw	r4, r18
    165c:	81 e2       	ldi	r24, 0x21	; 33
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	0e 94 7b 00 	call	0xf6	; 0xf6 <pvPortMalloc>
    1664:	ec 01       	movw	r28, r24
    1666:	89 2b       	or	r24, r25
    1668:	09 f4       	brne	.+2      	; 0x166c <xTaskGenericCreate+0x38>
    166a:	d3 c0       	rjmp	.+422    	; 0x1812 <xTaskGenericCreate+0x1de>
    166c:	c1 14       	cp	r12, r1
    166e:	d1 04       	cpc	r13, r1
    1670:	09 f0       	breq	.+2      	; 0x1674 <xTaskGenericCreate+0x40>
    1672:	cb c0       	rjmp	.+406    	; 0x180a <xTaskGenericCreate+0x1d6>
    1674:	c3 01       	movw	r24, r6
    1676:	0e 94 7b 00 	call	0xf6	; 0xf6 <pvPortMalloc>
    167a:	98 8f       	std	Y+24, r25	; 0x18
    167c:	8f 8b       	std	Y+23, r24	; 0x17
    167e:	00 97       	sbiw	r24, 0x00	; 0
    1680:	21 f4       	brne	.+8      	; 0x168a <xTaskGenericCreate+0x56>
    1682:	ce 01       	movw	r24, r28
    1684:	0e 94 a1 00 	call	0x142	; 0x142 <vPortFree>
    1688:	c4 c0       	rjmp	.+392    	; 0x1812 <xTaskGenericCreate+0x1de>
    168a:	a3 01       	movw	r20, r6
    168c:	65 ea       	ldi	r22, 0xA5	; 165
    168e:	70 e0       	ldi	r23, 0x00	; 0
    1690:	13 d3       	rcall	.+1574   	; 0x1cb8 <memset>
    1692:	93 01       	movw	r18, r6
    1694:	21 50       	subi	r18, 0x01	; 1
    1696:	31 09       	sbc	r19, r1
    1698:	8f 89       	ldd	r24, Y+23	; 0x17
    169a:	98 8d       	ldd	r25, Y+24	; 0x18
    169c:	3c 01       	movw	r6, r24
    169e:	62 0e       	add	r6, r18
    16a0:	73 1e       	adc	r7, r19
    16a2:	48 e0       	ldi	r20, 0x08	; 8
    16a4:	50 e0       	ldi	r21, 0x00	; 0
    16a6:	b4 01       	movw	r22, r8
    16a8:	ce 01       	movw	r24, r28
    16aa:	49 96       	adiw	r24, 0x19	; 25
    16ac:	0c d3       	rcall	.+1560   	; 0x1cc6 <strncpy>
    16ae:	18 a2       	std	Y+32, r1	; 0x20
    16b0:	10 2f       	mov	r17, r16
    16b2:	04 30       	cpi	r16, 0x04	; 4
    16b4:	08 f0       	brcs	.+2      	; 0x16b8 <xTaskGenericCreate+0x84>
    16b6:	13 e0       	ldi	r17, 0x03	; 3
    16b8:	1e 8b       	std	Y+22, r17	; 0x16
    16ba:	6e 01       	movw	r12, r28
    16bc:	82 e0       	ldi	r24, 0x02	; 2
    16be:	c8 0e       	add	r12, r24
    16c0:	d1 1c       	adc	r13, r1
    16c2:	c6 01       	movw	r24, r12
    16c4:	0e 94 b0 00 	call	0x160	; 0x160 <vListInitialiseItem>
    16c8:	ce 01       	movw	r24, r28
    16ca:	0c 96       	adiw	r24, 0x0c	; 12
    16cc:	0e 94 b0 00 	call	0x160	; 0x160 <vListInitialiseItem>
    16d0:	d9 87       	std	Y+9, r29	; 0x09
    16d2:	c8 87       	std	Y+8, r28	; 0x08
    16d4:	84 e0       	ldi	r24, 0x04	; 4
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	81 1b       	sub	r24, r17
    16da:	91 09       	sbc	r25, r1
    16dc:	9d 87       	std	Y+13, r25	; 0x0d
    16de:	8c 87       	std	Y+12, r24	; 0x0c
    16e0:	db 8b       	std	Y+19, r29	; 0x13
    16e2:	ca 8b       	std	Y+18, r28	; 0x12
    16e4:	a2 01       	movw	r20, r4
    16e6:	b5 01       	movw	r22, r10
    16e8:	c3 01       	movw	r24, r6
    16ea:	14 de       	rcall	.-984    	; 0x1314 <pxPortInitialiseStack>
    16ec:	99 83       	std	Y+1, r25	; 0x01
    16ee:	88 83       	st	Y, r24
    16f0:	e1 14       	cp	r14, r1
    16f2:	f1 04       	cpc	r15, r1
    16f4:	19 f0       	breq	.+6      	; 0x16fc <xTaskGenericCreate+0xc8>
    16f6:	f7 01       	movw	r30, r14
    16f8:	d1 83       	std	Z+1, r29	; 0x01
    16fa:	c0 83       	st	Z, r28
    16fc:	0f b6       	in	r0, 0x3f	; 63
    16fe:	f8 94       	cli
    1700:	0f 92       	push	r0
    1702:	80 91 e8 08 	lds	r24, 0x08E8	; 0x8008e8 <uxCurrentNumberOfTasks>
    1706:	8f 5f       	subi	r24, 0xFF	; 255
    1708:	80 93 e8 08 	sts	0x08E8, r24	; 0x8008e8 <uxCurrentNumberOfTasks>
    170c:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <pxCurrentTCB>
    1710:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1714:	89 2b       	or	r24, r25
    1716:	a9 f5       	brne	.+106    	; 0x1782 <xTaskGenericCreate+0x14e>
    1718:	d0 93 37 09 	sts	0x0937, r29	; 0x800937 <pxCurrentTCB+0x1>
    171c:	c0 93 36 09 	sts	0x0936, r28	; 0x800936 <pxCurrentTCB>
    1720:	80 91 e8 08 	lds	r24, 0x08E8	; 0x8008e8 <uxCurrentNumberOfTasks>
    1724:	81 30       	cpi	r24, 0x01	; 1
    1726:	e1 f5       	brne	.+120    	; 0x17a0 <xTaskGenericCreate+0x16c>
    1728:	82 e1       	ldi	r24, 0x12	; 18
    172a:	99 e0       	ldi	r25, 0x09	; 9
    172c:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1730:	8b e1       	ldi	r24, 0x1B	; 27
    1732:	99 e0       	ldi	r25, 0x09	; 9
    1734:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1738:	84 e2       	ldi	r24, 0x24	; 36
    173a:	99 e0       	ldi	r25, 0x09	; 9
    173c:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1740:	8d e2       	ldi	r24, 0x2D	; 45
    1742:	99 e0       	ldi	r25, 0x09	; 9
    1744:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1748:	89 e0       	ldi	r24, 0x09	; 9
    174a:	99 e0       	ldi	r25, 0x09	; 9
    174c:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	99 e0       	ldi	r25, 0x09	; 9
    1754:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1758:	83 ef       	ldi	r24, 0xF3	; 243
    175a:	98 e0       	ldi	r25, 0x08	; 8
    175c:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1760:	8a ee       	ldi	r24, 0xEA	; 234
    1762:	98 e0       	ldi	r25, 0x08	; 8
    1764:	0e 94 a2 00 	call	0x144	; 0x144 <vListInitialise>
    1768:	89 e0       	ldi	r24, 0x09	; 9
    176a:	99 e0       	ldi	r25, 0x09	; 9
    176c:	90 93 ff 08 	sts	0x08FF, r25	; 0x8008ff <pxDelayedTaskList+0x1>
    1770:	80 93 fe 08 	sts	0x08FE, r24	; 0x8008fe <pxDelayedTaskList>
    1774:	80 e0       	ldi	r24, 0x00	; 0
    1776:	99 e0       	ldi	r25, 0x09	; 9
    1778:	90 93 fd 08 	sts	0x08FD, r25	; 0x8008fd <pxOverflowDelayedTaskList+0x1>
    177c:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <pxOverflowDelayedTaskList>
    1780:	0f c0       	rjmp	.+30     	; 0x17a0 <xTaskGenericCreate+0x16c>
    1782:	80 91 e3 08 	lds	r24, 0x08E3	; 0x8008e3 <xSchedulerRunning>
    1786:	81 11       	cpse	r24, r1
    1788:	0b c0       	rjmp	.+22     	; 0x17a0 <xTaskGenericCreate+0x16c>
    178a:	e0 91 36 09 	lds	r30, 0x0936	; 0x800936 <pxCurrentTCB>
    178e:	f0 91 37 09 	lds	r31, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1792:	86 89       	ldd	r24, Z+22	; 0x16
    1794:	08 17       	cp	r16, r24
    1796:	20 f0       	brcs	.+8      	; 0x17a0 <xTaskGenericCreate+0x16c>
    1798:	d0 93 37 09 	sts	0x0937, r29	; 0x800937 <pxCurrentTCB+0x1>
    179c:	c0 93 36 09 	sts	0x0936, r28	; 0x800936 <pxCurrentTCB>
    17a0:	8e 89       	ldd	r24, Y+22	; 0x16
    17a2:	90 91 e5 08 	lds	r25, 0x08E5	; 0x8008e5 <uxTopUsedPriority>
    17a6:	98 17       	cp	r25, r24
    17a8:	10 f4       	brcc	.+4      	; 0x17ae <xTaskGenericCreate+0x17a>
    17aa:	80 93 e5 08 	sts	0x08E5, r24	; 0x8008e5 <uxTopUsedPriority>
    17ae:	90 91 de 08 	lds	r25, 0x08DE	; 0x8008de <uxTaskNumber>
    17b2:	9f 5f       	subi	r25, 0xFF	; 255
    17b4:	90 93 de 08 	sts	0x08DE, r25	; 0x8008de <uxTaskNumber>
    17b8:	90 91 e4 08 	lds	r25, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    17bc:	98 17       	cp	r25, r24
    17be:	10 f4       	brcc	.+4      	; 0x17c4 <xTaskGenericCreate+0x190>
    17c0:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <uxTopReadyPriority>
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	9c 01       	movw	r18, r24
    17c8:	22 0f       	add	r18, r18
    17ca:	33 1f       	adc	r19, r19
    17cc:	22 0f       	add	r18, r18
    17ce:	33 1f       	adc	r19, r19
    17d0:	22 0f       	add	r18, r18
    17d2:	33 1f       	adc	r19, r19
    17d4:	82 0f       	add	r24, r18
    17d6:	93 1f       	adc	r25, r19
    17d8:	b6 01       	movw	r22, r12
    17da:	8e 5e       	subi	r24, 0xEE	; 238
    17dc:	96 4f       	sbci	r25, 0xF6	; 246
    17de:	0e 94 b4 00 	call	0x168	; 0x168 <vListInsertEnd>
    17e2:	0f 90       	pop	r0
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	80 91 e3 08 	lds	r24, 0x08E3	; 0x8008e3 <xSchedulerRunning>
    17ea:	88 23       	and	r24, r24
    17ec:	51 f0       	breq	.+20     	; 0x1802 <xTaskGenericCreate+0x1ce>
    17ee:	e0 91 36 09 	lds	r30, 0x0936	; 0x800936 <pxCurrentTCB>
    17f2:	f0 91 37 09 	lds	r31, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    17f6:	86 89       	ldd	r24, Z+22	; 0x16
    17f8:	80 17       	cp	r24, r16
    17fa:	28 f4       	brcc	.+10     	; 0x1806 <xTaskGenericCreate+0x1d2>
    17fc:	31 de       	rcall	.-926    	; 0x1460 <vPortYield>
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	09 c0       	rjmp	.+18     	; 0x1814 <xTaskGenericCreate+0x1e0>
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	07 c0       	rjmp	.+14     	; 0x1814 <xTaskGenericCreate+0x1e0>
    1806:	81 e0       	ldi	r24, 0x01	; 1
    1808:	05 c0       	rjmp	.+10     	; 0x1814 <xTaskGenericCreate+0x1e0>
    180a:	d8 8e       	std	Y+24, r13	; 0x18
    180c:	cf 8a       	std	Y+23, r12	; 0x17
    180e:	c6 01       	movw	r24, r12
    1810:	3c cf       	rjmp	.-392    	; 0x168a <xTaskGenericCreate+0x56>
    1812:	8f ef       	ldi	r24, 0xFF	; 255
    1814:	df 91       	pop	r29
    1816:	cf 91       	pop	r28
    1818:	1f 91       	pop	r17
    181a:	0f 91       	pop	r16
    181c:	ff 90       	pop	r15
    181e:	ef 90       	pop	r14
    1820:	df 90       	pop	r13
    1822:	cf 90       	pop	r12
    1824:	bf 90       	pop	r11
    1826:	af 90       	pop	r10
    1828:	9f 90       	pop	r9
    182a:	8f 90       	pop	r8
    182c:	7f 90       	pop	r7
    182e:	6f 90       	pop	r6
    1830:	5f 90       	pop	r5
    1832:	4f 90       	pop	r4
    1834:	08 95       	ret

00001836 <vTaskStartScheduler>:
    1836:	af 92       	push	r10
    1838:	bf 92       	push	r11
    183a:	cf 92       	push	r12
    183c:	df 92       	push	r13
    183e:	ef 92       	push	r14
    1840:	ff 92       	push	r15
    1842:	0f 93       	push	r16
    1844:	a1 2c       	mov	r10, r1
    1846:	b1 2c       	mov	r11, r1
    1848:	c1 2c       	mov	r12, r1
    184a:	d1 2c       	mov	r13, r1
    184c:	e1 2c       	mov	r14, r1
    184e:	f1 2c       	mov	r15, r1
    1850:	00 e0       	ldi	r16, 0x00	; 0
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	45 e5       	ldi	r20, 0x55	; 85
    1858:	50 e0       	ldi	r21, 0x00	; 0
    185a:	6f ee       	ldi	r22, 0xEF	; 239
    185c:	72 e0       	ldi	r23, 0x02	; 2
    185e:	8e ea       	ldi	r24, 0xAE	; 174
    1860:	9d e0       	ldi	r25, 0x0D	; 13
    1862:	e8 de       	rcall	.-560    	; 0x1634 <xTaskGenericCreate>
    1864:	81 30       	cpi	r24, 0x01	; 1
    1866:	41 f4       	brne	.+16     	; 0x1878 <vTaskStartScheduler+0x42>
    1868:	f8 94       	cli
    186a:	80 93 e3 08 	sts	0x08E3, r24	; 0x8008e3 <xSchedulerRunning>
    186e:	10 92 e7 08 	sts	0x08E7, r1	; 0x8008e7 <xTickCount+0x1>
    1872:	10 92 e6 08 	sts	0x08E6, r1	; 0x8008e6 <xTickCount>
    1876:	ba dd       	rcall	.-1164   	; 0x13ec <xPortStartScheduler>
    1878:	0f 91       	pop	r16
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	df 90       	pop	r13
    1880:	cf 90       	pop	r12
    1882:	bf 90       	pop	r11
    1884:	af 90       	pop	r10
    1886:	08 95       	ret

00001888 <vTaskSuspendAll>:
    1888:	80 91 e2 08 	lds	r24, 0x08E2	; 0x8008e2 <uxSchedulerSuspended>
    188c:	8f 5f       	subi	r24, 0xFF	; 255
    188e:	80 93 e2 08 	sts	0x08E2, r24	; 0x8008e2 <uxSchedulerSuspended>
    1892:	08 95       	ret

00001894 <vTaskIncrementTick>:
    1894:	0f 93       	push	r16
    1896:	1f 93       	push	r17
    1898:	cf 93       	push	r28
    189a:	df 93       	push	r29
    189c:	80 91 e2 08 	lds	r24, 0x08E2	; 0x8008e2 <uxSchedulerSuspended>
    18a0:	81 11       	cpse	r24, r1
    18a2:	b2 c0       	rjmp	.+356    	; 0x1a08 <vTaskIncrementTick+0x174>
    18a4:	80 91 e6 08 	lds	r24, 0x08E6	; 0x8008e6 <xTickCount>
    18a8:	90 91 e7 08 	lds	r25, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    18ac:	01 96       	adiw	r24, 0x01	; 1
    18ae:	90 93 e7 08 	sts	0x08E7, r25	; 0x8008e7 <xTickCount+0x1>
    18b2:	80 93 e6 08 	sts	0x08E6, r24	; 0x8008e6 <xTickCount>
    18b6:	80 91 e6 08 	lds	r24, 0x08E6	; 0x8008e6 <xTickCount>
    18ba:	90 91 e7 08 	lds	r25, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    18be:	89 2b       	or	r24, r25
    18c0:	99 f5       	brne	.+102    	; 0x1928 <vTaskIncrementTick+0x94>
    18c2:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    18c6:	90 91 ff 08 	lds	r25, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    18ca:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <pxOverflowDelayedTaskList>
    18ce:	30 91 fd 08 	lds	r19, 0x08FD	; 0x8008fd <pxOverflowDelayedTaskList+0x1>
    18d2:	30 93 ff 08 	sts	0x08FF, r19	; 0x8008ff <pxDelayedTaskList+0x1>
    18d6:	20 93 fe 08 	sts	0x08FE, r18	; 0x8008fe <pxDelayedTaskList>
    18da:	90 93 fd 08 	sts	0x08FD, r25	; 0x8008fd <pxOverflowDelayedTaskList+0x1>
    18de:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <pxOverflowDelayedTaskList>
    18e2:	80 91 df 08 	lds	r24, 0x08DF	; 0x8008df <xNumOfOverflows>
    18e6:	8f 5f       	subi	r24, 0xFF	; 255
    18e8:	80 93 df 08 	sts	0x08DF, r24	; 0x8008df <xNumOfOverflows>
    18ec:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    18f0:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    18f4:	80 81       	ld	r24, Z
    18f6:	81 11       	cpse	r24, r1
    18f8:	07 c0       	rjmp	.+14     	; 0x1908 <vTaskIncrementTick+0x74>
    18fa:	8f ef       	ldi	r24, 0xFF	; 255
    18fc:	9f ef       	ldi	r25, 0xFF	; 255
    18fe:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1902:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1906:	10 c0       	rjmp	.+32     	; 0x1928 <vTaskIncrementTick+0x94>
    1908:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    190c:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    1910:	05 80       	ldd	r0, Z+5	; 0x05
    1912:	f6 81       	ldd	r31, Z+6	; 0x06
    1914:	e0 2d       	mov	r30, r0
    1916:	06 80       	ldd	r0, Z+6	; 0x06
    1918:	f7 81       	ldd	r31, Z+7	; 0x07
    191a:	e0 2d       	mov	r30, r0
    191c:	82 81       	ldd	r24, Z+2	; 0x02
    191e:	93 81       	ldd	r25, Z+3	; 0x03
    1920:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1924:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1928:	20 91 e6 08 	lds	r18, 0x08E6	; 0x8008e6 <xTickCount>
    192c:	30 91 e7 08 	lds	r19, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    1930:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    1934:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    1938:	28 17       	cp	r18, r24
    193a:	39 07       	cpc	r19, r25
    193c:	08 f4       	brcc	.+2      	; 0x1940 <vTaskIncrementTick+0xac>
    193e:	69 c0       	rjmp	.+210    	; 0x1a12 <vTaskIncrementTick+0x17e>
    1940:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    1944:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    1948:	80 81       	ld	r24, Z
    194a:	88 23       	and	r24, r24
    194c:	99 f0       	breq	.+38     	; 0x1974 <vTaskIncrementTick+0xe0>
    194e:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    1952:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    1956:	05 80       	ldd	r0, Z+5	; 0x05
    1958:	f6 81       	ldd	r31, Z+6	; 0x06
    195a:	e0 2d       	mov	r30, r0
    195c:	c6 81       	ldd	r28, Z+6	; 0x06
    195e:	d7 81       	ldd	r29, Z+7	; 0x07
    1960:	8a 81       	ldd	r24, Y+2	; 0x02
    1962:	9b 81       	ldd	r25, Y+3	; 0x03
    1964:	20 91 e6 08 	lds	r18, 0x08E6	; 0x8008e6 <xTickCount>
    1968:	30 91 e7 08 	lds	r19, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    196c:	28 17       	cp	r18, r24
    196e:	39 07       	cpc	r19, r25
    1970:	f8 f4       	brcc	.+62     	; 0x19b0 <vTaskIncrementTick+0x11c>
    1972:	19 c0       	rjmp	.+50     	; 0x19a6 <vTaskIncrementTick+0x112>
    1974:	8f ef       	ldi	r24, 0xFF	; 255
    1976:	9f ef       	ldi	r25, 0xFF	; 255
    1978:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    197c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1980:	48 c0       	rjmp	.+144    	; 0x1a12 <vTaskIncrementTick+0x17e>
    1982:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    1986:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    198a:	05 80       	ldd	r0, Z+5	; 0x05
    198c:	f6 81       	ldd	r31, Z+6	; 0x06
    198e:	e0 2d       	mov	r30, r0
    1990:	c6 81       	ldd	r28, Z+6	; 0x06
    1992:	d7 81       	ldd	r29, Z+7	; 0x07
    1994:	8a 81       	ldd	r24, Y+2	; 0x02
    1996:	9b 81       	ldd	r25, Y+3	; 0x03
    1998:	20 91 e6 08 	lds	r18, 0x08E6	; 0x8008e6 <xTickCount>
    199c:	30 91 e7 08 	lds	r19, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    19a0:	28 17       	cp	r18, r24
    19a2:	39 07       	cpc	r19, r25
    19a4:	28 f4       	brcc	.+10     	; 0x19b0 <vTaskIncrementTick+0x11c>
    19a6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    19aa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    19ae:	31 c0       	rjmp	.+98     	; 0x1a12 <vTaskIncrementTick+0x17e>
    19b0:	8e 01       	movw	r16, r28
    19b2:	0e 5f       	subi	r16, 0xFE	; 254
    19b4:	1f 4f       	sbci	r17, 0xFF	; 255
    19b6:	c8 01       	movw	r24, r16
    19b8:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
    19bc:	8c 89       	ldd	r24, Y+20	; 0x14
    19be:	9d 89       	ldd	r25, Y+21	; 0x15
    19c0:	89 2b       	or	r24, r25
    19c2:	21 f0       	breq	.+8      	; 0x19cc <vTaskIncrementTick+0x138>
    19c4:	ce 01       	movw	r24, r28
    19c6:	0c 96       	adiw	r24, 0x0c	; 12
    19c8:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
    19cc:	8e 89       	ldd	r24, Y+22	; 0x16
    19ce:	90 91 e4 08 	lds	r25, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    19d2:	98 17       	cp	r25, r24
    19d4:	10 f4       	brcc	.+4      	; 0x19da <vTaskIncrementTick+0x146>
    19d6:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <uxTopReadyPriority>
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	9c 01       	movw	r18, r24
    19de:	22 0f       	add	r18, r18
    19e0:	33 1f       	adc	r19, r19
    19e2:	22 0f       	add	r18, r18
    19e4:	33 1f       	adc	r19, r19
    19e6:	22 0f       	add	r18, r18
    19e8:	33 1f       	adc	r19, r19
    19ea:	82 0f       	add	r24, r18
    19ec:	93 1f       	adc	r25, r19
    19ee:	b8 01       	movw	r22, r16
    19f0:	8e 5e       	subi	r24, 0xEE	; 238
    19f2:	96 4f       	sbci	r25, 0xF6	; 246
    19f4:	0e 94 b4 00 	call	0x168	; 0x168 <vListInsertEnd>
    19f8:	e0 91 fe 08 	lds	r30, 0x08FE	; 0x8008fe <pxDelayedTaskList>
    19fc:	f0 91 ff 08 	lds	r31, 0x08FF	; 0x8008ff <pxDelayedTaskList+0x1>
    1a00:	80 81       	ld	r24, Z
    1a02:	81 11       	cpse	r24, r1
    1a04:	be cf       	rjmp	.-132    	; 0x1982 <vTaskIncrementTick+0xee>
    1a06:	b6 cf       	rjmp	.-148    	; 0x1974 <vTaskIncrementTick+0xe0>
    1a08:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <uxMissedTicks>
    1a0c:	8f 5f       	subi	r24, 0xFF	; 255
    1a0e:	80 93 e1 08 	sts	0x08E1, r24	; 0x8008e1 <uxMissedTicks>
    1a12:	df 91       	pop	r29
    1a14:	cf 91       	pop	r28
    1a16:	1f 91       	pop	r17
    1a18:	0f 91       	pop	r16
    1a1a:	08 95       	ret

00001a1c <xTaskResumeAll>:
    1a1c:	cf 92       	push	r12
    1a1e:	df 92       	push	r13
    1a20:	ef 92       	push	r14
    1a22:	ff 92       	push	r15
    1a24:	0f 93       	push	r16
    1a26:	1f 93       	push	r17
    1a28:	cf 93       	push	r28
    1a2a:	df 93       	push	r29
    1a2c:	0f b6       	in	r0, 0x3f	; 63
    1a2e:	f8 94       	cli
    1a30:	0f 92       	push	r0
    1a32:	80 91 e2 08 	lds	r24, 0x08E2	; 0x8008e2 <uxSchedulerSuspended>
    1a36:	81 50       	subi	r24, 0x01	; 1
    1a38:	80 93 e2 08 	sts	0x08E2, r24	; 0x8008e2 <uxSchedulerSuspended>
    1a3c:	80 91 e2 08 	lds	r24, 0x08E2	; 0x8008e2 <uxSchedulerSuspended>
    1a40:	81 11       	cpse	r24, r1
    1a42:	62 c0       	rjmp	.+196    	; 0x1b08 <xTaskResumeAll+0xec>
    1a44:	80 91 e8 08 	lds	r24, 0x08E8	; 0x8008e8 <uxCurrentNumberOfTasks>
    1a48:	81 11       	cpse	r24, r1
    1a4a:	32 c0       	rjmp	.+100    	; 0x1ab0 <xTaskResumeAll+0x94>
    1a4c:	60 c0       	rjmp	.+192    	; 0x1b0e <xTaskResumeAll+0xf2>
    1a4e:	d7 01       	movw	r26, r14
    1a50:	15 96       	adiw	r26, 0x05	; 5
    1a52:	ed 91       	ld	r30, X+
    1a54:	fc 91       	ld	r31, X
    1a56:	16 97       	sbiw	r26, 0x06	; 6
    1a58:	c6 81       	ldd	r28, Z+6	; 0x06
    1a5a:	d7 81       	ldd	r29, Z+7	; 0x07
    1a5c:	ce 01       	movw	r24, r28
    1a5e:	0c 96       	adiw	r24, 0x0c	; 12
    1a60:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
    1a64:	8e 01       	movw	r16, r28
    1a66:	0e 5f       	subi	r16, 0xFE	; 254
    1a68:	1f 4f       	sbci	r17, 0xFF	; 255
    1a6a:	c8 01       	movw	r24, r16
    1a6c:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
    1a70:	8e 89       	ldd	r24, Y+22	; 0x16
    1a72:	90 91 e4 08 	lds	r25, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    1a76:	98 17       	cp	r25, r24
    1a78:	10 f4       	brcc	.+4      	; 0x1a7e <xTaskResumeAll+0x62>
    1a7a:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <uxTopReadyPriority>
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	9c 01       	movw	r18, r24
    1a82:	22 0f       	add	r18, r18
    1a84:	33 1f       	adc	r19, r19
    1a86:	22 0f       	add	r18, r18
    1a88:	33 1f       	adc	r19, r19
    1a8a:	22 0f       	add	r18, r18
    1a8c:	33 1f       	adc	r19, r19
    1a8e:	82 0f       	add	r24, r18
    1a90:	93 1f       	adc	r25, r19
    1a92:	b8 01       	movw	r22, r16
    1a94:	8e 5e       	subi	r24, 0xEE	; 238
    1a96:	96 4f       	sbci	r25, 0xF6	; 246
    1a98:	0e 94 b4 00 	call	0x168	; 0x168 <vListInsertEnd>
    1a9c:	e0 91 36 09 	lds	r30, 0x0936	; 0x800936 <pxCurrentTCB>
    1aa0:	f0 91 37 09 	lds	r31, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1aa4:	9e 89       	ldd	r25, Y+22	; 0x16
    1aa6:	86 89       	ldd	r24, Z+22	; 0x16
    1aa8:	98 17       	cp	r25, r24
    1aaa:	58 f0       	brcs	.+22     	; 0x1ac2 <xTaskResumeAll+0xa6>
    1aac:	dc 2c       	mov	r13, r12
    1aae:	09 c0       	rjmp	.+18     	; 0x1ac2 <xTaskResumeAll+0xa6>
    1ab0:	d1 2c       	mov	r13, r1
    1ab2:	0f 2e       	mov	r0, r31
    1ab4:	f3 ef       	ldi	r31, 0xF3	; 243
    1ab6:	ef 2e       	mov	r14, r31
    1ab8:	f8 e0       	ldi	r31, 0x08	; 8
    1aba:	ff 2e       	mov	r15, r31
    1abc:	f0 2d       	mov	r31, r0
    1abe:	cc 24       	eor	r12, r12
    1ac0:	c3 94       	inc	r12
    1ac2:	f7 01       	movw	r30, r14
    1ac4:	80 81       	ld	r24, Z
    1ac6:	81 11       	cpse	r24, r1
    1ac8:	c2 cf       	rjmp	.-124    	; 0x1a4e <xTaskResumeAll+0x32>
    1aca:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <uxMissedTicks>
    1ace:	88 23       	and	r24, r24
    1ad0:	79 f0       	breq	.+30     	; 0x1af0 <xTaskResumeAll+0xd4>
    1ad2:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <uxMissedTicks>
    1ad6:	88 23       	and	r24, r24
    1ad8:	91 f0       	breq	.+36     	; 0x1afe <xTaskResumeAll+0xe2>
    1ada:	dc de       	rcall	.-584    	; 0x1894 <vTaskIncrementTick>
    1adc:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <uxMissedTicks>
    1ae0:	81 50       	subi	r24, 0x01	; 1
    1ae2:	80 93 e1 08 	sts	0x08E1, r24	; 0x8008e1 <uxMissedTicks>
    1ae6:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <uxMissedTicks>
    1aea:	81 11       	cpse	r24, r1
    1aec:	f6 cf       	rjmp	.-20     	; 0x1ada <xTaskResumeAll+0xbe>
    1aee:	07 c0       	rjmp	.+14     	; 0x1afe <xTaskResumeAll+0xe2>
    1af0:	f1 e0       	ldi	r31, 0x01	; 1
    1af2:	df 16       	cp	r13, r31
    1af4:	21 f0       	breq	.+8      	; 0x1afe <xTaskResumeAll+0xe2>
    1af6:	80 91 e0 08 	lds	r24, 0x08E0	; 0x8008e0 <xMissedYield>
    1afa:	81 30       	cpi	r24, 0x01	; 1
    1afc:	39 f4       	brne	.+14     	; 0x1b0c <xTaskResumeAll+0xf0>
    1afe:	10 92 e0 08 	sts	0x08E0, r1	; 0x8008e0 <xMissedYield>
    1b02:	ae dc       	rcall	.-1700   	; 0x1460 <vPortYield>
    1b04:	81 e0       	ldi	r24, 0x01	; 1
    1b06:	03 c0       	rjmp	.+6      	; 0x1b0e <xTaskResumeAll+0xf2>
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	01 c0       	rjmp	.+2      	; 0x1b0e <xTaskResumeAll+0xf2>
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	0f 90       	pop	r0
    1b10:	0f be       	out	0x3f, r0	; 63
    1b12:	df 91       	pop	r29
    1b14:	cf 91       	pop	r28
    1b16:	1f 91       	pop	r17
    1b18:	0f 91       	pop	r16
    1b1a:	ff 90       	pop	r15
    1b1c:	ef 90       	pop	r14
    1b1e:	df 90       	pop	r13
    1b20:	cf 90       	pop	r12
    1b22:	08 95       	ret

00001b24 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	ec 01       	movw	r28, r24
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
    1b2a:	89 2b       	or	r24, r25
    1b2c:	99 f0       	breq	.+38     	; 0x1b54 <vTaskDelay+0x30>
		{
			vTaskSuspendAll();
    1b2e:	ac de       	rcall	.-680    	; 0x1888 <vTaskSuspendAll>
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
    1b30:	80 91 e6 08 	lds	r24, 0x08E6	; 0x8008e6 <xTickCount>
    1b34:	90 91 e7 08 	lds	r25, 0x08E7	; 0x8008e7 <xTickCount+0x1>
    1b38:	c8 0f       	add	r28, r24
    1b3a:	d9 1f       	adc	r29, r25

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
    1b3c:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <pxCurrentTCB>
    1b40:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <pxCurrentTCB+0x1>
    1b44:	02 96       	adiw	r24, 0x02	; 2
    1b46:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
				prvAddCurrentTaskToDelayedList( xTimeToWake );
    1b4a:	ce 01       	movw	r24, r28
			}
			xAlreadyYielded = xTaskResumeAll();
    1b4c:	3c dd       	rcall	.-1416   	; 0x15c6 <prvAddCurrentTaskToDelayedList>
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
    1b4e:	66 df       	rcall	.-308    	; 0x1a1c <xTaskResumeAll>
    1b50:	81 11       	cpse	r24, r1
		{
			portYIELD_WITHIN_API();
    1b52:	01 c0       	rjmp	.+2      	; 0x1b56 <vTaskDelay+0x32>
    1b54:	85 dc       	rcall	.-1782   	; 0x1460 <vPortYield>
		}
	}
    1b56:	df 91       	pop	r29
    1b58:	cf 91       	pop	r28
    1b5a:	08 95       	ret

00001b5c <prvIdleTask>:
		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0U )
		{
			vTaskSuspendAll();
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    1b5c:	0f 2e       	mov	r0, r31
    1b5e:	fa ee       	ldi	r31, 0xEA	; 234
    1b60:	ef 2e       	mov	r14, r31
    1b62:	f8 e0       	ldi	r31, 0x08	; 8
    1b64:	ff 2e       	mov	r15, r31
    1b66:	f0 2d       	mov	r31, r0

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
    1b68:	c2 e1       	ldi	r28, 0x12	; 18
    1b6a:	d9 e0       	ldi	r29, 0x09	; 9
	{
		portBASE_TYPE xListIsEmpty;

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0U )
    1b6c:	80 91 e9 08 	lds	r24, 0x08E9	; 0x8008e9 <uxTasksDeleted>
    1b70:	88 23       	and	r24, r24
    1b72:	41 f1       	breq	.+80     	; 0x1bc4 <prvIdleTask+0x68>
		{
			vTaskSuspendAll();
    1b74:	89 de       	rcall	.-750    	; 0x1888 <vTaskSuspendAll>
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    1b76:	d7 01       	movw	r26, r14
			xTaskResumeAll();
    1b78:	1c 91       	ld	r17, X
    1b7a:	50 df       	rcall	.-352    	; 0x1a1c <xTaskResumeAll>

			if( xListIsEmpty == pdFALSE )
    1b7c:	11 23       	and	r17, r17
    1b7e:	11 f1       	breq	.+68     	; 0x1bc4 <prvIdleTask+0x68>
			{
				tskTCB *pxTCB;

				taskENTER_CRITICAL();
    1b80:	0f b6       	in	r0, 0x3f	; 63
    1b82:	f8 94       	cli
    1b84:	0f 92       	push	r0
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
    1b86:	d7 01       	movw	r26, r14
    1b88:	15 96       	adiw	r26, 0x05	; 5
    1b8a:	ed 91       	ld	r30, X+
    1b8c:	fc 91       	ld	r31, X
    1b8e:	16 97       	sbiw	r26, 0x06	; 6
    1b90:	06 81       	ldd	r16, Z+6	; 0x06
    1b92:	17 81       	ldd	r17, Z+7	; 0x07
					vListRemove( &( pxTCB->xGenericListItem ) );
    1b94:	c8 01       	movw	r24, r16
    1b96:	02 96       	adiw	r24, 0x02	; 2
    1b98:	0e 94 16 01 	call	0x22c	; 0x22c <vListRemove>
					--uxCurrentNumberOfTasks;
    1b9c:	80 91 e8 08 	lds	r24, 0x08E8	; 0x8008e8 <uxCurrentNumberOfTasks>
    1ba0:	81 50       	subi	r24, 0x01	; 1
    1ba2:	80 93 e8 08 	sts	0x08E8, r24	; 0x8008e8 <uxCurrentNumberOfTasks>
					--uxTasksDeleted;
    1ba6:	80 91 e9 08 	lds	r24, 0x08E9	; 0x8008e9 <uxTasksDeleted>
    1baa:	81 50       	subi	r24, 0x01	; 1
    1bac:	80 93 e9 08 	sts	0x08E9, r24	; 0x8008e9 <uxTasksDeleted>
				}
				taskEXIT_CRITICAL();
    1bb0:	0f 90       	pop	r0
    1bb2:	0f be       	out	0x3f, r0	; 63
		want to allocate and clean RAM statically. */
		portCLEAN_UP_TCB( pxTCB );

		/* Free up the memory allocated by the scheduler for the task.  It is up to
		the task to free any memory allocated at the application level. */
		vPortFreeAligned( pxTCB->pxStack );
    1bb4:	f8 01       	movw	r30, r16
    1bb6:	87 89       	ldd	r24, Z+23	; 0x17
    1bb8:	90 8d       	ldd	r25, Z+24	; 0x18
    1bba:	0e 94 a1 00 	call	0x142	; 0x142 <vPortFree>
		vPortFree( pxTCB );
    1bbe:	c8 01       	movw	r24, r16
    1bc0:	0e 94 a1 00 	call	0x142	; 0x142 <vPortFree>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
    1bc4:	88 81       	ld	r24, Y
    1bc6:	82 30       	cpi	r24, 0x02	; 2
			{
				taskYIELD();
    1bc8:	88 f2       	brcs	.-94     	; 0x1b6c <prvIdleTask+0x10>
    1bca:	4a dc       	rcall	.-1900   	; 0x1460 <vPortYield>
    1bcc:	cf cf       	rjmp	.-98     	; 0x1b6c <prvIdleTask+0x10>

00001bce <vTaskSwitchContext>:
#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
    1bce:	80 91 e2 08 	lds	r24, 0x08E2	; 0x8008e2 <uxSchedulerSuspended>
    1bd2:	81 11       	cpse	r24, r1
    1bd4:	13 c0       	rjmp	.+38     	; 0x1bfc <vTaskSwitchContext+0x2e>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
    1bd6:	80 91 e4 08 	lds	r24, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	fc 01       	movw	r30, r24
    1bde:	ee 0f       	add	r30, r30
    1be0:	ff 1f       	adc	r31, r31
    1be2:	ee 0f       	add	r30, r30
    1be4:	ff 1f       	adc	r31, r31
    1be6:	ee 0f       	add	r30, r30
    1be8:	ff 1f       	adc	r31, r31
    1bea:	8e 0f       	add	r24, r30
    1bec:	9f 1f       	adc	r25, r31
    1bee:	fc 01       	movw	r30, r24
    1bf0:	ee 5e       	subi	r30, 0xEE	; 238
    1bf2:	f6 4f       	sbci	r31, 0xF6	; 246
    1bf4:	80 81       	ld	r24, Z
    1bf6:	88 23       	and	r24, r24
    1bf8:	29 f0       	breq	.+10     	; 0x1c04 <vTaskSwitchContext+0x36>
    1bfa:	1b c0       	rjmp	.+54     	; 0x1c32 <vTaskSwitchContext+0x64>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
    1bfc:	81 e0       	ldi	r24, 0x01	; 1
    1bfe:	80 93 e0 08 	sts	0x08E0, r24	; 0x8008e0 <xMissedYield>
    1c02:	08 95       	ret
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
    1c04:	80 91 e4 08 	lds	r24, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    1c08:	81 50       	subi	r24, 0x01	; 1
    1c0a:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <uxTopReadyPriority>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
    1c0e:	80 91 e4 08 	lds	r24, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	fc 01       	movw	r30, r24
    1c16:	ee 0f       	add	r30, r30
    1c18:	ff 1f       	adc	r31, r31
    1c1a:	ee 0f       	add	r30, r30
    1c1c:	ff 1f       	adc	r31, r31
    1c1e:	ee 0f       	add	r30, r30
    1c20:	ff 1f       	adc	r31, r31
    1c22:	8e 0f       	add	r24, r30
    1c24:	9f 1f       	adc	r25, r31
    1c26:	fc 01       	movw	r30, r24
    1c28:	ee 5e       	subi	r30, 0xEE	; 238
    1c2a:	f6 4f       	sbci	r31, 0xF6	; 246
    1c2c:	80 81       	ld	r24, Z
    1c2e:	88 23       	and	r24, r24
    1c30:	49 f3       	breq	.-46     	; 0x1c04 <vTaskSwitchContext+0x36>
			--uxTopReadyPriority;
		}
	
		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
		same priority get an equal share of the processor time. */
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
    1c32:	80 91 e4 08 	lds	r24, 0x08E4	; 0x8008e4 <uxTopReadyPriority>
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	9c 01       	movw	r18, r24
    1c3a:	22 0f       	add	r18, r18
    1c3c:	33 1f       	adc	r19, r19
    1c3e:	22 0f       	add	r18, r18
    1c40:	33 1f       	adc	r19, r19
    1c42:	22 0f       	add	r18, r18
    1c44:	33 1f       	adc	r19, r19
    1c46:	28 0f       	add	r18, r24
    1c48:	39 1f       	adc	r19, r25
    1c4a:	d9 01       	movw	r26, r18
    1c4c:	ae 5e       	subi	r26, 0xEE	; 238
    1c4e:	b6 4f       	sbci	r27, 0xF6	; 246
    1c50:	11 96       	adiw	r26, 0x01	; 1
    1c52:	ed 91       	ld	r30, X+
    1c54:	fc 91       	ld	r31, X
    1c56:	12 97       	sbiw	r26, 0x02	; 2
    1c58:	02 80       	ldd	r0, Z+2	; 0x02
    1c5a:	f3 81       	ldd	r31, Z+3	; 0x03
    1c5c:	e0 2d       	mov	r30, r0
    1c5e:	12 96       	adiw	r26, 0x02	; 2
    1c60:	fc 93       	st	X, r31
    1c62:	ee 93       	st	-X, r30
    1c64:	11 97       	sbiw	r26, 0x01	; 1
    1c66:	2b 5e       	subi	r18, 0xEB	; 235
    1c68:	36 4f       	sbci	r19, 0xF6	; 246
    1c6a:	e2 17       	cp	r30, r18
    1c6c:	f3 07       	cpc	r31, r19
    1c6e:	29 f4       	brne	.+10     	; 0x1c7a <vTaskSwitchContext+0xac>
    1c70:	22 81       	ldd	r18, Z+2	; 0x02
    1c72:	33 81       	ldd	r19, Z+3	; 0x03
    1c74:	fd 01       	movw	r30, r26
    1c76:	32 83       	std	Z+2, r19	; 0x02
    1c78:	21 83       	std	Z+1, r18	; 0x01
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	ee 0f       	add	r30, r30
    1c7e:	ff 1f       	adc	r31, r31
    1c80:	ee 0f       	add	r30, r30
    1c82:	ff 1f       	adc	r31, r31
    1c84:	ee 0f       	add	r30, r30
    1c86:	ff 1f       	adc	r31, r31
    1c88:	8e 0f       	add	r24, r30
    1c8a:	9f 1f       	adc	r25, r31
    1c8c:	fc 01       	movw	r30, r24
    1c8e:	ee 5e       	subi	r30, 0xEE	; 238
    1c90:	f6 4f       	sbci	r31, 0xF6	; 246
    1c92:	01 80       	ldd	r0, Z+1	; 0x01
    1c94:	f2 81       	ldd	r31, Z+2	; 0x02
    1c96:	e0 2d       	mov	r30, r0
    1c98:	86 81       	ldd	r24, Z+6	; 0x06
    1c9a:	97 81       	ldd	r25, Z+7	; 0x07
    1c9c:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <pxCurrentTCB+0x1>
    1ca0:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <pxCurrentTCB>
    1ca4:	08 95       	ret

00001ca6 <__tablejump2__>:
    1ca6:	ee 0f       	add	r30, r30
    1ca8:	ff 1f       	adc	r31, r31
    1caa:	00 24       	eor	r0, r0
    1cac:	00 1c       	adc	r0, r0
    1cae:	0b be       	out	0x3b, r0	; 59
    1cb0:	07 90       	elpm	r0, Z+
    1cb2:	f6 91       	elpm	r31, Z
    1cb4:	e0 2d       	mov	r30, r0
    1cb6:	09 94       	ijmp

00001cb8 <memset>:
    1cb8:	dc 01       	movw	r26, r24
    1cba:	01 c0       	rjmp	.+2      	; 0x1cbe <memset+0x6>
    1cbc:	6d 93       	st	X+, r22
    1cbe:	41 50       	subi	r20, 0x01	; 1
    1cc0:	50 40       	sbci	r21, 0x00	; 0
    1cc2:	e0 f7       	brcc	.-8      	; 0x1cbc <memset+0x4>
    1cc4:	08 95       	ret

00001cc6 <strncpy>:
    1cc6:	fb 01       	movw	r30, r22
    1cc8:	dc 01       	movw	r26, r24
    1cca:	41 50       	subi	r20, 0x01	; 1
    1ccc:	50 40       	sbci	r21, 0x00	; 0
    1cce:	48 f0       	brcs	.+18     	; 0x1ce2 <strncpy+0x1c>
    1cd0:	01 90       	ld	r0, Z+
    1cd2:	0d 92       	st	X+, r0
    1cd4:	00 20       	and	r0, r0
    1cd6:	c9 f7       	brne	.-14     	; 0x1cca <strncpy+0x4>
    1cd8:	01 c0       	rjmp	.+2      	; 0x1cdc <strncpy+0x16>
    1cda:	1d 92       	st	X+, r1
    1cdc:	41 50       	subi	r20, 0x01	; 1
    1cde:	50 40       	sbci	r21, 0x00	; 0
    1ce0:	e0 f7       	brcc	.-8      	; 0x1cda <strncpy+0x14>
    1ce2:	08 95       	ret

00001ce4 <eeprom_read_byte>:
    1ce4:	f9 99       	sbic	0x1f, 1	; 31
    1ce6:	fe cf       	rjmp	.-4      	; 0x1ce4 <eeprom_read_byte>
    1ce8:	92 bd       	out	0x22, r25	; 34
    1cea:	81 bd       	out	0x21, r24	; 33
    1cec:	f8 9a       	sbi	0x1f, 0	; 31
    1cee:	99 27       	eor	r25, r25
    1cf0:	80 b5       	in	r24, 0x20	; 32
    1cf2:	08 95       	ret

00001cf4 <eeprom_write_byte>:
    1cf4:	26 2f       	mov	r18, r22

00001cf6 <eeprom_write_r18>:
    1cf6:	f9 99       	sbic	0x1f, 1	; 31
    1cf8:	fe cf       	rjmp	.-4      	; 0x1cf6 <eeprom_write_r18>
    1cfa:	1f ba       	out	0x1f, r1	; 31
    1cfc:	92 bd       	out	0x22, r25	; 34
    1cfe:	81 bd       	out	0x21, r24	; 33
    1d00:	20 bd       	out	0x20, r18	; 32
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	fa 9a       	sbi	0x1f, 2	; 31
    1d08:	f9 9a       	sbi	0x1f, 1	; 31
    1d0a:	0f be       	out	0x3f, r0	; 63
    1d0c:	01 96       	adiw	r24, 0x01	; 1
    1d0e:	08 95       	ret

00001d10 <_exit>:
    1d10:	f8 94       	cli

00001d12 <__stop_program>:
    1d12:	ff cf       	rjmp	.-2      	; 0x1d12 <__stop_program>
